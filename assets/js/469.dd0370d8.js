(window.webpackJsonp=window.webpackJsonp||[]).push([[469],{902:function(t,e,r){"use strict";r.r(e);var o=r(2),n=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react-router"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-router"}},[t._v("#")]),t._v(" react-router")]),t._v(" "),e("h2",{attrs:{id:"react-router与react-router-dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-router与react-router-dom"}},[t._v("#")]),t._v(" react-router与react-router-dom")]),t._v(" "),e("h3",{attrs:{id:"_1、react-router与react-router-dom是干什么的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、react-router与react-router-dom是干什么的"}},[t._v("#")]),t._v(" 1、react-router与react-router-dom是干什么的？")]),t._v(" "),e("p",[e("code",[t._v("react-router")]),t._v(": 实现了路由的核心功能\n"),e("code",[t._v("react-router-dom")]),t._v(": 基于"),e("code",[t._v("react-router")]),t._v("，加入了在浏览器运行环境下的一些功能，例如："),e("code",[t._v("Link")]),t._v("组件，会渲染一个"),e("code",[t._v("a")]),t._v("标签，"),e("a",{attrs:{href:"https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/modules/Link.js#L76",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link组件源码"),e("code",[t._v("a")]),t._v("标签行"),e("OutboundLink")],1),t._v("; "),e("code",[t._v("BrowserRouter")]),t._v("和"),e("code",[t._v("HashRouter")]),t._v("组件，前者使用"),e("code",[t._v("pushState")]),t._v("和"),e("code",[t._v("popState")]),t._v("事件构建路由，后者使用"),e("code",[t._v("window.location.hash")]),t._v("和"),e("code",[t._v("hashchange")]),t._v("事件构建路由。")]),t._v(" "),e("h3",{attrs:{id:"_2、从源码分析react-router与react-router-dom有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、从源码分析react-router与react-router-dom有什么区别"}},[t._v("#")]),t._v(" 2、从源码分析react-router与react-router-dom有什么区别？")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// Type definitions for React Router 5.1\n// Project: https://github.com/ReactTraining/react-router\n// Definitions by: Huy Nguyen <https://github.com/huy-nguyen>\n//                 Philip Jackson <https://github.com/p-jackson>\n//                 John Reilly <https://github.com/johnnyreilly>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n//                 Daniel Nixon <https://github.com/danielnixon>\n//                 Tony Ward <https://github.com/ynotdraw>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\nimport { match } from 'react-router';\nimport * as React from 'react';\nimport * as H from 'history';\n\nexport {\n    generatePath,\n    Prompt,\n    MemoryRouter,\n    RedirectProps,\n    Redirect,\n    RouteChildrenProps,\n    RouteComponentProps,\n    RouteProps,\n    Route,\n    Router,\n    StaticRouter,\n    SwitchProps,\n    Switch,\n    match,\n    matchPath,\n    withRouter,\n    RouterChildContext,\n    useHistory,\n    useLocation,\n    useParams,\n    useRouteMatch,\n} from 'react-router';\n\nexport interface BrowserRouterProps {\n    basename?: string;\n    getUserConfirmation?: (message: string, callback: (ok: boolean) => void) => void;\n    forceRefresh?: boolean;\n    keyLength?: number;\n}\nexport class BrowserRouter extends React.Component<BrowserRouterProps, any> {}\n\nexport interface HashRouterProps {\n    basename?: string;\n    getUserConfirmation?: (message: string, callback: (ok: boolean) => void) => void;\n    hashType?: 'slash' | 'noslash' | 'hashbang';\n}\nexport class HashRouter extends React.Component<HashRouterProps, any> {}\n\nexport interface LinkProps<S = H.LocationState> extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n    component?: React.ComponentType<any>;\n    to: H.LocationDescriptor<S> | ((location: H.Location<S>) => H.LocationDescriptor<S>);\n    replace?: boolean;\n    innerRef?: React.Ref<HTMLAnchorElement>;\n}\nexport function Link<S = H.LocationState>(\n    // TODO: Define this as ...params: Parameters<Link<S>> when only TypeScript >= 3.1 support is needed.\n    props: React.PropsWithoutRef<LinkProps<S>> & React.RefAttributes<HTMLAnchorElement>,\n): ReturnType<Link<S>>;\nexport interface Link<S = H.LocationState>\n    extends React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<LinkProps<S>> & React.RefAttributes<HTMLAnchorElement>\n    > {}\n\nexport interface NavLinkProps<S = H.LocationState> extends LinkProps<S> {\n    activeClassName?: string;\n    activeStyle?: React.CSSProperties;\n    exact?: boolean;\n    strict?: boolean;\n    isActive?<Params extends { [K in keyof Params]?: string }>(match: match<Params>, location: H.Location<S>): boolean;\n    location?: H.Location<S>;\n}\nexport function NavLink<S = H.LocationState>(\n    // TODO: Define this as ...params: Parameters<NavLink<S>> when only TypeScript >= 3.1 support is needed.\n    props: React.PropsWithoutRef<NavLinkProps<S>> & React.RefAttributes<HTMLAnchorElement>,\n): ReturnType<NavLink<S>>;\nexport interface NavLink<S = H.LocationState>\n    extends React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<NavLinkProps<S>> & React.RefAttributes<HTMLAnchorElement>\n    > {}\n")])])]),e("p",[t._v("可以看出"),e("code",[t._v("react-router-dom")]),t._v("是依赖于"),e("code",[t._v("react-router")]),t._v("的，其中"),e("code",[t._v("Switch、Route、Router、Redirect")]),t._v("等组件是直接引入"),e("code",[t._v("react-router")]),t._v("中的")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export { Switch, Route, Router, Redirect } from 'react-router'\n")])])]),e("p",[t._v("除此之外，"),e("code",[t._v("react-router-dom")]),t._v("还另外新增了"),e("code",[t._v("Link、BrowserRouter、HashRouter")]),t._v("组件。")]),t._v(" "),e("p",[t._v("因此，在引入"),e("code",[t._v("react-router-dom")]),t._v("后不需要显性引入"),e("code",[t._v("react-router")]),t._v("，"),e("code",[t._v("react-router-dom")]),t._v("依赖"),e("code",[t._v("react-router")]),t._v("，"),e("code",[t._v("npm")]),t._v("都会将他们安装。")]),t._v(" "),e("h4",{attrs:{id:"react-router3-x与react-router-dom区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-router3-x与react-router-dom区别"}},[t._v("#")]),t._v(" react-router3.x与react-router-dom区别")]),t._v(" "),e("p",[t._v("react-router3.x版本下路由采用集中式配置，UI组件和路由是分开的。react-router4.x版本下路由路由采用分散式配置，\n路由嵌套在UI组件当中，更加契合组件化思想（组件中的路由也应该包含在组件之中）。")]),t._v(" "),e("h3",{attrs:{id:"_3、在react-router3-x是如下配置路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、在react-router3-x是如下配置路由"}},[t._v("#")]),t._v(" 3、在react-router3.x是如下配置路由：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// index.js\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Router, hashHistory } from 'react-router'\nimport routes from './module/routes'\n\nrender(<Router routes={routes} history={hashHistory}></Router>, document.getElementById('app'))\n// App.js\nimport React from 'react'\nimport { Link } from 'react-router'\n\nexport default function App(props) {\n  return <div>\n      <Link to='/About'>About</Link>\n      <br />\n      <Link to='/Repos'>Repos</Link>\n\n      { props.children }\n    </div>\n}\n// routes.js\nimport React from 'react'\nimport { Route, IndexRoute } from 'react-router'\nimport App from './App'\nimport Home from './Home'\nimport About from \"./About\"\nimport Repos from './Repos'\nimport Repo from './Repo'\n\nexport default (\n  <Route exact path='/' component={App}>\n    <IndexRoute component={Home}></IndexRoute>\n    <Route path='/About' component={About}></Route>\n    <Route path='/Repos' component={Repos}>\n      <Route path='/Repos/:username/:repos' component={Repo}></Route>\n    </Route>\n  </Route>\n)\n")])])]),e("h4",{attrs:{id:"在react-router-dom是如下配置路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在react-router-dom是如下配置路由"}},[t._v("#")]),t._v(" 在react-router-dom是如下配置路由：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// App.js\nimport React from 'react'\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom'\nimport Home from './Home'\nimport About from './About'\nimport Repos from './Repos'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <ul>\n            <li><NavLink to='/About' activeClassName=\"active\">About</NavLink></li>\n            <li><NavLink to='/Repos' activeClassName=\"active\">Repos</NavLink></li>\n          </ul>\n          <Route exact path='/' component={Home} /> // 指定默认路由，用Redirect组件也可以实现\n          <Route path='/About' component={About}></Route>\n          <Route path='/Repos' component={Repos}></Route>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n")])])]),e("p",[t._v("*"),e("strong",[t._v("注意：Route组件必须由Router、HashRouter、BrowserRouter组件包裹*")])]),t._v(" "),e("p",[t._v("参考："),e("a",{attrs:{href:"https://www.jianshu.com/p/595a13c1bbb8",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/595..."),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://blog.csdn.net/weixin_37242696/article/details/80738392",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/weixin_..."),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);