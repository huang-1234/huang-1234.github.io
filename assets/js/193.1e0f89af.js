(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{625:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"c-简介以及基本类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-简介以及基本类型"}},[t._v("#")]),t._v(" C++ 简介以及基本类型")]),t._v(" "),a("p",[t._v("C++ 是一种静态类型的、编译式的、通用的、大小写敏感的、不规则的编程语言，支持过程化编程、面向对象编程和泛型编程。")]),t._v(" "),a("p",[t._v("C++ 被认为是一种"),a("strong",[t._v("中级")]),t._v("语言，它综合了高级语言和低级语言的特点。")]),t._v(" "),a("p",[t._v("C++ 是由 Bjarne Stroustrup 于 1979 年在新泽西州美利山贝尔实验室开始设计开发的。C++ 进一步扩充和完善了 C 语言，最初命名为带类的C，后来在 1983 年更名为 C++。")]),t._v(" "),a("p",[t._v("C++ 是 C 的一个超集，事实上，任何合法的 C 程序都是合法的 C++ 程序。")]),t._v(" "),a("p",[t._v("**注意：**使用静态类型的编程语言是在编译时执行类型检查，而不是在运行时执行类型检查。")]),t._v(" "),a("h2",{attrs:{id:"面向对象程序设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象程序设计"}},[t._v("#")]),t._v(" 面向对象程序设计")]),t._v(" "),a("p",[t._v("C++ 完全支持面向对象的程序设计，包括面向对象开发的四大特性：")]),t._v(" "),a("ul",[a("li",[t._v("封装")]),t._v(" "),a("li",[t._v("抽象")]),t._v(" "),a("li",[t._v("继承")]),t._v(" "),a("li",[t._v("多态")])]),t._v(" "),a("h2",{attrs:{id:"标准库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准库"}},[t._v("#")]),t._v(" 标准库")]),t._v(" "),a("p",[t._v("标准的 C++ 由三个重要部分组成：")]),t._v(" "),a("ul",[a("li",[t._v("核心语言，提供了所有构件块，包括变量、数据类型和常量，等等。")]),t._v(" "),a("li",[t._v("C++ 标准库，提供了大量的函数，用于操作文件、字符串等。")]),t._v(" "),a("li",[t._v("标准模板库（STL），提供了大量的方法，用于操作数据结构等。")])]),t._v(" "),a("h2",{attrs:{id:"ansi-标准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ansi-标准"}},[t._v("#")]),t._v(" ANSI 标准")]),t._v(" "),a("p",[t._v("ANSI 标准是为了确保 C++ 的便携性 —— 您所编写的代码在 Mac、UNIX、Windows、Alpha 计算机上都能通过编译。")]),t._v(" "),a("p",[t._v("由于 ANSI 标准已稳定使用了很长的时间，所有主要的 C++ 编译器的制造商都支持 ANSI 标准。")]),t._v(" "),a("h2",{attrs:{id:"学习-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习-c"}},[t._v("#")]),t._v(" 学习 C++")]),t._v(" "),a("p",[t._v("学习 C++，关键是要理解概念，而不应过于深究语言的技术细节。")]),t._v(" "),a("p",[t._v("学习程序设计语言的目的是为了成为一个更好的程序员，也就是说，是为了能更有效率地设计和实现新系统，以及维护旧系统。")]),t._v(" "),a("p",[t._v("C++ 支持多种编程风格。您可以使用 Fortran、C、Smalltalk 等任意一种语言的编程风格来编写代码。每种风格都能有效地保证运行时间效率和空间效率。")]),t._v(" "),a("h2",{attrs:{id:"c-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-的使用"}},[t._v("#")]),t._v(" C++ 的使用")]),t._v(" "),a("p",[t._v("基本上每个应用程序领域的程序员都有使用 C++。")]),t._v(" "),a("p",[t._v("C++ 通常用于编写设备驱动程序和其他要求实时性的直接操作硬件的软件。")]),t._v(" "),a("p",[t._v("C++ 广泛用于教学和研究。")]),t._v(" "),a("p",[t._v("任何一个使用苹果电脑或 Windows PC 机的用户都在间接地使用 C++，因为这些系统的主要用户接口是使用 C++ 编写的。")]),t._v(" "),a("h2",{attrs:{id:"g-应用说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#g-应用说明"}},[t._v("#")]),t._v(" g++ 应用说明")]),t._v(" "),a("p",[t._v("程序 g++ 是将 gcc 默认语言设为 C++ 的一个特殊的版本，链接时它自动使用 C++ 标准库而不用 C 标准库。通过遵循源码的命名规范并指定对应库的名字，用 gcc 来编译链接 C++ 程序是可行的，如下例所示：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ gcc main.cpp -lstdc++ "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" main\n")])])]),a("p",[t._v("下面是一个保存在文件 helloworld.cpp 中一个简单的 C++ 程序的代码：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world!"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("最简单的编译方式：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ g++ helloworld.cpp\n")])])]),a("p",[t._v("由于命令行中未指定可执行程序的文件名，编译器采用默认的 a.out。程序可以这样来运行：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./a.out\nHello, world"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),a("p",[t._v("通常我们使用 "),a("strong",[t._v("-o")]),t._v(" 选项指定可执行程序的文件名，以下实例生成一个 helloworld 的可执行文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ g++ helloworld.cpp "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" helloworld\n")])])]),a("p",[t._v("执行 helloworld:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./helloworld\nHello, world"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),a("p",[t._v("如果是多个 C++ 代码文件，如 runoob1.cpp、runoob2.cpp，编译命令如下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ g++ runoob1.cpp runoob2.cpp "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" runoob\n")])])]),a("p",[t._v("生成一个 runoob 可执行文件。")]),t._v(" "),a("p",[t._v("g++ 有些系统默认是使用 C++98，我们可以指定使用 C++11 来编译 main.cpp 文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("g++ "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Wall")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-std")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c++11 main.cpp\n")])])]),a("h3",{attrs:{id:"g-常用命令选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#g-常用命令选项"}},[t._v("#")]),t._v(" g++ 常用命令选项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("选项")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-ansi")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("只支持 ANSI 标准的 C 语法。这一选项将禁止 GNU C 的某些特色， 例如 asm 或 typeof 关键词。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-c")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("只编译并生成目标文件。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-DMACRO")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('以字符串"1"定义 MACRO 宏。')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-DMACRO=DEFN")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('以字符串"DEFN"定义 MACRO 宏。')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-E")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("只运行 C 预编译器。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-g")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("生成调试信息。GNU 调试器可利用该信息。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-IDIRECTORY")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定额外的头文件搜索路径DIRECTORY。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-LDIRECTORY")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定额外的函数库搜索路径DIRECTORY。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-lLIBRARY")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("连接时搜索指定的函数库LIBRARY。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-m486")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("针对 486 进行代码优化。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-o")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("FILE 生成指定的输出文件。用在生成可执行文件时。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-O0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不进行优化处理。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-O")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("或 -O1 优化生成代码。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-O2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("进一步优化。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-O3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("比 -O2 更进一步优化，包括 inline 函数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-shared")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("生成共享目标文件。通常用在建立共享库时。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-static")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("禁止使用共享连接。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-UMACRO")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("取消对 MACRO 宏的定义。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-w")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不生成任何警告信息。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-Wall")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("生成所有警告信息。")])])])]),t._v(" "),a("h1",{attrs:{id:"cpp-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpp-数据类型"}},[t._v("#")]),t._v(" cpp 数据类型")]),t._v(" "),a("p",[t._v("使用编程语言进行编程时，需要用到各种变量来存储各种信息。变量保留的是它所存储的值的内存位置。这意味着，当您创建一个变量时，就会在内存中保留一些空间。")]),t._v(" "),a("p",[t._v("您可能需要存储各种数据类型（比如字符型、宽字符型、整型、浮点型、双浮点型、布尔型等）的信息，操作系统会根据变量的数据类型，来分配内存和决定在保留内存中存储什么。")]),t._v(" "),a("h2",{attrs:{id:"基本的内置类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本的内置类型"}},[t._v("#")]),t._v(" 基本的内置类型")]),t._v(" "),a("p",[t._v("cpp 为程序员提供了种类丰富的内置数据类型和用户自定义的数据类型。下表列出了七种基本的 cpp 数据类型：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("布尔型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("bool")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("字符型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("char")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("int")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("float")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("双浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("double")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("无类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("void")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("宽字符型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("wchar_t")])])])]),t._v(" "),a("p",[t._v("其实 wchar_t 是这样来的：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("typedef short int wchar_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("所以 wchar_t 实际上的空间是和 short int 一样。")]),t._v(" "),a("p",[t._v("一些基本类型可以使用一个或多个类型修饰符进行修饰：")]),t._v(" "),a("ul",[a("li",[t._v("signed")]),t._v(" "),a("li",[t._v("unsigned")]),t._v(" "),a("li",[t._v("short")]),t._v(" "),a("li",[t._v("long")])]),t._v(" "),a("p",[t._v("下表显示了各种变量类型在内存中存储值时需要占用的内存，以及该类型的变量所能存储的最大值和最小值。")]),t._v(" "),a("p",[t._v("**注意：**不同系统会有所差异，一字节为 8 位。")]),t._v(" "),a("p",[t._v("**注意：**long int 8 个字节，int 都是 4 个字节，早期的 C 编译器定义了 long int 占用 4 个字节，int 占用 2 个字节，新版的 C/cpp 标准兼容了早期的这一设定。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("位")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-128 到 127 或者 0 到 255")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned char")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 255")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("signed char")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-128 到 127")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-2147483648 到 2147483647")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 4294967295")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("signed int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-2147483648 到 2147483647")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("short int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-32768 到 32767")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned short int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 65,535")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("signed short int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-32768 到 32767")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("long int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("signed long int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned long int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 18,446,744,073,709,551,615")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("精度型占4个字节（32位）内存空间，+/- 3.4e +/- 38 (~7 个数字)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("双精度型占8 个字节（64位）内存空间，+/- 1.7e +/- 308 (~15 个数字)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("long double")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("16 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("长双精度型 16 个字节（128位）内存空间，可提供18-19位有效数字。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("wchar_t")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2 或 4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1 个宽字符")])])])]),t._v(" "),a("p",[t._v("从上表可得知，变量的大小会根据编译器和所使用的电脑而有所不同。")]),t._v(" "),a("p",[t._v("下面实例会输出您电脑上各种数据类型的大小。")]),t._v(" "),a("h2",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("本实例使用了 "),a("strong",[t._v("endl")]),t._v("，这将在每一行后插入一个换行符，"),a("strong",[t._v("<<")]),t._v(" 运算符用于向屏幕传多个值，"),a("strong",[t._v("sizeof()")]),t._v(" 函数用来获取各种数据类型的大小。")]),t._v(" "),a("p",[t._v("当上面的代码被编译和执行时，它会产生以下的结果，结果会根据所使用的计算机而有所不同：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("        最小值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    最大值：        最小值："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("signed")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    最大值：        最小值："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("        最小值：\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("wchar_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2147483647")]),t._v("        最小值："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2147483648")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32767")]),t._v("        最小值："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32768")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2147483647")]),t._v("    最小值："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2147483648")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4294967295")]),t._v("    最小值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9223372036854775807")]),t._v("    最小值："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9223372036854775808")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18446744073709551615")]),t._v("    最小值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.79769e+308")]),t._v("    最小值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.22507e-308")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.18973e+4932")]),t._v("    最小值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.3621e-4932")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.40282e+38")]),t._v("    最小值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.17549e-38")]),t._v("\nsize_t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("    最大值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18446744073709551615")]),t._v("    最小值："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nstring"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     所占字节数："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("\ntype"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n")])])]),a("h2",{attrs:{id:"typedef-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typedef-声明"}},[t._v("#")]),t._v(" typedef 声明")]),t._v(" "),a("p",[t._v("您可以使用 "),a("strong",[t._v("typedef")]),t._v(" 为一个已有的类型取一个新的名字。下面是使用 typedef 定义一个新类型的语法：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" type newname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如，下面的语句会告诉编译器，feet 是 int 的另一个名称：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" feet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//现在，下面的声明是完全合法的，它创建了一个整型变量 distance：")]),t._v("\nfeet distance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型"}},[t._v("#")]),t._v(" 枚举类型")]),t._v(" "),a("p",[t._v("枚举类型(enumeration)是cpp中的一种派生数据类型，它是由用户定义的若干枚举常量的集合。")]),t._v(" "),a("p",[t._v('如果一个变量只有几种可能的值，可以定义为枚举(enumeration)类型。所谓"枚举"是指将变量的值一一列举出来，变量的值只能在列举出来的值的范围内。')]),t._v(" "),a("p",[t._v("创建枚举，需要使用关键字 "),a("strong",[t._v("enum")]),t._v("。枚举类型的一般形式为：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" 枚举名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     标识符"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("整型常数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n     标识符"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("整型常数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n    标识符"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("整型常数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 枚举变量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v('如果枚举没有初始化, 即省掉"=整型常数"时, 则从第一个标识符开始。')]),t._v(" "),a("p",[t._v('例如，下面的代码定义了一个颜色枚举，变量 c 的类型为 color。最后，c 被赋值为 "blue"。')]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("color")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("默认情况下，第一个名称的值为 0，第二个名称的值为 1，第三个名称的值为 2，以此类推。但是，您也可以给名称赋予一个特殊的值，只需要添加一个初始值即可。例如，在下面的枚举中，"),a("strong",[t._v("green")]),t._v(" 的值为 5。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("color")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在这里，"),a("strong",[t._v("blue")]),t._v(" 的值为 6，因为默认情况下，每个名称都会比它前面一个名称大 1，但 red 的值依然为 0。")]),t._v(" "),a("h2",{attrs:{id:"cpp-中的类型限定符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpp-中的类型限定符"}},[t._v("#")]),t._v(" cpp 中的类型限定符")]),t._v(" "),a("p",[t._v("类型限定符提供了变量的额外信息。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("限定符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("const")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("const")]),t._v(" 类型的对象在程序执行期间不能被修改改变。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("volatile")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("修饰符 "),a("strong",[t._v("volatile")]),t._v(" 告诉编译器不需要优化volatile声明的变量，让程序可以直接从内存中读取变量。对于一般的变量编译器会对变量进行优化，将内存中的变量值放在寄存器中以加快读写效率。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("restrict")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("由 "),a("strong",[t._v("restrict")]),t._v(" 修饰的指针是唯一一种访问它所指向的对象的方式。只有 C99 增加了新的类型限定符 restrict。")])])])]),t._v(" "),a("h2",{attrs:{id:"cpp-中的运算符优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpp-中的运算符优先级"}},[t._v("#")]),t._v(" cpp 中的运算符优先级")]),t._v(" "),a("p",[t._v("运算符的优先级确定表达式中项的组合。这会影响到一个表达式如何计算。某些运算符比其他运算符有更高的优先级，例如，乘除运算符具有比加减运算符更高的优先级。")]),t._v(" "),a("p",[t._v("例如 x = 7 + 3 * 2，在这里，x 被赋值为 13，而不是 20，因为运算符 * 具有比 + 更高的优先级，所以首先计算乘法 3*2，然后再加上 7。")]),t._v(" "),a("p",[t._v("下表将按运算符优先级从高到低列出各个运算符，具有较高优先级的运算符出现在表格的上面，具有较低优先级的运算符出现在表格的下面。在表达式中，较高优先级的运算符会优先被计算。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类别")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("结合性")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("后缀")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("() [] -> . ++ - -")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("一元")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("+ - ! ~ ++ - - (type)* & sizeof")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从右到左")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("乘除")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("* / %")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("加减")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("+ -")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("移位")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("<< >>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("关系")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("< <= > >=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("相等")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("== !=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("位与 AND")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("位异或 XOR")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("^")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("位或 OR")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("|")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑与 AND")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("&&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑或 OR")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("||")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("条件")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("?:")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从右到左")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("赋值")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("= += -= *= /= %=>>= <<= &= ^= |=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从右到左")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("逗号")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v(",")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])])])]),t._v(" "),a("h3",{attrs:{id:"实例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-2"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("请看下面的实例，了解 cpp 中运算符的优先级。")]),t._v(" "),a("p",[t._v("复制并黏贴下面的 cpp 程序到 test.cpp 文件中，编译并运行程序。")]),t._v(" "),a("p",[t._v("对比有括号和没有括号时的区别，这将产生不同的结果。因为 ()、 /、 * 和 + 有不同的优先级，高优先级的操作符将优先计算。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ( 30 * 15 ) / 5")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(a + b) * c / d 的值是 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (30 * 15 ) / 5")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"((a + b) * c) / d 的值是 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (30) * (15/5)")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(a + b) * (c / d) 的值是 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  20 + (150/5)")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a + (b * c) / d 的值是 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当上面的代码被编译和执行时，它会产生以下结果：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d 的值是 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d 的值是 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 的值是 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" d 的值是 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n")])])]),a("h2",{attrs:{id:"c-中数组详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-中数组详解"}},[t._v("#")]),t._v(" C++ 中数组详解")]),t._v(" "),a("p",[t._v("在 C++ 中，数组是非常重要的，我们需要了解更多有关数组的细节。下面列出了 C++ 程序员必须清楚的一些与数组相关的重要概念：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("概念")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-multi-dimensional-arrays.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("多维数组"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++ 支持多维数组。多维数组最简单的形式是二维数组。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-pointer-to-an-array.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("指向数组的指针"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("您可以通过指定不带索引的数组名称来生成一个指向数组中第一个元素的指针。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-passing-arrays-to-functions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("传递数组给函数"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("您可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-return-arrays-from-function.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("从函数返回数组"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++ 允许从函数返回数组。")])])])]),t._v(" "),a("h1",{attrs:{id:"c-引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-引用"}},[t._v("#")]),t._v(" C++ 引用")]),t._v(" "),a("p",[t._v("引用变量是一个别名，也就是说，它是某个已存在变量的另一个名字。一旦把引用初始化为某个变量，就可以使用该引用名称或变量名称来指向变量。")]),t._v(" "),a("h2",{attrs:{id:"c-引用-vs-指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-引用-vs-指针"}},[t._v("#")]),t._v(" C++ 引用 vs 指针")]),t._v(" "),a("p",[t._v("引用很容易与指针混淆，它们之间有三个主要的不同：")]),t._v(" "),a("ul",[a("li",[t._v("不存在空引用。引用必须连接到一块合法的内存。")]),t._v(" "),a("li",[t._v("一旦引用被初始化为一个对象，就不能被指向到另一个对象。指针可以在任何时候指向到另一个对象。")]),t._v(" "),a("li",[t._v("引用必须在创建时被初始化。指针可以在任何时间被初始化。")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明简单的变量")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明引用变量")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// r改变时，i也会改变")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value of i : "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value of i reference : "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value of d : "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value of d reference : "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);