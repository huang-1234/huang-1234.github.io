(window.webpackJsonp=window.webpackJsonp||[]).push([[372],{804:function(t,s,e){"use strict";e.r(s);var a=e(2),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"builder-生成器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#builder-生成器"}},[t._v("#")]),t._v(" Builder（生成器）")]),t._v(" "),s("p",[t._v("Builder（生成器）属于创建型模式，针对的是单个复杂对象的创建。")]),t._v(" "),s("p",[s("strong",[t._v("意图：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。")])]),t._v(" "),s("h2",{attrs:{id:"举例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例子"}},[t._v("#")]),t._v(" 举例子")]),t._v(" "),s("p",[t._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),t._v(" "),s("h3",{attrs:{id:"搭乐高积木"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭乐高积木"}},[t._v("#")]),t._v(" 搭乐高积木")]),t._v(" "),s("p",[t._v("乐高积木是很典型的随机拼装场景，你有很多乐高积木，要搭一个小房子都太复杂了，可能不得不看着说明书一步步操作，这就像创建一个复杂的对象，要传入非常多的参数，而且顺序还不能错。")]),t._v(" "),s("p",[t._v("如果不考虑拼装乐高过程中的乐趣，你只是想快速得到一个标准的房子，怎么样才可以最快最省事？")]),t._v(" "),s("h3",{attrs:{id:"工厂流水线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工厂流水线"}},[t._v("#")]),t._v(" 工厂流水线")]),t._v(" "),s("p",[t._v("制作一个罐头要经历许多步骤，而其中一些步骤比如制作罐头是通用的，可以用这个罐头装很多东西，比如红枣罐头、黄桃罐头，那工厂流水线是怎么做到灵活可拓展的呢？")]),t._v(" "),s("h3",{attrs:{id:"创建数据库连接池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库连接池"}},[t._v("#")]),t._v(" 创建数据库连接池")]),t._v(" "),s("p",[t._v("建立一个数据库连接池，我们需要传入数据库的地址、用户名与密码、还有要创建多少大小的连接池，缓存的位置等等。")]),t._v(" "),s("p",[t._v("考虑到数据库必须正确连接后才有效，创建时必须校验传入的数据库地址与密码的正确性，甚至存储方式与数据库类型还有关系，这是一个简单的 "),s("code",[t._v("new")]),t._v(" 实例化可以解决的吗？")]),t._v(" "),s("h2",{attrs:{id:"意图解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意图解释"}},[t._v("#")]),t._v(" 意图解释")]),t._v(" "),s("p",[t._v("在乐高积木的例子中，我们为了得到一个房子其实不需要关心每一个积木应该如何摆放，"),s("strong",[t._v("我们只要交给组装工厂（一个人或者一个程序）产出标准房子就行了")]),t._v("，这其中参数可能是 "),s("code",[t._v(".setHouseType().build()")]),t._v(" 设置房屋类型，而不需要 "),s("code",[t._v("new House(block1, block2, ... block999)")]),t._v(" 传递这些没必要的参数。"),s("strong",[t._v("其中组装工厂就是生成器")]),t._v("。")]),t._v(" "),s("p",[t._v("在工厂流水线的例子中，"),s("strong",[t._v("流水线就是生成器，一个流水线可以不通过不同组合生成不同作用的工厂")]),t._v("，黄桃罐头的流水线可以理解为 "),s("code",[t._v("new Builder().组装罐头().放入黄桃().build()")]),t._v("，红枣罐头的流水线可以理解为 "),s("code",[t._v("new Builder().组装罐头().放入红枣().build()")]),t._v("，我们可以复用生成器最基础的函数 "),s("code",[t._v("组装罐头()")]),t._v(" 将其用于创建不同的产品中，复用了组装基础能力。")]),t._v(" "),s("p",[t._v("在创建数据库例子中，我们可以先设置一些必要的参数再创建，比如 "),s("code",[t._v("new Builder().setUrl().setPassword().setType().build()")]),t._v("，这样在最终执行 "),s("code",[t._v("build")]),t._v(" 函数的时候，可以对参数中存在关联的进行校验，而得到的对象也无法再被修改，这样比直接暴露数据库连接池对象，再一个值一个值 Set 多了如下好处：")]),t._v(" "),s("ol",[s("li",[t._v("对象无法被修改，保护了程序稳定性，减少了维护复杂度。")]),t._v(" "),s("li",[t._v("可以对参数关联进行一次性校验。")]),t._v(" "),s("li",[t._v("在创建对象之前不会存在中间态，即创建了对象实例，但缺少部分参数，这可能导致对象无法正确 work。")])]),t._v(" "),s("p",[s("strong",[t._v("意图：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。")])]),t._v(" "),s("p",[t._v("我们再理解一次意图，所谓构建与表示分离，就是指一个对象 "),s("code",[t._v("Person")]),t._v(" 并不是简单的 "),s("code",[t._v("new Person()")]),t._v(" 就可以实例化出来的，如果可以，那就是构建与表示一体。"),s("strong",[t._v("所谓构建与表示分离，就是指 "),s("code",[t._v("Person")]),t._v(" 只能描述，而不能通过 "),s("code",[t._v("new Person()")]),t._v(" 实例化，将实例化工作通过 Builder 实现，这样同样一个构建过程可以创建不同的 "),s("code",[t._v("Person")]),t._v(" 实例。")])]),t._v(" "),s("p",[t._v("在乐高积木的例子中，通过乐高创建的房子并不是 "),s("code",[t._v("new House()")]),t._v(" 出来，而是将构建与表示分离了，工厂流水线中我们创建一个黄桃罐头，不是通过 "),s("code",[t._v("new 黄桃罐头()")]),t._v("，而是通过流水线不同拼装方式来完成，在数据库例子中，我们没有通过 "),s("code",[t._v("new DB()")]),t._v(" 的方式创建数据库，而是通过 Builder 来创建，这都体现了构建与表示的分离。")]),t._v(" "),s("h2",{attrs:{id:"结构图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构图"}},[t._v("#")]),t._v(" 结构图")]),t._v(" "),s("img",{attrs:{width:"800",src:"https://img.alicdn.com/tfs/TB14lOwYXT7gK0jSZFpXXaTkpXa-1382-466.png"}}),t._v(" "),s("ul",[s("li",[s("code",[t._v("Director")]),t._v(" 指导器，用来指导构建过程。")]),t._v(" "),s("li",[s("code",[t._v("Builder")]),t._v(" 生成器接口，用来提供一系列构建对象的方法，以及最终的 "),s("code",[t._v("build")]),t._v(" 生成对象函数，这个函数里可以做一些参数校验。")]),t._v(" "),s("li",[s("code",[t._v("ConcreteBuilder")]),t._v(" 是 "),s("code",[t._v("Builder")]),t._v(" 的具体实现。")])]),t._v(" "),s("p",[t._v("实际上，Builder 模式抽象层次可高可低，我们上面三个例子都没有用到指导器与生成器接口，这是因为在代码不太复杂的情况下，可以使用简化模型。")]),t._v(" "),s("h2",{attrs:{id:"代码例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码例子"}},[t._v("#")]),t._v(" 代码例子")]),t._v(" "),s("p",[t._v("下面例子使用 javascript 编写。")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Director")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("concreteBuilder"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ConcreteBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建了一些零件")]),t._v("\n    concreteBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    concreteBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 校验参数已经生成实例")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" concreteBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HouseBuilder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建房屋")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.xxx = xxx")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 刷油漆")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最终创建实例")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("House")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ..一堆参数 this.xxx.. */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接下来是正式使用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" director "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Director")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" builder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HouseBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" house "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" director"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面的例子是完整版本的 Builder 模式，抽象了指导器 "),s("code",[t._v("Director")]),t._v(" 与生成器 "),s("code",[t._v("Builder")]),t._v("，只要两者都严格按照接口实现，我们可以：")]),t._v(" "),s("ol",[s("li",[t._v("替换任意 "),s("code",[t._v("Director")]),t._v("，使创建的过程做任意修改。")]),t._v(" "),s("li",[t._v("替换任意 "),s("code",[t._v("Builder")]),t._v("，使创建的实现做任意修改。")])]),t._v(" "),s("p",[t._v("做了任意的改动，都可以得到不同的房子实现，这就是创建与表示分离的好处，我们可以通过同样的构建过程创建不同的表示。")]),t._v(" "),s("p",[t._v("这个 "),s("code",[t._v("director.create()")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("在搭乐高积木的例子，表示用乐高搭建房屋的过程。")]),t._v(" "),s("li",[t._v("在工程流水线的例子，表示罐头的组装构成。")]),t._v(" "),s("li",[t._v("在创建数据库连接池的例子，表示数据库连接池的创建过程。")])]),t._v(" "),s("p",[t._v("而 "),s("code",[t._v("Builder")]),t._v(" 以及其函数 "),s("code",[t._v("buildA")]),t._v(" "),s("code",[t._v("buildB")]),t._v(" 等方法表示具体制造方法，比如：")]),t._v(" "),s("ul",[s("li",[t._v("在搭乐高积木的例子，表示如何盖房子，如何刷油漆。")]),t._v(" "),s("li",[t._v("在工程流水线的例子，表示如何做一个罐头，如何添加黄桃。")]),t._v(" "),s("li",[t._v("在创建数据库连接池的例子，表示如何设置数据库地址，如何设置用户名密码等。")])]),t._v(" "),s("p",[t._v("对于数据库的例子中，我们不仅可以保证创建对象的便捷性，因为不需要传入过多参数，也保证了对象的正确校验，同时生成的实例也是不可变的。")]),t._v(" "),s("p",[t._v("更重要的是，如果使用完整模式，我们可以替换 "),s("code",[t._v("Director")]),t._v(" 来修改创建数据库的方式，替换 "),s("code",[t._v("Builder")]),t._v(" 来修改具体方法，比如 "),s("code",[t._v(".setUserName")]),t._v(" 这个函数不做具体实现，而是统计性能，"),s("code",[t._v("build()")]),t._v(" 函数创建的不是一个数据库连接实例，而是一个测试实例。")]),t._v(" "),s("p",[t._v("再比如前端同一个方法在 JS 和 Node 环境下运行效果不一样，我们可以实现 "),s("code",[t._v("BrowserBuild")]),t._v(" 与 "),s("code",[t._v("NodeBuild")]),t._v("，实现相同的接口，这样可以共享相同的创建过程，创建不同环境可以运行的实例。")]),t._v(" "),s("p",[t._v("可以看到，使用 Builder 模式可以保证创建对象的便捷与稳定性，还留了足够的拓展空间改变对象的创建过程与创建方法，具有极强的拓展性。")]),t._v(" "),s("h2",{attrs:{id:"弊端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弊端"}},[t._v("#")]),t._v(" 弊端")]),t._v(" "),s("p",[t._v("任何设计模式都有其适用场景，反过来也说明了在某些场景下不适用。")]),t._v(" "),s("ul",[s("li",[t._v("实例化对象非常繁琐，重复定义了许多对象成员变量的 "),s("code",[t._v("set")]),t._v(" 方法，而且也不如 "),s("code",[t._v("new")]),t._v(" 看的直观，也就是场景足够简单时，不需要任何地方都用 Builder 实例化对象。")]),t._v(" "),s("li",[t._v("一个对象只有一种表示时，没必要做如此地步的抽象。")])]),t._v(" "),s("p",[t._v("上面的例子都是相对复杂的，假设我们的搭房子的例子中，我们不是用乐高积木搭建，而是用两块半成品模板拼起来就得到一个房子，那就没有必要使用 Builder 模式，直接 "),s("code",[t._v("new House()")]),t._v(" 即可。")]),t._v(" "),s("p",[t._v("再者，如果我们只需要生产各种罐头，而不需要生产汽车，那么就没必要过度抽象 Builder，把创建汽车的方法也囊括进去，最后，如果我们的对象只有一种表示时，没有必要抽象 Builder，也就是流水线如果只生产黄桃罐头，就没必要把各个生产环节变成可拆卸的，因为也没有重新组合的需要。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("Builder 模式对于创建一个复杂对象特别有用，可以看下图加深理解：")]),t._v(" "),s("img",{attrs:{wdith:"800",src:"https://img.alicdn.com/tfs/TB109aLYoT1gK0jSZFrXXcNCXXa-1412-984.png"}}),t._v(" "),s("p",[t._v("最后总结一下何时适合用 Builder 模式：只有当创建过程允许被构造对象有不同表示，或者对象复杂到对象描述与创建对象过程值得分离时，才使用 Builder 设计模式。")]),t._v(" "),s("blockquote",[s("p",[t._v("讨论地址是："),s("a",{attrs:{href:"https://github.com/dt-fe/weekly/issues/273",target:"_blank",rel:"noopener noreferrer"}},[t._v("精读《设计模式 - Builder 生成器》· Issue #273 · dt-fe/weekly"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[t._v("如果你想参与讨论，请 "),s("a",{attrs:{href:"https://github.com/dt-fe/weekly",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里"),s("OutboundLink")],1),t._v("，每周都有新的主题，周末或周一发布。前端精读 - 帮你筛选靠谱的内容。")])]),t._v(" "),s("blockquote",[s("p",[t._v("关注 "),s("strong",[t._v("前端精读微信公众号")])])]),t._v(" "),s("img",{attrs:{width:"200",src:"https://img.alicdn.com/tfs/TB165W0MCzqK1RjSZFLXXcn2XXa-258-258.jpg"}}),t._v(" "),s("blockquote",[s("p",[t._v("版权声明：自由转载-非商用-非衍生-保持署名（"),s("a",{attrs:{href:"https://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh",target:"_blank",rel:"noopener noreferrer"}},[t._v("创意共享 3.0 许可证"),s("OutboundLink")],1),t._v("）")])])])}),[],!1,null,null,null);s.default=n.exports}}]);