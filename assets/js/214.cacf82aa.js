(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{643:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),s("p",[t._v("Go语言是静态类型语言，因此变量（variable）是有明确类型的，编译器也会检查变量类型的正确性。在数学概念中，变量表示没有固定值且可改变的数。但从计算机系统实现角度来看，变量是一段或多段用来存储数据的内存。")]),t._v(" "),s("p",[t._v("声明变量的一般形式是使用 var 关键字：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v("\n")])])]),s("p",[t._v("其中，var 是声明变量的关键字，name 是变量名，type 是变量的类型。")]),t._v(" "),s("p",[t._v("需要注意的是，Go语言和许多编程语言不同，它在声明变量时将变量的类型放在变量的名称之后。这样做的好处就是可以避免像C语言中那样含糊不清的声明形式，例如："),s("code",[t._v("int* a, b;")]),t._v(" 。其中只有 a 是指针而 b 不是。如果你想要这两个变量都是指针，则需要将它们分开书写。而在 Go 中，则可以和轻松地将它们都声明为指针类型：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n")])])]),s("p",[t._v("Go语言的基本类型有：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int8")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int16")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint16")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uintptr")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// uint8 的别名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("rune")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// int32 的别名 代表一个 Unicode 码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex64")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex128")]),t._v("\n")])])]),s("p",[t._v("当一个变量被声明之后，系统自动赋予它该类型的零值：int 为 0，float 为 0.0，bool 为 false，string 为空字符串，指针为 nil 等。所有的内存在 Go 中都是经过初始化的。")]),t._v(" "),s("p",[t._v("变量的命名规则遵循骆驼命名法，即首个单词小写，每个新单词的首字母大写，例如：numShips 和 startDate 。")]),t._v(" "),s("p",[t._v("Go语言的变量声明的标准格式为：")]),t._v(" "),s("p",[t._v("var 变量名 变量类型")]),t._v(" "),s("p",[t._v("变量声明以关键字 var 开头，后置变量类型，行尾无须分号。")]),t._v(" "),s("h2",{attrs:{id:"批量格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批量格式"}},[t._v("#")]),t._v(" 批量格式")]),t._v(" "),s("p",[t._v("觉得每行都用 var 声明变量比较烦琐？没关系，还有一种为懒人提供的定义变量的方法：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("    \n  a "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("    \n  b "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    \n  c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v("    \n  d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("    \n  e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        \n    x "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("    \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("使用关键字 var 和括号，可以将一组变量定义放在一起。")]),t._v(" "),s("h2",{attrs:{id:"简短格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简短格式"}},[t._v("#")]),t._v(" 简短格式")]),t._v(" "),s("p",[t._v("除 var 关键字外，还可使用更加简短的变量定义和初始化语法。")]),t._v(" "),s("p",[t._v("名字 := 表达式")]),t._v(" "),s("p",[t._v("需要注意的是，简短模式（short variable declaration）有以下限制：")]),t._v(" "),s("ul",[s("li",[t._v("定义变量，同时显式初始化。")]),t._v(" "),s("li",[t._v("不能提供数据类型。")]),t._v(" "),s("li",[t._v("只能用在函数内部。")])]),t._v(" "),s("p",[t._v("和 var 形式声明语句一样，简短变量声明语句也可以用来声明和初始化一组变量：")]),t._v(" "),s("p",[t._v("i, j := 0, 1")]),t._v(" "),s("p",[t._v("下面通过一段代码来演示简短格式变量声明的基本样式。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('func main() {   x:=100   a,s:=1, "abc"}\n')])])]),s("p",[t._v("因为简洁和灵活的特点，简短变量声明被广泛用于大部分的局部变量的声明和初始化。var 形式的声明语句往往是用于需要显式指定变量类型地方，或者因为变量稍后会被重新赋值而初始值无关紧要的地方。")]),t._v(" "),s("p",[t._v("在声明变量时，自动对变量对应的内存区域进行初始化操作。每个变量会初始化其类型的默认值，例如：")]),t._v(" "),s("ul",[s("li",[t._v("整型和浮点型变量的默认值为 0 和 0.0。")]),t._v(" "),s("li",[t._v("字符串变量的默认值为空字符串。")]),t._v(" "),s("li",[t._v("布尔型变量默认为 bool。")]),t._v(" "),s("li",[t._v("切片、函数、指针变量的默认为 nil。")])]),t._v(" "),s("p",[t._v("当然，依然可以在变量声明时赋予变量一个初始值。")]),t._v(" "),s("h3",{attrs:{id:"回顾-c-语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回顾-c-语言"}},[t._v("#")]),t._v(" 回顾 C 语言")]),t._v(" "),s("p",[t._v("在C语言中，变量在声明时，并不会对变量对应内存区域进行清理操作。此时，变量值可能是完全不可预期的结果。开发者需要习惯在使用C语言进行声明时要初始化操作，稍有不慎，就会造成不可预知的后果。")]),t._v(" "),s("p",[t._v("在网络上只有程序员才能看懂的“烫烫烫”和“屯屯屯”的梗，就来源于 C/C++中变量默认不初始化。")]),t._v(" "),s("p",[t._v("微软的 VC 编译器会将未初始化的栈空间以 16 进制的 0xCC 填充，而未初始化的堆空间使用 0xCD 填充，而 0xCCCC 和 0xCDCD 在中文的 GB2312 编码中刚好对应“烫”和“屯”字。")]),t._v(" "),s("p",[t._v("因此，如果一个字符串没有结束符"),s("code",[t._v("\\0")]),t._v("，直接输出的内存数据转换为字符串就刚好对应“烫烫烫”和“屯屯屯”。")]),t._v(" "),s("h2",{attrs:{id:"定义字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义字符串"}},[t._v("#")]),t._v(" 定义字符串")]),t._v(" "),s("p",[t._v("可以使用双引号"),s("code",[t._v('""')]),t._v("来定义字符串，字符串中可以使用转义字符来实现换行、缩进等效果，常用的转义字符包括：")]),t._v(" "),s("ul",[s("li",[t._v("\\n：换行符")]),t._v(" "),s("li",[t._v("\\r：回车符")]),t._v(" "),s("li",[t._v("\\t：tab 键")]),t._v(" "),s("li",[t._v("\\u 或 \\U：Unicode 字符")]),t._v(" "),s("li",[t._v("\\\\：反斜杠自身")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hsq"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"黄水清"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hsq 黄水清")]),t._v("\n\t\tnamelen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("strlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("namelen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("strlen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("定义字符串不能使用单引号"),s("code",[t._v("‘’")]),t._v(",编译通不过")]),t._v(" "),s("p",[t._v("另外我们发现英文字符长度为"),s("code",[t._v("1")]),t._v(",而中文一个字符的字符长度为"),s("code",[t._v("3")])]),t._v(" "),s("p",[t._v("一般的比较运算符（==、!=、<、<=、>=、>）是通过在内存中按字节比较来实现字符串比较的，因此比较的结果是字符串自然编码的顺序。字符串所占的字节长度可以通过函数 len() 来获取，例如 len(str)。")]),t._v(" "),s("p",[t._v("字符串的内容（纯字节）可以通过标准索引法来获取，在方括号"),s("code",[t._v("[ ]")]),t._v("内写入索引，索引从 0 开始计数：")]),t._v(" "),s("ul",[s("li",[t._v("字符串 str 的第 1 个字节：str[0]")]),t._v(" "),s("li",[t._v("第 i 个字节：str[i - 1]")]),t._v(" "),s("li",[t._v("最后 1 个字节：str[len(str)-1]")])]),t._v(" "),s("p",[t._v("需要注意的是，这种转换方案只对纯 ASCII 码的字符串有效。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：获取字符串中某个字节的地址属于非法行为，例如 &str[i]。")])]),t._v(" "),s("h2",{attrs:{id:"字符串拼接符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串拼接符"}},[t._v("#")]),t._v(" 字符串拼接符“+”")]),t._v(" "),s("p",[t._v("两个字符串 s1 和 s2 可以通过 s := s1 + s2 拼接在一起。将 s2 追加到 s1 尾部并生成一个新的字符串 s。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hsq"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Beginning  "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"second part "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hsq Beginning  second part ")]),t._v("\n\t\tnamelen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("strlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("namelen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("strlen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 23")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"字符类型-byte和rune"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符类型-byte和rune"}},[t._v("#")]),t._v(" 字符类型（byte和rune）")]),t._v(" "),s("p",[t._v("字符串中的每一个元素叫做“字符”，在遍历或者单个获取字符串元素时可以获得字符。")]),t._v(" "),s("p",[t._v("Go语言的字符有以下两种：")]),t._v(" "),s("ul",[s("li",[t._v("一种是 uint8 类型，或者叫 byte 型，代表了 ASCII 码的一个字符。")]),t._v(" "),s("li",[t._v("另一种是 rune 类型，代表一个 UTF-8 字符，当需要处理中文、日文或者其他复合字符时，则需要用到 rune 类型。rune 类型等价于 int32 类型。")])]),t._v(" "),s("p",[t._v("byte 类型是 uint8 的别名，对于只占用 1 个字节的传统 ASCII 编码的字符来说，完全没有问题，例如 var ch byte = 'A'，字符使用单引号括起来。")]),t._v(" "),s("blockquote",[s("p",[t._v("比如：")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cbyte "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" crune "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("rune")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cbyte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("crune"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ch "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\u0041'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ch2 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\u03B2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ch3 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\U00101234'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d - %d - %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// integer")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%c - %c - %c\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// character")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%X - %X - %X\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UTF-8 bytes")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%U - %U - %U\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UTF-8 code point")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=============================================================\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tcount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c:<%c> it\'s %d  "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("输出：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ go run "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"g:\\Study\\Code\\Web\\NodeJS\\learnFrontTest\\Go\\goBase\\lib'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[t._v("\\t")]),t._v('ype.go"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("946")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1053236")]),t._v("\nA - β - 􁈴\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("41")]),t._v(" - 3B2 - "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101234")]),t._v("\nU+0041 - U+03B2 - U+101234\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 32  c:<!> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 34  c:<#> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 36\nc:<%> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 38  c:<'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 39  c:<(> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 41\nc:<*> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 43  c:<,> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 45  c:<.> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("46")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 47  c:<0> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 49  c:<2> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 51\nc:<4> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("52")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("5")]),t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 53  c:<6> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("54")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("7")]),t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 55  c:<8> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 57  c:<:> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("58")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 59  c:<<> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 61\nc:<>> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 63  c:<@> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 65  c:<B> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 67  c:<D> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("68")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("E"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 69  c:<F> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("G"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 71\nc:<H> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("I"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 73  c:<J> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("74")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("K"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 75  c:<L> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("76")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("M"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 77  c:<N> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("78")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("O"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 79  c:<P> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 81\nc:<R> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("82")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 83  c:<T> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("84")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("U"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 85  c:<V> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("W"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 87  c:<X> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 89  c:<Z> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 91\nc:<\\> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("92")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 93  c:<^> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("94")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 95  c:<`> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("96")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 97  c:<b> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 99  c:<d> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 101\nc:<f> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 103  c:<h> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 105  c:<j> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("106")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 107  c:<l> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("108")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 109  c:<n> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 111\nc:<p> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 113  c:<r> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("114")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 115  c:<t> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("116")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("u"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 117  c:<v> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("118")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 119  c:<x> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 121\nc:<z> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("122")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 123  c:<|> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("124")]),t._v("  c:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s 125  c:<~> it'")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("126")]),t._v("\nc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" it's "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127")]),t._v("\n")])])]),s("p",[t._v("格式化说明符"),s("code",[t._v("%c")]),t._v("用于表示字符，当和字符配合使用时，"),s("code",[t._v("%v")]),t._v("或"),s("code",[t._v("%d")]),t._v("会输出用于表示该字符的整数，"),s("code",[t._v("%U")]),t._v("输出格式为 U+hhhh 的字符串。")]),t._v(" "),s("p",[t._v("Unicode 包中内置了一些用于测试字符的函数，这些函数的返回值都是一个布尔值，如下所示（其中 ch 代表字符）：")]),t._v(" "),s("ul",[s("li",[t._v("判断是否为字母：unicode.IsLetter(ch)")]),t._v(" "),s("li",[t._v("判断是否为数字：unicode.IsDigit(ch)")]),t._v(" "),s("li",[t._v("判断是否为空白符号：unicode.IsSpace(ch)")])]),t._v(" "),s("h2",{attrs:{id:"utf-8-和-unicode-有何区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#utf-8-和-unicode-有何区别"}},[t._v("#")]),t._v(" UTF-8 和 Unicode 有何区别？")]),t._v(" "),s("p",[t._v("Unicode 与 ASCII 类似，都是一种字符集。")]),t._v(" "),s("p",[t._v("字符集为每个字符分配一个唯一的 ID，我们使用到的所有字符在 Unicode 字符集中都有一个唯一的 ID，例如上面例子中的 a 在 Unicode 与 ASCII 中的编码都是 97。汉字“你”在 Unicode 中的编码为 20320，在不同国家的字符集中，字符所对应的 ID 也会不同。而无论任何情况下，Unicode 中的字符的 ID 都是不会变化的。")]),t._v(" "),s("p",[t._v("UTF-8 是编码规则，将 Unicode 中字符的 ID 以某种方式进行编码，UTF-8 的是一种变长编码规则，从 1 到 4 个字节不等。编码规则如下：")]),t._v(" "),s("ul",[s("li",[t._v("0xxxxxx 表示文字符号 0～127，兼容 ASCII 字符集。")]),t._v(" "),s("li",[t._v("从 128 到 0x10ffff 表示其他字符。")])]),t._v(" "),s("p",[t._v("根据这个规则，拉丁文语系的字符编码一般情况下每个字符占用一个字节，而中文每个字符占用 3 个字节。")]),t._v(" "),s("blockquote",[s("p",[t._v("不同类型之前的变量是不能隐式转换的")])]),t._v(" "),s("h2",{attrs:{id:"自定义类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义类型"}},[t._v("#")]),t._v(" 自定义类型")]),t._v(" "),s("blockquote",[s("p",[t._v("使用关键字type即可实现，除此之外，还拥有类型检查的功能")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStruct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tuser "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\t\t\tname "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t\tage "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int8")]),t._v("\n\t\t\tplace "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// next user")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tevent "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hsq"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changsha"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输出这个人的个人信息--："')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn1 event "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输出函数fn1的params s--:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfn_result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hsq"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fn_result--:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fn_result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStruct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* $ go run "g:\\Study\\Code\\Web\\NodeJS\\learnFrontTest\\Go\\goBase\\refer\\myselfType.go"\n\t输出这个人的个人信息--： {hsq 18 changsha}\n\t输出函数fn1的params s--: hsq\n\tfn_result--: true\n\t*/')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);