(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{583:function(e,r,t){"use strict";t.r(r);var v=t(2),_=Object(v.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"xmlhttprequest-level-2-使用指南-full"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-level-2-使用指南-full"}},[e._v("#")]),e._v(" XMLHttpRequest Level 2 使用指南 Full")]),e._v(" "),r("p",[e._v("作者： "),r("a",{attrs:{href:"http://www.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("阮一峰"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("日期： "),r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2012/09/",target:"_blank",rel:"noopener noreferrer"}},[e._v("2012年9月 8日"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"http://en.wikipedia.org/wiki/XMLHttpRequest",target:"_blank",rel:"noopener noreferrer"}},[e._v("XMLHttpRequest"),r("OutboundLink")],1),e._v("是一个浏览器接口，使得Javascript可以进行HTTP(S)通信。")]),e._v(" "),r("p",[e._v("最早，微软在IE 5引进了这个接口。因为它太有用，其他浏览器也模仿部署了，ajax操作因此得以诞生。")]),e._v(" "),r("p",[e._v("但是，这个接口一直没有标准化，每家浏览器的实现或多或少有点不同。HTML 5的概念形成后，W3C开始考虑标准化这个接口。2008年2月，就提出了"),r("a",{attrs:{href:"http://dev.w3.org/2006/webapi/XMLHttpRequest-2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("XMLHttpRequest Level 2"),r("OutboundLink")],1),e._v(" 草案。")]),e._v(" "),r("p",[e._v("这个XMLHttpRequest的新版本，提出了很多有用的新功能，将大大推动互联网革新。本文就对这个新版本进行详细介绍。")]),e._v(" "),r("p",[r("strong",[e._v("一、老版本的XMLHttpRequest对象")])]),e._v(" "),r("p",[e._v("在介绍新版本之前，我们先回顾一下老版本的用法。")]),e._v(" "),r("p",[e._v("首先，新建一个XMLHttpRequest的实例。")]),e._v(" "),r("blockquote",[r("p",[e._v("var xhr = new XMLHttpRequest();")])]),e._v(" "),r("p",[e._v("然后，向远程主机发出一个HTTP请求。")]),e._v(" "),r("blockquote",[r("p",[e._v("xhr.open('GET', 'example.php');")]),e._v(" "),r("p",[e._v("xhr.send();")])]),e._v(" "),r("p",[e._v("接着，就等待远程主机做出回应。这时需要监控XMLHttpRequest对象的状态变化，指定回调函数。")]),e._v(" "),r("blockquote",[r("p",[e._v("xhr.onreadystatechange = function(){")]),e._v(" "),r("p",[e._v("if ( xhr.readyState == 4 && xhr.status == 200 ) {")]),e._v(" "),r("p",[e._v("alert( xhr.responseText );")]),e._v(" "),r("p",[e._v("} else {")]),e._v(" "),r("p",[e._v("alert( xhr.statusText );")]),e._v(" "),r("p",[e._v("}")]),e._v(" "),r("p",[e._v("};")])]),e._v(" "),r("p",[e._v("上面的代码包含了老版本XMLHttpRequest对象的主要属性：")]),e._v(" "),r("blockquote",[r("p",[e._v("* xhr.readyState：XMLHttpRequest对象的状态，等于4表示数据已经接收完毕。")]),e._v(" "),r("p",[e._v("* xhr.status：服务器返回的状态码，等于200表示一切正常。")]),e._v(" "),r("p",[e._v("* xhr.responseText：服务器返回的文本数据")]),e._v(" "),r("p",[e._v("* xhr.responseXML：服务器返回的XML格式的数据")]),e._v(" "),r("p",[e._v("* xhr.statusText：服务器返回的状态文本。")])]),e._v(" "),r("p",[r("strong",[e._v("二、老版本的缺点")])]),e._v(" "),r("p",[e._v("老版本的XMLHttpRequest对象有以下几个缺点：")]),e._v(" "),r("blockquote",[r("p",[e._v("* 只支持文本数据的传送，无法用来读取和上传二进制文件。")]),e._v(" "),r("p",[e._v("* 传送和接收数据时，没有进度信息，只能提示有没有完成。")]),e._v(" "),r("p",[e._v("* 受到"),r("a",{attrs:{href:"http://www.w3.org/Security/wiki/Same_Origin_Policy",target:"_blank",rel:"noopener noreferrer"}},[e._v('"同域限制"'),r("OutboundLink")],1),e._v("（Same Origin Policy），只能向同一域名的服务器请求数据。")])]),e._v(" "),r("p",[r("strong",[e._v("三、新版本的功能")])]),e._v(" "),r("p",[e._v("新版本的XMLHttpRequest对象，针对老版本的缺点，做出了大幅改进。")]),e._v(" "),r("blockquote",[r("p",[e._v("* 可以设置HTTP请求的时限。")]),e._v(" "),r("p",[e._v("* 可以使用FormData对象管理表单数据。")]),e._v(" "),r("p",[e._v("* 可以上传文件。")]),e._v(" "),r("p",[e._v("* 可以请求不同域名下的数据（跨域请求）。")]),e._v(" "),r("p",[e._v("* 可以获取服务器端的二进制数据。")]),e._v(" "),r("p",[e._v("* 可以获得数据传输的进度信息。")])]),e._v(" "),r("p",[e._v("下面，我就一一介绍这些新功能。")]),e._v(" "),r("p",[r("strong",[e._v("四、HTTP请求的时限")])]),e._v(" "),r("p",[e._v("有时，ajax操作很耗时，而且无法预知要花多少时间。如果网速很慢，用户可能要等很久。")]),e._v(" "),r("p",[e._v("新版本的XMLHttpRequest对象，增加了timeout属性，可以设置HTTP请求的时限。")]),e._v(" "),r("blockquote",[r("p",[e._v("xhr.timeout = 3000;")])]),e._v(" "),r("p",[e._v("上面的语句，将最长等待时间设为3000毫秒。过了这个时限，就自动停止HTTP请求。与之配套的还有一个timeout事件，用来指定回调函数。")]),e._v(" "),r("blockquote",[r("p",[e._v("xhr.ontimeout = function(event){")]),e._v(" "),r("p",[e._v("alert('请求超时！');")]),e._v(" "),r("p",[e._v("}")])]),e._v(" "),r("p",[e._v("目前，Opera、Firefox和IE 10支持该属性，IE 8和IE 9的这个属性属于XDomainRequest对象，而Chrome和Safari还不支持。")]),e._v(" "),r("p",[r("strong",[e._v("五、FormData对象")])]),e._v(" "),r("p",[e._v("ajax操作往往用来传递表单数据。为了方便表单处理，HTML 5新增了一个FormData对象，可以模拟表单。")]),e._v(" "),r("p",[e._v("首先，新建一个FormData对象。")]),e._v(" "),r("blockquote",[r("p",[e._v("var formData = new FormData();")])]),e._v(" "),r("p",[e._v("然后，为它添加表单项。")]),e._v(" "),r("blockquote",[r("p",[e._v("formData.append('username', '张三');")]),e._v(" "),r("p",[e._v("formData.append('id', 123456);")])]),e._v(" "),r("p",[e._v("最后，直接传送这个FormData对象。这与提交网页表单的效果，完全一样。")]),e._v(" "),r("blockquote",[r("p",[e._v("xhr.send(formData);")])]),e._v(" "),r("p",[e._v("FormData对象也可以用来获取网页表单的值。")]),e._v(" "),r("blockquote",[r("p",[e._v("var form = document.getElementById('myform');")]),e._v(" "),r("p",[e._v("var formData = new FormData(form);")]),e._v(" "),r("p",[e._v("formData.append('secret', '123456'); // 添加一个表单项")]),e._v(" "),r("p",[e._v("xhr.open('POST', form.action);")]),e._v(" "),r("p",[e._v("xhr.send(formData);")])]),e._v(" "),r("p",[r("strong",[e._v("六、上传文件")])]),e._v(" "),r("p",[e._v("新版XMLHttpRequest对象，不仅可以发送文本信息，还可以上传文件。")]),e._v(" "),r("p",[e._v('假定files是一个"选择文件"的表单元素（input[type="file"]），我们将它装入FormData对象。')]),e._v(" "),r("blockquote",[r("p",[e._v("var formData = new FormData();")]),e._v(" "),r("p",[e._v("for (var i = 0; i < files.length;i++) {")]),e._v(" "),r("p",[e._v("formData.append('files[]', files[i]);")]),e._v(" "),r("p",[e._v("}")])]),e._v(" "),r("p",[e._v("然后，发送这个FormData对象。")]),e._v(" "),r("blockquote",[r("p",[e._v("xhr.send(formData);")])]),e._v(" "),r("p",[r("strong",[e._v("七、跨域资源共享（CORS）")])]),e._v(" "),r("p",[e._v("新版本的XMLHttpRequest对象，可以向不同域名的服务器发出HTTP请求。这叫做"),r("a",{attrs:{href:"http://en.wikipedia.org/wiki/Cross-Origin_Resource_Sharing",target:"_blank",rel:"noopener noreferrer"}},[e._v('"跨域资源共享"'),r("OutboundLink")],1),e._v("（Cross-origin resource sharing，简称CORS）。")]),e._v(" "),r("p",[e._v('使用"跨域资源共享"的前提，是浏览器必须支持这个功能，而且服务器端必须同意这种"跨域"。如果能够满足上面的条件，则代码的写法与不跨域的请求完全一样。')]),e._v(" "),r("blockquote",[r("p",[e._v("xhr.open('GET', 'http://other.server/and/path/to/script');")])]),e._v(" "),r("p",[e._v("目前，除了IE 8和IE 9，主流浏览器都支持CORS，IE 10也将支持这个功能。服务器端的设置，请参考"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Server-Side_Access_Control",target:"_blank",rel:"noopener noreferrer"}},[e._v("《Server-Side Access Control》"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[r("strong",[e._v("八、接收二进制数据（方法A：改写MIMEType）")])]),e._v(" "),r("p",[e._v("老版本的XMLHttpRequest对象，只能从服务器取回文本数据（否则它的名字就不用XML起首了），新版则可以取回二进制数据。")]),e._v(" "),r("p",[e._v("这里又分成两种做法。较老的做法是改写数据的MIMEType，将服务器返回的二进制数据伪装成文本数据，并且告诉浏览器这是用户自定义的字符集。")]),e._v(" "),r("blockquote",[r("p",[e._v('xhr.overrideMimeType("text/plain; charset=x-user-defined");')])]),e._v(" "),r("p",[e._v("然后，用responseText属性接收服务器返回的二进制数据。")]),e._v(" "),r("blockquote",[r("p",[e._v("var binStr = xhr.responseText;")])]),e._v(" "),r("p",[e._v("由于这时，浏览器把它当做文本数据，所以还必须再一个个字节地还原成二进制数据。")]),e._v(" "),r("blockquote",[r("p",[e._v("for (var i = 0, len = binStr.length; i < len; ++i) {")]),e._v(" "),r("p",[e._v("var c = binStr.charCodeAt(i);")]),e._v(" "),r("p",[e._v("var byte = c & 0xff;")]),e._v(" "),r("p",[e._v("}")])]),e._v(" "),r("p",[e._v('最后一行的位运算"c & 0xff"，表示在每个字符的两个字节之中，只保留后一个字节，将前一个字节扔掉。原因是浏览器解读字符的时候，会把字符自动'),r("a",{attrs:{href:"http://web.archive.org/web/20080821092906/http://mgran.blogspot.com/2006/08/downloading-binary-streams-with.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("解读"),r("OutboundLink")],1),e._v("成Unicode的0xF700-0xF7ff区段。")]),e._v(" "),r("p",[r("strong",[e._v("八、接收二进制数据（方法B：responseType属性）")])]),e._v(" "),r("p",[e._v('从服务器取回二进制数据，较新的方法是使用新增的responseType属性。如果服务器返回文本数据，这个属性的值是"TEXT"，这是默认值。较新的浏览器还支持其他值，也就是说，可以接收其他格式的数据。')]),e._v(" "),r("p",[e._v("你可以把responseType设为blob，表示服务器传回的是二进制对象。")]),e._v(" "),r("blockquote",[r("p",[e._v("var xhr = new XMLHttpRequest();")]),e._v(" "),r("p",[e._v("xhr.open('GET', '/path/to/image.png');")]),e._v(" "),r("p",[e._v("xhr.responseType = 'blob';")])]),e._v(" "),r("p",[e._v("接收数据的时候，用浏览器自带的Blob对象即可。")]),e._v(" "),r("blockquote",[r("p",[e._v("var blob = new Blob([xhr.response], {type: 'image/png'});")])]),e._v(" "),r("p",[e._v("注意，是读取xhr.response，而不是xhr.responseText。")]),e._v(" "),r("p",[e._v("你还可以将responseType设为arraybuffer，把二进制数据装在一个数组里。")]),e._v(" "),r("blockquote",[r("p",[e._v("var xhr = new XMLHttpRequest();")]),e._v(" "),r("p",[e._v("xhr.open('GET', '/path/to/image.png');")]),e._v(" "),r("p",[e._v('xhr.responseType = "arraybuffer";')])]),e._v(" "),r("p",[e._v("接收数据的时候，需要遍历这个数组。")]),e._v(" "),r("blockquote",[r("p",[e._v("var arrayBuffer = xhr.response;")]),e._v(" "),r("p",[e._v("if (arrayBuffer) {")]),e._v(" "),r("p",[e._v("var byteArray = new Uint8Array(arrayBuffer);")]),e._v(" "),r("p",[e._v("for (var i = 0; i < byteArray.byteLength; i++) {")]),e._v(" "),r("p",[e._v("// do something")]),e._v(" "),r("p",[e._v("}\n　　}")])]),e._v(" "),r("p",[e._v("更详细的讨论，请看"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sending and Receiving Binary Data"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[r("strong",[e._v("九、进度信息")])]),e._v(" "),r("p",[e._v("新版本的XMLHttpRequest对象，传送数据的时候，有一个progress事件，用来返回进度信息。")]),e._v(" "),r("p",[e._v("它分成上传和下载两种情况。下载的progress事件属于XMLHttpRequest对象，上传的progress事件属于XMLHttpRequest.upload对象。")]),e._v(" "),r("p",[e._v("我们先定义progress事件的回调函数。")]),e._v(" "),r("blockquote",[r("p",[e._v("xhr.onprogress = updateProgress;")]),e._v(" "),r("p",[e._v("xhr.upload.onprogress = updateProgress;")])]),e._v(" "),r("p",[e._v("然后，在回调函数里面，使用这个事件的一些属性。")]),e._v(" "),r("blockquote",[r("p",[e._v("function updateProgress(event) {")]),e._v(" "),r("p",[e._v("if (event.lengthComputable) {")]),e._v(" "),r("p",[e._v("var percentComplete = event.loaded / event.total;")]),e._v(" "),r("p",[e._v("}")]),e._v(" "),r("p",[e._v("}")])]),e._v(" "),r("p",[e._v("上面的代码中，event.total是需要传输的总字节，event.loaded是已经传输的字节。如果event.lengthComputable不为真，则event.total等于0。")]),e._v(" "),r("p",[e._v("与progress事件相关的，还有其他五个事件，可以分别指定回调函数：")]),e._v(" "),r("blockquote",[r("p",[e._v("* load事件：传输成功完成。")]),e._v(" "),r("p",[e._v("* abort事件：传输被用户取消。")]),e._v(" "),r("p",[e._v("* error事件：传输中出现错误。")]),e._v(" "),r("p",[e._v("* loadstart事件：传输开始。")]),e._v(" "),r("p",[e._v("* loadEnd事件：传输结束，但是不知道成功还是失败。")])]),e._v(" "),r("p",[r("strong",[e._v("十、阅读材料")])]),e._v(" "),r("p",[e._v("1. "),r("a",{attrs:{href:"http://dev.opera.com/articles/view/xhr2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introduction to XMLHttpRequest Level 2"),r("OutboundLink")],1),e._v("： 新功能的综合介绍。")]),e._v(" "),r("p",[e._v("2. "),r("a",{attrs:{href:"http://www.html5rocks.com/en/tutorials/file/xhr2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("New Tricks in XMLHttpRequest 2"),r("OutboundLink")],1),e._v("：一些用法的介绍。")]),e._v(" "),r("p",[e._v("3. "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using XMLHttpRequest"),r("OutboundLink")],1),e._v("：一些高级用法，主要针对Firefox浏览器。")]),e._v(" "),r("p",[e._v("4. "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/HTTP_access_control",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP Access Control"),r("OutboundLink")],1),e._v("：CORS综述。")]),e._v(" "),r("p",[e._v("5. "),r("a",{attrs:{href:"http://dev.opera.com/articles/view/dom-access-control-using-cross-origin-resource-sharing/",target:"_blank",rel:"noopener noreferrer"}},[e._v("DOM access control using cross-origin resource sharing"),r("OutboundLink")],1),e._v("：CORS的9种HTTP头信息")]),e._v(" "),r("p",[e._v("6. "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Server-Side_Access_Control",target:"_blank",rel:"noopener noreferrer"}},[e._v("Server-Side Access Control"),r("OutboundLink")],1),e._v("：服务器端CORS设置。")]),e._v(" "),r("p",[e._v("7. "),r("a",{attrs:{href:"http://enable-cors.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Enable CORS"),r("OutboundLink")],1),e._v("：服务端CORS设置。")]),e._v(" "),r("p",[e._v("（完）")]),e._v(" "),r("h3",{attrs:{id:"文档信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文档信息"}},[e._v("#")]),e._v(" 文档信息")]),e._v(" "),r("ul",[r("li",[e._v("版权声明：自由转载-非商用-非衍生-保持署名（"),r("a",{attrs:{href:"http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh",target:"_blank",rel:"noopener noreferrer"}},[e._v("创意共享3.0许可证"),r("OutboundLink")],1),e._v("）")]),e._v(" "),r("li",[e._v("发表日期： 2012年9月 8日")])]),e._v(" "),r("h2",{attrs:{id:"相关文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相关文章"}},[e._v("#")]),e._v(" 相关文章")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("2021.01.20: "),r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2021/01/clipboard-api.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("剪贴板操作 Clipboard API 教程"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("一、简介 浏览器允许 JavaScript 脚本读写剪贴板，自动复制或粘贴内容。")])]),e._v(" "),r("li",[r("p",[e._v("2020.12.28: "),r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2020/12/fetch-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fetch API 教程"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("fetch()是 XMLHttpRequest 的升级版，用于在 JavaScript 脚本里面发出 HTTP 请求。")])]),e._v(" "),r("li",[r("p",[e._v("2020.09.15: "),r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2020/09/react-hooks-useeffect-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("轻松学会 React 钩子：以 useEffect() 为例"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("五年多前，我写过 React 系列教程。不用说，内容已经有些过时了。")])]),e._v(" "),r("li",[r("p",[e._v("2020.08.20: "),r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2020/08/how-nodejs-use-es6-module.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js 如何处理 ES6 模块"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("学习 JavaScript 语言，你会发现它有两种格式的模块。")])])])])}),[],!1,null,null,null);r.default=_.exports}}]);