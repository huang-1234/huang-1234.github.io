(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{627:function(t,e,r){"use strict";r.r(e);var l=r(2),n=Object(l.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"类-对象详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类-对象详解"}},[t._v("#")]),t._v(" 类 & 对象详解")]),t._v(" "),e("p",[t._v("到目前为止，我们已经对 C++ 的类和对象有了基本的了解。下面的列表中还列出了其他一些 C++ 类和对象相关的概念，可以点击相应的链接进行学习。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("概念")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-class-member-functions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("类成员函数"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("类的成员函数是指那些把定义和原型写在类定义内部的函数，就像类定义中的其他变量一样。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-class-access-modifiers.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("类访问修饰符"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("类成员可以被定义为 public、private 或 protected。默认情况下是定义为 private。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-constructor-destructor.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("构造函数 & 析构函数"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("类的构造函数是一种特殊的函数，在创建一个新的对象时调用。类的析构函数也是一种特殊的函数，在删除所创建的对象时调用。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-copy-constructor.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 拷贝构造函数"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("拷贝构造函数，是一种特殊的构造函数，它在创建对象时，是使用同一类中之前创建的对象来初始化新创建的对象。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-friend-functions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 友元函数"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("友元函数")]),t._v("可以访问类的 private 和 protected 成员。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-inline-functions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 内联函数"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("通过内联函数，编译器试图在调用函数的地方扩展函数体中的代码。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-this-pointer.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 中的 this 指针"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("每个对象都有一个特殊的指针 "),e("strong",[t._v("this")]),t._v("，它指向对象本身。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-pointer-to-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 中指向类的指针"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指向类的指针方式如同指向结构的指针。实际上，类可以看成是一个带有函数的结构。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-static-members.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 类的静态成员"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("类的数据成员和函数成员都可以被声明为静态的。")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);