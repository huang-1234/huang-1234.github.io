(window.webpackJsonp=window.webpackJsonp||[]).push([[447],{879:function(t,s,n){"use strict";n.r(s);var a=n(2),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"你真的了解-react-生命周期吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你真的了解-react-生命周期吗"}},[t._v("#")]),t._v(" 你真的了解 React 生命周期吗")]),t._v(" "),s("p",[t._v("React 生命周期很多人都了解，但通常我们所了解的都是 "),s("strong",[t._v("单个组件")]),t._v(" 的生命周期，但针对 "),s("strong",[t._v("Hooks 组件、多个关联组件")]),t._v("（父子组件和兄弟组件） 的生命周期又是怎么样的喃？你有思考和了解过吗，接下来我们将完整的了解 React 生命周期。")]),t._v(" "),s("p",[t._v("关于 "),s("strong",[t._v("组件")]),t._v(" ，我们这里指的是 "),s("code",[t._v("React.Component")]),t._v(" 以及 "),s("code",[t._v("React.PureComponent")]),t._v(" ，但是否包括 Hooks 组件喃？")]),t._v(" "),s("h3",{attrs:{id:"一、hooks-组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、hooks-组件"}},[t._v("#")]),t._v(" 一、Hooks 组件")]),t._v(" "),s("p",[s("strong",[t._v("函数组件")]),t._v(" 的本质是函数，没有 state 的概念的，因此"),s("strong",[t._v("不存在生命周期")]),t._v("一说，仅仅是一个 "),s("strong",[t._v("render 函数")]),t._v("而已。")]),t._v(" "),s("p",[t._v("但是引入 "),s("strong",[t._v("Hooks")]),t._v(" 之后就变得不同了，它能让组件在不使用 class 的情况下拥有 state，所以就有了生命周期的概念，所谓的生命周期其实就是 "),s("code",[t._v("useState")]),t._v(" 、 "),s("code",[t._v("useEffect()")]),t._v(" 和 "),s("code",[t._v("useLayoutEffect()")]),t._v(" 。")]),t._v(" "),s("p",[t._v("即："),s("strong",[t._v("Hooks 组件（使用了Hooks的函数组件）有生命周期，而函数组件（未使用Hooks的函数组件）是没有生命周期的")]),t._v("。")]),t._v(" "),s("p",[t._v("下面，是具体的 class 与 Hooks 的"),s("strong",[t._v("生命周期对应关系")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("constructor")]),t._v(" ：函数组件不需要构造函数，我们可以通过调用 ** "),s("code",[t._v("useState")]),t._v(" 来初始化 state**。如果计算的代价比较昂贵，也可以传一个函数给 "),s("code",[t._v("useState")]),t._v(" 。")]),t._v(" "),s("p",[t._v("const [num, UpdateNum] = useState(0)")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("getDerivedStateFromProps")]),t._v(" ：一般情况下，我们不需要使用它，我们可以在"),s("strong",[t._v("渲染过程中更新 state")]),t._v("，以达到实现 "),s("code",[t._v("getDerivedStateFromProps")]),t._v(" 的目的。")]),t._v(" "),s("p",[t._v("function ScrollView({row}) {\nlet [isScrollingDown, setIsScrollingDown] = useState(false);\nlet [prevRow, setPrevRow] = useState(null);")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("if (row !== prevRow) {\n  // Row 自上次渲染以来发生过改变。更新 isScrollingDown。\n  setIsScrollingDown(prevRow !== null && row > prevRow);\n  setPrevRow(row);\n}\n\nreturn `Scrolling down: ${isScrollingDown}` ;\n")])])]),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("React 会立即退出第一次渲染并用更新后的 state 重新运行组件以避免耗费太多性能。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("shouldComponentUpdate")]),t._v(" ：可以用 "),s("strong",[s("code",[t._v("React.memo")])]),t._v(" 包裹一个组件来对它的 "),s("code",[t._v("props")]),t._v(" 进行浅比较")]),t._v(" "),s("p",[t._v("const Button = React.memo((props) => {\n// 具体的组件\n});")]),t._v(" "),s("p",[t._v("注意：** "),s("code",[t._v("React.memo")]),t._v("  等效于  "),s("code",[t._v("PureComponent")]),t._v(" **，它只浅比较 props。这里也可以使用 "),s("code",[t._v("useMemo")]),t._v(" 优化每一个节点。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("render")]),t._v(" ：这是函数组件体本身。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("componentDidMount")]),t._v(" , "),s("code",[t._v("componentDidUpdate")]),t._v(" ：  "),s("code",[t._v("useLayoutEffect")]),t._v("  与它们两的调用阶段是一样的。但是，我们推荐你"),s("strong",[t._v("一开始先用 useEffect")]),t._v("，只有当它出问题的时候再尝试使用  "),s("code",[t._v("useLayoutEffect")]),t._v(" 。 "),s("code",[t._v("useEffect")]),t._v(" 可以表达所有这些的组合。")]),t._v(" "),s("p",[t._v("// componentDidMount\nuseEffect(()=>{\n// 需要在 componentDidMount 执行的内容\n}, [])")]),t._v(" "),s("p",[t._v("useEffect(() => {\n// 在 componentDidMount，以及 count 更改时 componentDidUpdate 执行的内容\ndocument.title = "),s("code",[t._v("You clicked ${count} times")]),t._v(" ;\nreturn () => {\n// 需要在 count 更改时 componentDidUpdate（先于 document.title = ... 执行，遵守先清理后更新）\n// 以及 componentWillUnmount 执行的内容\n} // 当函数中 Cleanup 函数会按照在代码中定义的顺序先后执行，与函数本身的特性无关\n}, [count]); // 仅在 count 更改时更新")]),t._v(" "),s("p",[s("strong",[t._v("请记得 React 会等待浏览器完成画面渲染之后才会延迟调用  "),s("code",[t._v("useEffect")]),t._v(" ，因此会使得额外操作很方便")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("componentWillUnmount")]),t._v(" ：相当于 "),s("code",[t._v("useEffect")]),t._v(" 里面返回的 "),s("code",[t._v("cleanup")]),t._v(" 函数")]),t._v(" "),s("p",[t._v("// componentDidMount/componentWillUnmount\nuseEffect(()=>{\n// 需要在 componentDidMount 执行的内容\nreturn function cleanup() {\n// 需要在 componentWillUnmount 执行的内容\n}\n}, [])")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("componentDidCatch")]),t._v(" and "),s("code",[t._v("getDerivedStateFromError")]),t._v(" ：目前"),s("strong",[t._v("还没有")]),t._v("这些方法的 Hook 等价写法，但很快会加上。")])])]),t._v(" "),s("p",[t._v("为方便记忆，大致汇总成表格如下。")]),t._v(" "),s("p",[t._v("class 组件")]),t._v(" "),s("p",[t._v("Hooks 组件")]),t._v(" "),s("p",[t._v("constructor")]),t._v(" "),s("p",[t._v("useState")]),t._v(" "),s("p",[t._v("getDerivedStateFromProps")]),t._v(" "),s("p",[t._v("useState 里面 update 函数")]),t._v(" "),s("p",[t._v("shouldComponentUpdate")]),t._v(" "),s("p",[t._v("useMemo")]),t._v(" "),s("p",[t._v("render")]),t._v(" "),s("p",[t._v("函数本身")]),t._v(" "),s("p",[t._v("componentDidMount")]),t._v(" "),s("p",[t._v("useEffect")]),t._v(" "),s("p",[t._v("componentDidUpdate")]),t._v(" "),s("p",[t._v("useEffect")]),t._v(" "),s("p",[t._v("componentWillUnmount")]),t._v(" "),s("p",[t._v("useEffect 里面返回的函数")]),t._v(" "),s("p",[t._v("componentDidCatch")]),t._v(" "),s("p",[t._v("无")]),t._v(" "),s("p",[t._v("getDerivedStateFromError")]),t._v(" "),s("p",[t._v("无")]),t._v(" "),s("h3",{attrs:{id:"二、单个组件的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、单个组件的生命周期"}},[t._v("#")]),t._v(" 二、单个组件的生命周期")]),t._v(" "),s("h4",{attrs:{id:"_1-生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-生命周期"}},[t._v("#")]),t._v(" 1. 生命周期")]),t._v(" "),s("h5",{attrs:{id:"v16-3-之前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v16-3-之前"}},[t._v("#")]),t._v(" V16. 3 之前")]),t._v(" "),s("p",[t._v("我们可以将生命周期分为三个阶段：")]),t._v(" "),s("ul",[s("li",[t._v("挂载阶段")]),t._v(" "),s("li",[t._v("组件更新阶段")]),t._v(" "),s("li",[t._v("卸载阶段")])]),t._v(" "),s("p",[t._v("分开来讲：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("挂载阶段")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("constructor")]),t._v(" ：避免将 props 的值复制给 state")]),t._v(" "),s("li",[s("code",[t._v("componentWillMount")])]),t._v(" "),s("li",[s("code",[t._v("render")]),t._v(" ：react 最重要的步骤，创建虚拟 dom，进行 diff 算法，更新 dom 树都在此进行")]),t._v(" "),s("li",[s("code",[t._v("componentDidMount")])])])]),t._v(" "),s("li",[s("p",[t._v("组件更新阶段")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("componentWillReceiveProps")])]),t._v(" "),s("li",[s("code",[t._v("shouldComponentUpdate")])]),t._v(" "),s("li",[s("code",[t._v("componentWillUpdate")])]),t._v(" "),s("li",[s("code",[t._v("render")])]),t._v(" "),s("li",[s("code",[t._v("componentDidUpdate")])])])]),t._v(" "),s("li",[s("p",[t._v("卸载阶段")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("componentWillUnMount")])])])])]),t._v(" "),s("p",[t._v("这种生命周期会存在一个问题，那就是当更新复杂组件的最上层组件时，调用栈会很长，如果在进行复杂的操作时，就可能长时间阻塞主线程，带来不好的用户体验，"),s("strong",[t._v("Fiber")]),t._v(" 就是为了解决该问题而生。")]),t._v(" "),s("h5",{attrs:{id:"v16-3-之后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v16-3-之后"}},[t._v("#")]),t._v(" V16. 3 之后")]),t._v(" "),s("p",[s("strong",[t._v("Fiber 本质上是一个虚拟的堆栈帧，新的调度器会按照优先级自由调度这些帧，从而将之前的同步渲染改成了异步渲染，在不影响体验的情况下去分段计算更新。")])]),t._v(" "),s("p",[t._v("对于异步渲染，分为两阶段：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("reconciliation")]),t._v(" ：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("componentWillMount")])]),t._v(" "),s("li",[s("code",[t._v("componentWillReceiveProps")])]),t._v(" "),s("li",[s("code",[t._v("shouldConmponentUpdate")])]),t._v(" "),s("li",[s("code",[t._v("componentWillUpdate")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("commit")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("componentDidMount")])]),t._v(" "),s("li",[s("code",[t._v("componentDidUpdate")])])])])]),t._v(" "),s("p",[t._v("其中， "),s("code",[t._v("reconciliation")]),t._v(" 阶段是可以被打断的，所以 "),s("code",[t._v("reconcilation")]),t._v(" 阶段执行的函数就会出现多次调用的情况，显然，这是不合理的。")]),t._v(" "),s("p",[t._v("所以 V16. 3 引入了新的 API 来解决这个问题：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("static getDerivedStateFromProps")]),t._v(" ： 该函数在"),s("strong",[t._v("挂载阶段和组件更新阶段")]),t._v("都会执行，即"),s("strong",[t._v("每次获取新的 "),s("code",[t._v("props")]),t._v(" 或 "),s("code",[t._v("state")]),t._v(" 之后都会被执行")]),t._v("，**在挂载阶段用来代替 "),s("code",[t._v("componentWillMount")]),t._v(" **；在组件更新阶段配合 "),s("code",[t._v("componentDidUpdate")]),t._v(" ，可以覆盖 "),s("code",[t._v("componentWillReceiveProps")]),t._v(" 的所有用法。")]),t._v(" "),s("p",[t._v("同时它是一个静态函数，所以函数体内不能访问 "),s("code",[t._v("this")]),t._v(" ，会根据 "),s("code",[t._v("nextProps")]),t._v(" 和 "),s("code",[t._v("prevState")]),t._v(" 计算出预期的状态改变，返回结果会被送给 "),s("code",[t._v("setState")]),t._v(" "),s("strong",[t._v("，"),s("strong",[t._v("返回 "),s("code",[t._v("null")]),t._v(" 则说明不需要更新 "),s("code",[t._v("state")]),t._v(" ，并且这个返回是")]),t._v("必须的")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("getSnapshotBeforeUpdate")]),t._v(" : 该函数会在 ** "),s("code",[t._v("render")]),t._v("  之后， DOM 更新前**被调用，用于读取最新的 DOM 数据。")]),t._v(" "),s("p",[t._v("返回一个值，"),s("strong",[t._v("作为 "),s("code",[t._v("componentDidUpdate")]),t._v(" 的第三个参数")]),t._v("；配合 "),s("code",[t._v("componentDidUpdate")]),t._v(" , 可以覆盖 "),s("code",[t._v("componentWillUpdate")]),t._v(" 的所有用法。")])])]),t._v(" "),s("p",[t._v("注意：V16. 3 中只用在组件挂载或组件 "),s("code",[t._v("props")]),t._v(" 更新过程才会调用，即如果是因为自身 setState 引发或者forceUpdate 引发，而不是由父组件引发的话，那么 "),s("code",[t._v("static getDerivedStateFromProps")]),t._v(" 也不会被调用，在 V16. 4 中更正为都调用。")]),t._v(" "),s("p",[t._v("即更新后的生命周期为：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("挂载阶段")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("constructor")])]),t._v(" "),s("li",[s("code",[t._v("static getDerivedStateFromProps")])]),t._v(" "),s("li",[s("code",[t._v("render")])]),t._v(" "),s("li",[s("code",[t._v("componentDidMount")])])])]),t._v(" "),s("li",[s("p",[t._v("更新阶段")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("static getDerivedStateFromProps")])]),t._v(" "),s("li",[s("code",[t._v("shouldComponentUpdate")])]),t._v(" "),s("li",[s("code",[t._v("render")])]),t._v(" "),s("li",[s("code",[t._v("getSnapshotBeforeUpdate")])]),t._v(" "),s("li",[s("code",[t._v("componentDidUpdate")])])])]),t._v(" "),s("li",[s("p",[t._v("卸载阶段")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("componentWillUnmount")])])])])]),t._v(" "),s("h4",{attrs:{id:"_2-生命周期-误区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-生命周期-误区"}},[t._v("#")]),t._v(" 2. 生命周期，误区")]),t._v(" "),s("p",[s("strong",[t._v("误解一：")]),t._v(" "),s("code",[t._v("getDerivedStateFromProps")]),t._v("  和  "),s("code",[t._v("componentWillReceiveProps")]),t._v("  只会在 "),s("code",[t._v("props")]),t._v(" "),s("strong",[t._v("改变")]),t._v(" 时才会调用")]),t._v(" "),s("p",[t._v("实际上，"),s("strong",[t._v("只要父级重新渲染， "),s("code",[t._v("getDerivedStateFromProps")]),t._v("  和  "),s("code",[t._v("componentWillReceiveProps")]),t._v("  都会重新调用，不管 "),s("code",[t._v("props")]),t._v(" 有没有变化")]),t._v("。所以，在这两个方法内直接将 props 赋值到 state 是不安全的。")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PhoneInput")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" phone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleChange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" phone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onChange")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillReceiveProps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要这样做。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这会覆盖掉之前所有的组件内 state 更新！")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用了 setInterval，")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每秒钟都会更新一下 state.count")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这将导致 App 每秒钟重新渲染一次")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillUnmount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n          Start editing to see some magic happen :)\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PhoneInput")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("phone")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("call me!"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n          This component will re-render every second. Each time it renders, the\n          text you type will be reset. This illustrates a derived state\n          anti-pattern.\n        ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("[实例可点击这里查看](https://link.segmentfault.com/?enc=9yU3jvyXtpm9Mg9MdmrDzA%3D%3D. cpcvM8qSJ7iifBDLElSSzmgd%2F62gaS03XEIug9bsPc2u%2FWhe1vyN%2B7f%2Bj3wMF6vd)")]),t._v(" "),s("p",[t._v("当然，我们可以在 父组件App 中 "),s("code",[t._v("shouldComponentUpdate")]),t._v(" 比较 props 的 email 是不是修改再决定要不要重新渲染，但是如果子组件接受多个 props（较为复杂），就很难处理，而且 "),s("code",[t._v("shouldComponentUpdate")]),t._v(" 主要是用来性能提升的，不推荐开发者操作 "),s("code",[t._v("shouldComponetUpdate")]),t._v(" （可以使用 "),s("code",[t._v("React.PureComponet")]),t._v(" ）。")]),t._v(" "),s("p",[t._v("我们也可以使用 "),s("strong",[t._v("在 props 变化后修改 state")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PhoneInput")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillReceiveProps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只要 props.phone 改变，就改变 state")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但这种也会导致一个问题，当 props 较为复杂时，props 与 state 的关系不好控制，可能导致问题")]),t._v(" "),s("p",[t._v("解决方案一："),s("strong",[t._v("完全可控的组件")])]),t._v(" "),s("p",[t._v("function PhoneInput(props) {\nreturn <input onChange={props. onChange} value={props. phone} />;\n}")]),t._v(" "),s("p",[s("strong",[t._v("完全由 props 控制，不派生 state")])]),t._v(" "),s("p",[t._v("解决方案二："),s("strong",[t._v("有 key 的非可控组件")])]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PhoneInput")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" defaultPhone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleChange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onChange")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PhoneInput")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("defaultPhone")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("当  "),s("code",[t._v("key")]),t._v("  变化时， React 会"),s("strong",[t._v("创建一个新的而不是更新一个既有的组件")])]),t._v(" "),s("p",[s("strong",[t._v("误解二")]),t._v("：将 props 的值直接复制给 state")]),t._v(" "),s("p",[s("strong",[t._v("应避免将 props 的值复制给 state")])]),t._v(" "),s("p",[t._v("constructor(props) {\nsuper(props);\n// 千万不要这样做\n// 直接用 props，保证单一数据源\nthis. state = { phone: props. phone };\n}")]),t._v(" "),s("h3",{attrs:{id:"三、多个组件的执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、多个组件的执行顺序"}},[t._v("#")]),t._v(" 三、多个组件的执行顺序")]),t._v(" "),s("h4",{attrs:{id:"_1-父子组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-父子组件"}},[t._v("#")]),t._v(" 1. 父子组件")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("挂载阶段")])]),t._v(" "),s("p",[t._v("分 "),s("strong",[t._v("两个")]),t._v(" 阶段：")]),t._v(" "),s("ul",[s("li",[t._v("第 "),s("strong",[t._v("一")]),t._v(" 阶段，由父组件开始执行到自身的 "),s("code",[t._v("render")]),t._v(" ，解析其下有哪些子组件需要渲染，并对其中 "),s("strong",[t._v("同步的子组件")]),t._v(" 进行创建，按 "),s("strong",[t._v("递归顺序")]),t._v(" 挨个执行各个子组件至 "),s("code",[t._v("render")]),t._v(" ，生成到父子组件对应的 Virtual DOM 树，并 commit 到 DOM。")]),t._v(" "),s("li",[t._v("第 "),s("strong",[t._v("二")]),t._v(" 阶段，此时 DOM 节点已经生成完毕，组件挂载完成，开始后续流程。先依次触发同步子组件各自的 "),s("code",[t._v("componentDidMount")]),t._v(" ，最后触发父组件的。")])])])]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：如果父组件中包含异步子组件，则会在父组件挂载完成后被创建。")]),t._v(" "),s("p",[t._v("所以执行顺序是：")]),t._v(" "),s("p",[t._v("父组件 getDerivedStateFromProps —> 同步子组件 getDerivedStateFromProps —> 同步子组件 componentDidMount —> 父组件 componentDidMount —> 异步子组件 getDerivedStateFromProps —> 异步子组件 componentDidMount")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("更新阶段")])]),t._v(" "),s("p",[s("strong",[t._v("React 的设计遵循单向数据流模型")]),t._v(" ，也就是说，数据均是由父组件流向子组件。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第 "),s("strong",[t._v("一")]),t._v(" 阶段，由父组件开始，执行")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("static getDerivedStateFromProps")])]),t._v(" "),s("li",[s("code",[t._v("shouldComponentUpdate")])])])])])])]),t._v(" "),s("p",[t._v("更新到自身的 "),s("code",[t._v("render")]),t._v(" ，解析其下有哪些子组件需要渲染，并对 "),s("strong",[t._v("子组件")]),t._v(" 进行创建，按 "),s("strong",[t._v("递归顺序")]),t._v(" 挨个执行各个子组件至 "),s("code",[t._v("render")]),t._v(" ，生成到父子组件对应的 Virtual DOM 树，并与已有的 Virtual DOM 树 比较，计算出 "),s("strong",[t._v("Virtual DOM 真正变化的部分")]),t._v(" ，并只针对该部分进行的原生DOM操作。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第 "),s("strong",[t._v("二")]),t._v(" 阶段，此时 DOM 节点已经生成完毕，组件挂载完成，开始后续流程。先依次触发同步子组件以下函数，最后触发父组件的。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("getSnapshotBeforeUpdate()")])]),t._v(" "),s("li",[s("code",[t._v("componentDidUpdate()")])])])])]),t._v(" "),s("p",[t._v("React 会按照上面的顺序依次执行这些函数，每个函数都是各个子组件的先执行，然后才是父组件的执行。")]),t._v(" "),s("p",[t._v("所以执行顺序是：")]),t._v(" "),s("p",[t._v("父组件 getDerivedStateFromProps —> 父组件 shouldComponentUpdate —> 子组件 getDerivedStateFromProps —> 子组件 shouldComponentUpdate —> 子组件 getSnapshotBeforeUpdate —>  父组件 getSnapshotBeforeUpdate —> 子组件 componentDidUpdate —> 父组件 componentDidUpdate")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("卸载阶段")])])]),t._v(" "),s("p",[s("code",[t._v("componentWillUnmount()")]),t._v(" ，顺序为 "),s("strong",[t._v("父组件的先执行，子组件按照在 JSX 中定义的顺序依次执行各自的方法")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("**注意** ：如果卸载旧组件的同时伴随有新组件的创建，新组件会先被创建并执行完 `render` ，然后卸载不需要的旧组件，最后新组件执行挂载完成的回调。\n")])])]),s("h4",{attrs:{id:"_2-兄弟组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-兄弟组件"}},[t._v("#")]),t._v(" 2. 兄弟组件")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("挂载阶段")])]),t._v(" "),s("p",[t._v("若是同步路由，它们的创建顺序和其在共同父组件中定义的先后顺序是 "),s("strong",[t._v("一致")]),t._v(" 的。")]),t._v(" "),s("p",[t._v("若是异步路由，它们的创建顺序和 js 加载完成的顺序一致。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("更新阶段、卸载阶段")])]),t._v(" "),s("p",[t._v("兄弟节点之间的通信主要是经过父组件（Redux 和 Context 也是通过改变父组件传递下来的  "),s("code",[t._v("props")]),t._v("  实现的），"),s("strong",[t._v("满足React 的设计遵循单向数据流模型")]),t._v("， "),s("strong",[t._v("因此任何两个组件之间的通信，本质上都可以归结为父子组件更新的情况")]),t._v(" 。")]),t._v(" "),s("p",[t._v("所以，兄弟组件更新、卸载阶段，请参考 "),s("strong",[t._v("父子组件")]),t._v("。")])])]),t._v(" "),s("p",[t._v("走在最后：走心推荐一个在线编辑工具：[StackBlitz](https://link.segmentfault.com/?enc=HZZy8WcmQ2gvxTfWrELIxw%3D%3D. DNF3yhyp5VJM%2F1hUHqTNNLk9tvZgR9svxx9TByi1VPE%3D), 可以在线编辑 Angular、React、TypeScript、RxJS、Ionic、Svelte项目")]),t._v(" "),s("p",[t._v("预告：后续将加入高阶组件的生命周期，敬请期待小瓶子的下次更新。")])])}),[],!1,null,null,null);s.default=e.exports}}]);