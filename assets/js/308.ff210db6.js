(window.webpackJsonp=window.webpackJsonp||[]).push([[308],{738:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_4-字符串大总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符串大总结"}},[t._v("#")]),t._v(" 4. 字符串大总结")]),t._v(" "),s("h2",{attrs:{id:"字符串简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串简介"}},[t._v("#")]),t._v(" 字符串简介")]),t._v(" "),s("ol",[s("li",[t._v("length 属性返回字符串的长度：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" txt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABCDEFGHIJKLMNOPQRSTUVWXYZ"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sln "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" txt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),s("ol",{attrs:{start:"2"}},[s("li")]),t._v(" "),s("ul",[s("li",[t._v("查找字符串中的字符串\nindexOf() 方法返回字符串中指定文本首次出现的索引（位置）：")]),t._v(" "),s("li",[t._v("lastIndexOf() 方法返回指定文本在字符串中最后一次出现的索引：")]),t._v(" "),s("li",[t._v("两种方法都接受作为检索起始位置的第二个参数。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The full name of China is the People\'s Republic of China."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"China"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//17")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"China"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//51 表示最后面一个china")]),t._v("\n")])])]),s("ul",[s("li",[t._v("两种方法，indexOf() 与 search()，是相等的。\n这两种方法是不相等的。区别在于：\n"),s("ul",[s("li",[t._v("search() 方法无法设置第二个开始位置参数。")]),t._v(" "),s("li",[t._v("indexOf() 方法无法设置更强大的搜索值（正则表达式）。")]),t._v(" "),s("li",[t._v("search()可以设置正则表达式进行搜索。")])])]),t._v(" "),s("li",[t._v("您将在正则表达式的章节学习到这些更强大的检索值。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The full 2 name 1369 of China is the People\'s Republic of China."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[0-9]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//9")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"提取部分字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提取部分字符串"}},[t._v("#")]),t._v(" 提取部分字符串")]),t._v(" "),s("p",[t._v("JavaScript 中 slice 、substr 和 substring的区别：")]),t._v(" "),s("p",[t._v("String 对象的方法 slice()、substring() 和 substr() (不建议使用)都可返回字符串的指定部分。slice() 比 substring() 要灵活一些，因为它允许使用负数作为参数。slice() 与 substr() 有所不同，因为它用两个字符的位置来指定子串，而 substr() 则用字符位置和长度来指定子串。")]),t._v(" "),s("p",[t._v("有三种提取部分字符串的方法："),s("code",[t._v("return new string")])]),t._v(" "),s("ul",[s("li",[t._v("slice("),s("em",[t._v("start")]),t._v(", "),s("em",[t._v("end")]),t._v(")")]),t._v(" "),s("li",[t._v("substring("),s("em",[t._v("start")]),t._v(", "),s("em",[t._v("end")]),t._v(")")]),t._v(" "),s("li",[t._v("substr("),s("em",[t._v("start")]),t._v(", "),s("em",[t._v("length")]),t._v(")")])]),t._v(" "),s("h3",{attrs:{id:"string-slice-start-0-end-string-length-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-slice-start-0-end-string-length-方法"}},[t._v("#")]),t._v(" string.slice(start=0,end=string.length) 方法")]),t._v(" "),s("p",[t._v("返回一个新的字符串。包括字符串 stringObject 从 start 开始（包括 start）到 end 结束（不包括 end）为止的所有字符.")]),t._v(" "),s("p",[t._v("该方法设置两个参数：起始索引（开始位置），终止索引（结束位置）。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Apple, Banana, Mango"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Banana, Mango (从索引7开始到字符串的最后边提取，返回提取后的字符串)")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" res1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Banana")]),t._v("\n")])])]),s("h3",{attrs:{id:"string-substring-start-0-end-string-length-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-substring-start-0-end-string-length-方法"}},[t._v("#")]),t._v(" string.substring(start=0,end=string.length) 方法")]),t._v(" "),s("p",[t._v("substring() 类似于 slice()。不同之处在于 substring() 无法接受负的索引。")]),t._v(" "),s("h3",{attrs:{id:"substr-start-0-len-string-length-start-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substr-start-0-len-string-length-start-方法"}},[t._v("#")]),t._v(" substr(start=0,len=string.length-start) 方法")]),t._v(" "),s("p",[t._v("substr() 类似于 slice()。")]),t._v(" "),s("p",[t._v("不同之处在于"),s("font",{attrs:{color:"red"}},[t._v("第二个参数规定被提取部分的长度")]),t._v("。")],1),t._v(" "),s("p",[t._v("substr()会将"),s("strong",[t._v("第一个")]),t._v("位置的"),s("strong",[t._v("负值")]),t._v("参数加上字符串长度后转为正数")]),t._v(" "),s("p",[t._v("如果省略第二个参数，则该 substr() 将裁剪字符串的剩余部分。")]),t._v(" "),s("h2",{attrs:{id:"替换字符串内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换字符串内容"}},[t._v("#")]),t._v(" 替换字符串内容")]),t._v(" "),s("p",[t._v("replace() 方法用另一个值替换在字符串中指定的值：")]),t._v(" "),s("h2",{attrs:{id:"js字符与ascii码互转的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js字符与ascii码互转的方法"}},[t._v("#")]),t._v(" js字符与ASCII码互转的方法")]),t._v(" "),s("p",[t._v("大写字母A-Z对应的ASCII码值是65-90\n小写字母a-z对应的ASCII码值是97-122")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将字母转为ascii嘛的方法：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 65")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 97")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将ascii码转为对应字母的方法：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'a'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'd'")]),t._v("\n")])])]),s("h1",{attrs:{id:"从mdn系统学习string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从mdn系统学习string"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String",target:"_blank",rel:"noopener noreferrer"}},[t._v("从MDN系统学习String"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("示例 String.prototype.charAt() 下面的都是js内置对象中String对象的方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"right"}})])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"right"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"right"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"right"}})])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("String方法")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),s("th",[t._v("代码示例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. charAt(pos)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回特定位置的字符。")]),t._v(" "),s("td",[t._v("str.charAt(index=0)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. charCodeAt()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回表示给定索引的字符的Unicode的值。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. codePointAt()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回使用UTF-16编码的给定位置的值的非负整数。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. concat()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("连接两个字符串文本，并返回一个新的字符串。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. includes()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("判断一个字符串里是否包含其他字符串。")]),t._v(" "),s("td",[t._v("str.includes(searchString[, position=0]) 返回Boolean")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. endsWith()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("判断一个字符串的是否以给定字符串结尾，结果返回布尔值。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. indexOf(str)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从字符串对象中返回首个被发现的给定值的索引值，如果没有找到则返回-1。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. lastIndexOf()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从字符串对象中返回最后一个被发现的给定值的索引值，如果没有找到则返回-1。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. localeCompare()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回一个数字表示是否引用字符串在排序中位于比较字符串的前面，后面，或者二者相同。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. match()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("使用正则表达式与字符串相比较。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. normalize()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回调用字符串值的Unicode标准化形式。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. padEnd()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在当前字符串尾部填充指定的字符串， 直到达到指定的长度。")]),t._v(" "),s("td",[t._v("返回一个新的字符串。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. padStart()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在当前字符串头部填充指定的字符串， 直到达到指定的长度。 返回一个新的字符串。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. quote()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置嵌入引用的引号类型。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. repeat()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回指定重复次数的由元素组成的字符串对象。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. replace()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("被用来在正则表达式和字符串直接比较，然后用新的子串来替换被匹配的子串。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. search()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("对正则表达式和指定字符串进行匹配搜索，返回第一个出现的匹配项的下标。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. slice()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("摘取一个字符串区域，返回一个新的字符串。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. split()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("通过分离字符串成字串，将字符串对象分割成字符串数组。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. startsWith()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("断字符串的起始位置是否匹配其他字符串中的字符。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. substr()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("通过指定字符数返回在指定位置开始的字符串中的字符。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. substring()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回在字符串中指定两个下标之间的字符。")]),t._v(" "),s("td",[t._v("basic = basic.substring(0, basic.length - 1);")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1.toLocaleLowerCase()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据当前区域设置，将符串中的字符转换成小写。对于大多数语言来说，toLowerCase的返回值是一致的。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1.toLocaleUpperCase()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("据当前区域设置，将字符串中的字符转换成大写，对于大多数语言来说，toUpperCase的返回值是一致的。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. toLowerCase()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将字符串转换成小写并返回。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. toSource()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回一个对象文字代表着特定的对象。你可以使用这个返回值来创建新的对象。重写 Object.prototype.toSource 方法。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. toString()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回用字符串表示的特定对象。重写 Object.prototype.toString 方法。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. toUpperCase()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将字符串转换成大写并返回。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. trim()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从字符串的开始和结尾去除空格。参照部分 ECMAScript 5 标准。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. trimStart()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从字符串的右侧去除空格。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. trimLeft()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从字符串的左侧去除空格。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. trimEnd()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. trimRight()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从字符串的右侧去除空格。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1. valueOf()")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回特定对象的原始值，重写 Object.prototype.valueOf 方法。")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("String.prototype"),s("a",{attrs:{href:""}},[t._v("@@iterator")])]),t._v(" "),s("p",[t._v("返回一个新的迭代器对象，该对象遍历字符串值的索引位置，将每个索引值作为字符串值返回。")]),t._v(" "),s("p",[t._v("HTML wrapper methods")]),t._v(" "),s("p",[t._v("下面的方法被限制使用，因为只对可用的HTML标签和属性提供部分支持。")]),t._v(" "),s("p",[t._v("将其他值转换成字符串")]),t._v(" "),s("p",[t._v("使用 String() 方法将其它对象转化为字符串可以被认为是一种更加安全的做法，虽然该方法底层使用的也是 toString() 方法，但是针对 null/undefined/symbols，String() 方法会有特殊的处理：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" outputStrings "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inputValues"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n outputStrings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputValues"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);