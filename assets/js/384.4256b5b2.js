(window.webpackJsonp=window.webpackJsonp||[]).push([[384],{816:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"command-命令模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#command-命令模式"}},[t._v("#")]),t._v(" Command（命令模式）")]),t._v(" "),s("p",[t._v("Command （命令模式）属于行为型模式。")]),t._v(" "),s("p",[s("strong",[t._v("意图：将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化，对请求排队或记录请求日志，以及支持可撤销的操作。")])]),t._v(" "),s("h2",{attrs:{id:"举例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例子"}},[t._v("#")]),t._v(" 举例子")]),t._v(" "),s("p",[t._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),t._v(" "),s("h3",{attrs:{id:"点菜是命令模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点菜是命令模式"}},[t._v("#")]),t._v(" 点菜是命令模式")]),t._v(" "),s("p",[t._v("为什么顾客会找服务员点菜，而不是直接冲到后厨盯着厨师做菜？因为做菜比较慢，肯定会出现排队的现象，而且有些菜可能是一起做效率更高，所以将点菜和做菜分离比较容易控制整体效率。")]),t._v(" "),s("p",[t._v("其实这个社会现象就对应编程领域的命令模式：点菜就是一个个请求，点菜员记录的菜单就是将请求生成的对象，点菜员不需要关心怎么做菜、谁来做，他只要把菜单传到后厨即可，由后厨统一调度。")]),t._v(" "),s("h3",{attrs:{id:"大型软件系统的操作菜单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大型软件系统的操作菜单"}},[t._v("#")]),t._v(" 大型软件系统的操作菜单")]),t._v(" "),s("p",[t._v("大型软件操作系统都有一个特点，即软件非常复杂，菜单按钮非常多。但由于菜单按钮本身并没有业务逻辑，所以通过菜单按钮点击后触发的业务行为不适合由菜单按钮完成，此时可利用命令模式生成一个或一系列指令，由软件系统的实现部分来真正执行。")]),t._v(" "),s("h3",{attrs:{id:"浏览器请求排队"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器请求排队"}},[t._v("#")]),t._v(" 浏览器请求排队")]),t._v(" "),s("p",[t._v("浏览器的请求不仅会排队，还会取消、重试，因此是个典型的命令模式场景。如果不能将 "),s("code",[t._v("window.fetch")]),t._v(" 序列化为一个个指令放入到队列中，是无法实现请求排队、取消、重试的。")]),t._v(" "),s("h2",{attrs:{id:"意图解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意图解释"}},[t._v("#")]),t._v(" 意图解释")]),t._v(" "),s("p",[s("strong",[t._v("意图：将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化，对请求排队或记录请求日志，以及支持可撤销的操作。")])]),t._v(" "),s("p",[t._v("一个请求指的是来自客户端的一个操作，比如菜单按钮点击。重点在点击后并不直接实现，而是将请求封装为一个对象，可以理解为从直接实现：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... balabala 实现逻辑")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("改为生成一个对象，序列化这个请求：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  concreteCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 描述这个请求")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行所有命令队列")]),t._v("\n  concreteCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("看上去繁琐了一些，但得到了后面所说的好处：“从而使你可用不同的请求对客户进行参数化”，"),s("strong",[t._v("也就是可以对任何请求进行参数化存储，我们可以在任意时刻调用。")]),t._v(" 这相当于掌握了执行时机，可以在任意时刻调用，以实现排队或记录日志，如果再记录下反向操作信息，就可以实现撤销重做了。")]),t._v(" "),s("h2",{attrs:{id:"结构图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构图"}},[t._v("#")]),t._v(" 结构图")]),t._v(" "),s("img",{attrs:{width:"600",src:"https://img.alicdn.com/imgextra/i2/O1CN01preTih1iRMuH3oQYY_!!6000000004409-2-tps-1846-620.png"}}),t._v(" "),s("p",[t._v("Command 是命令的接口，一般固定有一个 "),s("code",[t._v("execute")]),t._v(" 方法。")]),t._v(" "),s("p",[t._v("ConcreteCommand 是命令接口的实现，它会注入具体执行者 "),s("code",[t._v("Receiver")]),t._v("，它实现的 "),s("code",[t._v("execute")]),t._v(" 方法会调用 "),s("code",[t._v("receiver.execute")]),t._v(" 来具体执行。")]),t._v(" "),s("p",[s("code",[t._v("Invoker")]),t._v(" 是执行请求的命令，其实上面都在推入命令，并没有真正执行，如果排队结束或点击撤销重做时，就触发了 Invoker 实际，就该调用对应的 Command 执行啦。")]),t._v(" "),s("h2",{attrs:{id:"代码例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码例子"}},[t._v("#")]),t._v(" 代码例子")]),t._v(" "),s("p",[t._v("下面例子使用 typescript 编写。")]),t._v(" "),s("p",[t._v("首先看最终执行态，最终执行需要先添加命令，再执行命令：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" command1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'balabala1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" command2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'balabala2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" invoker "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Invoker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ninvoker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ninvoker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ninvoker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("Invoker")]),t._v(" 内部用一个队列维护，执行的时候其实是 "),s("code",[t._v("for")]),t._v(" 循环执行了每个 "),s("code",[t._v("command.execute()")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Invoker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 队列里推入命令")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 别忘了清空 this.commands")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"弊端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弊端"}},[t._v("#")]),t._v(" 弊端")]),t._v(" "),s("p",[t._v("命令模式需要注意序列化大小，一般分为：")]),t._v(" "),s("ol",[s("li",[t._v("仅记录操作。")]),t._v(" "),s("li",[t._v("记录全量快照。")]),t._v(" "),s("li",[t._v("全量快照共享内存。")])]),t._v(" "),s("p",[t._v("记录操作是较为精细的管理方式，并且可以延伸出协同编辑功能。记录快照要注意尽量共享内存，防止快照过大，而且协同编辑场景因为快照无法做冲突处理，所以快照模式在协同编辑场景无法应用。")]),t._v(" "),s("p",[t._v("另外要识别没必要使用命令模式的场景，对于没有撤销重做的前端大部分场景来说，都无需改为命令模式。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("命令模式本质上就是将操作抽象为可序列化的命令，使操作可以在合适的时间执行，这种设计带来了许多额外好处。")]),t._v(" "),s("p",[t._v("利用命令模式可以达到高内聚低耦合的效果，提升代码可维护性，也可以实现撤销重做、协同编辑等功能性需求。")]),t._v(" "),s("blockquote",[s("p",[t._v("讨论地址是："),s("a",{attrs:{href:"https://github.com/dt-fe/weekly/issues/295",target:"_blank",rel:"noopener noreferrer"}},[t._v("精读《设计模式 - Command（命令模式）》· Issue #295 · dt-fe/weekly"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[t._v("如果你想参与讨论，请 "),s("a",{attrs:{href:"https://github.com/dt-fe/weekly",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里"),s("OutboundLink")],1),t._v("，每周都有新的主题，周末或周一发布。前端精读 - 帮你筛选靠谱的内容。")])]),t._v(" "),s("blockquote",[s("p",[t._v("关注 "),s("strong",[t._v("前端精读微信公众号")])])]),t._v(" "),s("img",{attrs:{width:"200",src:"https://img.alicdn.com/tfs/TB165W0MCzqK1RjSZFLXXcn2XXa-258-258.jpg"}}),t._v(" "),s("blockquote",[s("p",[t._v("版权声明：自由转载-非商用-非衍生-保持署名（"),s("a",{attrs:{href:"https://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh",target:"_blank",rel:"noopener noreferrer"}},[t._v("创意共享 3.0 许可证"),s("OutboundLink")],1),t._v("）")])])])}),[],!1,null,null,null);s.default=e.exports}}]);