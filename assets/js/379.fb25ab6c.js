(window.webpackJsonp=window.webpackJsonp||[]).push([[379],{810:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"decorator-装饰器模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decorator-装饰器模式"}},[t._v("#")]),t._v(" Decorator（装饰器模式）")]),t._v(" "),a("p",[t._v("Decorator （装饰器模式）属于结构型模式，是一种拓展对象额外功能的设计模式，别名 "),a("code",[t._v("wrapper")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("意图：动态地给一个对象添加一些额外的职责。就增加功能来说，Decorator 模式相比生成子类更为灵活。")])]),t._v(" "),a("h2",{attrs:{id:"举例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例子"}},[t._v("#")]),t._v(" 举例子")]),t._v(" "),a("p",[t._v("如果看不懂上面的意图介绍，没有关系，设计模式需要在日常工作里用起来，结合例子可以加深你的理解，下面我准备了三个例子，让你体会什么场景下会用到这种设计模式。")]),t._v(" "),a("h3",{attrs:{id:"相框"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相框"}},[t._v("#")]),t._v(" 相框")]),t._v(" "),a("p",[t._v("照片 + 相框 = 带相框的照片，这背后就是一种装饰器模式：照片具有看的功能，相框具有装饰功能，在你看照片的基础上，还能看到精心设计的相框，增加了美感，同时相框还可以增加照片的保存时间与安全性。")]),t._v(" "),a("p",[t._v("相框与照片是一种组合关系，任何照片都可以放到相框中，而不是每个照片生成一个特定的相框，显然，组合的方式更加灵活。")]),t._v(" "),a("h3",{attrs:{id:"带有缓存的文件读写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#带有缓存的文件读写"}},[t._v("#")]),t._v(" 带有缓存的文件读写")]),t._v(" "),a("p",[t._v("假设我们有一个类 "),a("code",[t._v("FileIO")]),t._v(" 用来读写文件，但是没有缓存能力，此时是新建一个 "),a("code",[t._v("CachedFileIO")]),t._v(" 子类好，还是创建一个 "),a("code",[t._v("CachedIO")]),t._v("?")]),t._v(" "),a("p",[t._v("一眼看上去好像 "),a("code",[t._v("CachedFileIO")]),t._v(" 用起来更方便，而 "),a("code",[t._v("CachedIO")]),t._v(" 的用法是 "),a("code",[t._v("new CachedIO(new FileIO())")]),t._v(" 稍微麻烦一些，但如果我们增加一个网络读写类 "),a("code",[t._v("NetworkIO")]),t._v("，一个数据库读写类 "),a("code",[t._v("DBIO")]),t._v(" 呢？")]),t._v(" "),a("p",[t._v("显然，继承的方式会使子类数量极速膨胀，而组合的方式则非常灵活，生成一个支持缓存的网络读写器，只需要 "),a("code",[t._v("new CachedIO(new NetworkIO())")]),t._v(" 即可，这就是组合灵活的地方。")]),t._v(" "),a("p",[t._v("当然，为了实现这个能力，"),a("code",[t._v("CachedIO")]),t._v(" 需要与 "),a("code",[t._v("FileIO")]),t._v("、"),a("code",[t._v("CachedFileIO")]),t._v("、"),a("code",[t._v("CachedIO")]),t._v(" 继承自同一个类，具备相同的接口。")]),t._v(" "),a("h3",{attrs:{id:"搭建平台的组件-wrapper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搭建平台的组件-wrapper"}},[t._v("#")]),t._v(" 搭建平台的组件 wrapper")]),t._v(" "),a("p",[t._v("装饰器模式别名也叫 "),a("code",[t._v("wrapper")]),t._v("，"),a("code",[t._v("wrapper")]),t._v(" 也经常在前端搭建场景中遇到，当搭建平台加载一个组件时，希望拓展其基础能力，一般会使用 "),a("code",[t._v("wrapper")]),t._v(" 层对组件进行嵌套，"),a("code",[t._v("wrapper")]),t._v(" 层就是在不改变 API 的基础上，对第三方组件进行增强。")]),t._v(" "),a("h2",{attrs:{id:"意图解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#意图解释"}},[t._v("#")]),t._v(" 意图解释")]),t._v(" "),a("p",[a("strong",[t._v("意图：动态地给一个对象添加一些额外的职责。就增加功能来说，Decorator 模式相比生成子类更为灵活。")])]),t._v(" "),a("p",[t._v("不同于继承，组合可以在运行时进行，所以称之为 “动态添加”，这里的 “额外职责” 泛指一切功能，比如在按钮点击时进行一些 log 日志的打印，在绘制 text 文本框时，额外绘制一个滚动条和边框等等。")]),t._v(" "),a("p",[t._v("“就增加功能来说，Decorator 模式相比生成子类更为灵活” 这句话的含义是，组合比继承更灵活，当可拓展的功能很多时，继承方案会产生大量的子类，而组合可以提前写好处理函数，在需要时动态构造，显然是更灵活的。")]),t._v(" "),a("h2",{attrs:{id:"结构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构图"}},[t._v("#")]),t._v(" 结构图")]),t._v(" "),a("img",{attrs:{width:"600",src:"https://img.alicdn.com/tfs/TB1cmhe3FY7gK0jSZKzXXaikpXa-1624-688.png"}}),t._v(" "),a("p",[a("code",[t._v("ConcreteComponent")]),t._v(" 指的是需要被装饰的组件，可以看到，装饰器 "),a("code",[t._v("Decorator")]),t._v(" 与他都继承同一个类，这样能保证 API 的一致，才保证无论装饰多少层，始终符合 "),a("code",[t._v("Component")]),t._v(" 类型。")]),t._v(" "),a("p",[t._v("装饰器如果有多种，就要将 "),a("code",[t._v("Decorator")]),t._v(" 申明为抽象类，"),a("code",[t._v("ConcreteDecoratorA")]),t._v("、"),a("code",[t._v("ConcreteDecoratorB")]),t._v(" 分别实现它们，如果只有一种装饰器，可以退化到 "),a("code",[t._v("Decorator")]),t._v(" 自身就是一种实现。")]),t._v(" "),a("h2",{attrs:{id:"代码例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码例子"}},[t._v("#")]),t._v(" 代码例子")]),t._v(" "),a("p",[t._v("下面例子使用 typescript 编写。")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 具有点击事件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onClick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Decorator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" _component\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_component "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" component\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onClick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'打点'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" component "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个普通的点击")]),t._v("\ncomponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" wrapperComponent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Decorator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个具有打点功能的点击")]),t._v("\nwrapperComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其实方法很简单，通过组合，我们得到了一个能力更强的组件，而实现的方式就是利用构造函数保存组件实例，并在复写函数时，增加一些增强实现。")]),t._v(" "),a("h2",{attrs:{id:"弊端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弊端"}},[t._v("#")]),t._v(" 弊端")]),t._v(" "),a("p",[t._v("装饰器的问题也是组合的问题，过多的组合会导致：")]),t._v(" "),a("ul",[a("li",[t._v("组合过程的复杂，要生成过多的对象。")]),t._v(" "),a("li",[t._v("包装器层次增多，会增加调试成本，我们比较难追溯到一个 bug 是在哪一层包装导致的。")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("装饰器模式是非常常用的模式，Decorator 是一个透明的包装，只要保证包装的透明性，就可以最大限度发挥装饰器模式的优势。")]),t._v(" "),a("p",[t._v("最后总结一个装饰器应用图：")]),t._v(" "),a("img",{attrs:{width:"500",src:"https://img.alicdn.com/tfs/TB1wlpgqPMZ7e4jSZFOXXX7epXa-1232-478.png"}}),t._v(" "),a("blockquote",[a("p",[t._v("讨论地址是："),a("a",{attrs:{href:"https://github.com/dt-fe/weekly/issues/286",target:"_blank",rel:"noopener noreferrer"}},[t._v("精读《设计模式 - Decorator 装饰器模式》· Issue #286 · dt-fe/weekly"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("如果你想参与讨论，请 "),a("a",{attrs:{href:"https://github.com/dt-fe/weekly",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里"),a("OutboundLink")],1),t._v("，每周都有新的主题，周末或周一发布。前端精读 - 帮你筛选靠谱的内容。")])]),t._v(" "),a("blockquote",[a("p",[t._v("关注 "),a("strong",[t._v("前端精读微信公众号")])])]),t._v(" "),a("img",{attrs:{width:"200",src:"https://img.alicdn.com/tfs/TB165W0MCzqK1RjSZFLXXcn2XXa-258-258.jpg"}}),t._v(" "),a("blockquote",[a("p",[t._v("版权声明：自由转载-非商用-非衍生-保持署名（"),a("a",{attrs:{href:"https://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh",target:"_blank",rel:"noopener noreferrer"}},[t._v("创意共享 3.0 许可证"),a("OutboundLink")],1),t._v("）")])])])}),[],!1,null,null,null);a.default=n.exports}}]);