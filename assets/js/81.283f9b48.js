(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{513:function(a,s,t){"use strict";t.r(s);var e=t(2),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"node-版本管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-版本管理"}},[a._v("#")]),a._v(" node 版本管理")]),a._v(" "),s("h2",{attrs:{id:"nvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nvm"}},[a._v("#")]),a._v(" nvm")]),a._v(" "),s("h3",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),s("p",[a._v("之前用 npm 安装过 nvm，就以为安装成功了，但运行 nvm 就报如下提示： "),s("em",[a._v("This is not the package you are looking for: please go to "),s("a",{attrs:{href:"http://nvm.sh/",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://nvm.sh"),s("OutboundLink")],1)])]),a._v(" "),s("h3",{attrs:{id:"安装nvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装nvm"}},[a._v("#")]),a._v(" 安装NVM")]),a._v(" "),s("p",[a._v("查资料得出，要使用 curl 或 wget 来安装(版本可以选用官网最新版)：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),s("p",[a._v("或:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash\n")])])]),s("p",[a._v("注意：安装完了，重新打开 Terminal(iTerm2) 来重启会话")]),a._v(" "),s("h3",{attrs:{id:"安装-node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-node-js"}},[a._v("#")]),a._v(" 安装 Node.js")]),a._v(" "),s("h4",{attrs:{id:"最新版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最新版"}},[a._v("#")]),a._v(" 最新版")]),a._v(" "),s("ol",[s("li",[a._v("安装最新版 Node.js，命令："),s("code",[a._v("nvm install node")])]),a._v(" "),s("li",[a._v("查看安装效果，命令："),s("code",[a._v("nvm use node")]),a._v("，显示："),s("code",[a._v("Now using node v7.5.0 (npm v4.1.2)")])])]),a._v(" "),s("h4",{attrs:{id:"稳定版-lts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#稳定版-lts"}},[a._v("#")]),a._v(" 稳定版（LTS）")]),a._v(" "),s("ol",[s("li",[a._v("安装 LTS 版，命令："),s("code",[a._v("nvm install --lts")])]),a._v(" "),s("li",[a._v("查看安装效果，命令："),s("code",[a._v("nvm list")]),a._v("，显示：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   ->    v6.9.5\n         v7.5.0\n         system\ndefault -> node (-> v7.5.0)\nnode -> stable (-> v7.5.0) (default)\nstable -> 7.5 (-> v7.5.0) (default)\niojs -> N/A (default)\nlts/* -> lts/boron (-> v6.9.5)\nlts/argon -> v4.7.3 (-> N/A)\nlts/boron -> v6.9.5\n")])])]),s("h3",{attrs:{id:"切换版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切换版本"}},[a._v("#")]),a._v(" 切换版本")]),a._v(" "),s("p",[a._v("从上面的安装列表上已经可以看到，我们安装了一个最新版，一个稳定版。分别是：v6.9.5 和 v7.5.0，我们要如何切换不同版本呢？")]),a._v(" "),s("ol",[s("li",[a._v("切换到 v6.9.5，命令："),s("code",[a._v("nvm use v6.9.5")]),a._v("，显示："),s("code",[a._v("Now using node v6.9.5 (npm v3.10.10)")])]),a._v(" "),s("li",[a._v("切换到 v7.5.0，命令："),s("code",[a._v("nvm use v7.5.0")]),a._v("，显示："),s("code",[a._v("Now using node v7.5.0 (npm v4.1.2)")])])]),a._v(" "),s("p",[a._v("到这里，我们基本会使用 nvm 了，想用什么版本就可以自由切换。 但如果想玩得更爽一点，就要学习如下一些技巧。")]),a._v(" "),s("h3",{attrs:{id:"使用别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用别名"}},[a._v("#")]),a._v(" 使用别名")]),a._v(" "),s("p",[a._v("你肯定也想到，每次输入v6.9.5 好麻烦。并且时间长了，不一定记得住后面是9.5，还是8.6的版本号。")]),a._v(" "),s("ol",[s("li",[a._v("设定 LTS 版别名，命令："),s("code",[a._v("nvm alias 6 v6.9.5")]),a._v("，显示："),s("code",[a._v("6 -> v6.9.5")])]),a._v(" "),s("li",[a._v("设定最新版别名，命令："),s("code",[a._v("nvm alias 7 v7.5.0")]),a._v("，显示："),s("code",[a._v("7 -> v7.5.0")])])]),a._v(" "),s("h2",{attrs:{id:"一、nvm是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、nvm是什么"}},[a._v("#")]),a._v(" 一、NVM是什么？")]),a._v(" "),s("p",[a._v("nvm是node版本管理工具\nnvm是让你在同一台机器上安装和切换不同版本的node的工具")]),a._v(" "),s("h3",{attrs:{id:"为什么需要nvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要nvm"}},[a._v("#")]),a._v(" 为什么需要nvm？")]),a._v(" "),s("p",[a._v("作为一个走在潮流前沿的前端开发者，node在一直更新，我们都在紧紧跟随，当你在玩着最新的node版本（写文章的时候官推node版本是v16.8.0），玩得正欢快的时候，你的领导从某个角落里翻出了一个旧项目，让你去维护一下，当你运行项目的时候，你发现，这个旧项目，竟然需要node版本8.X.X的时候，你怎么办？？？你要卸载掉你电脑最新的node，重新安装一个古老的版本吗？\\color{red}{显然不能}显然不能，这个时候我们需要的是可以在我们电脑同时存在多个node版本，并且可以随意切换的工具，"),s("strong",[a._v("nvm闪亮✨登场")])]),a._v(" "),s("h2",{attrs:{id:"二、nvm安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、nvm安装"}},[a._v("#")]),a._v(" 二、nvm安装")]),a._v(" "),s("h3",{attrs:{id:"_1-温馨提示-你也可以不听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-温馨提示-你也可以不听"}},[a._v("#")]),a._v(" 1. 温馨提示，你也可以不听")]),a._v(" "),s("p",[a._v("卸载掉当前安装的node\n卸载掉当前安装的node\n卸载掉当前安装的node\n我曾经因为年少轻狂没卸载，出现node_cache混淆和node版本切换无效的问题\n如果还有因为没卸载node出现什么翻车事故的靓仔，请记得来跟我分享一下")]),a._v(" "),s("h3",{attrs:{id:"_2-安装方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装方式"}},[a._v("#")]),a._v(" 2. 安装方式")]),a._v(" "),s("h4",{attrs:{id:"window"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[a._v("#")]),a._v(" window")]),a._v(" "),s("p",[a._v("链接："),s("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Flinks.jianshu.com%2Fgo%3Fto%3Dhttps%3A%2F%2Fgithub.com%2Fcoreybutler%2Fnvm-windows%2Freleases",target:"_blank",rel:"noopener noreferrer"}},[a._v("github.com/coreybutler…"),s("OutboundLink")],1),a._v(" "),s("strong",[a._v("可下载以下版本：")])]),a._v(" "),s("ul",[s("li",[a._v("nvm-noinstall.zip：绿色免安装版，但使用时需要进行配置。")]),a._v(" "),s("li",[a._v("nvm-setup.zip：安装版，推荐使用")])]),a._v(" "),s("p",[a._v("解压后 nvm-setup.exe 直接傻瓜式一键安装\n\\color{red}{有坑：记得安装目录不要有特殊符号、中文、空格，比如：C: Program Files，这种目录就要不得}有坑：记得安装目录不要有特殊符号、中文、空格，比如："),s("em",[a._v("C")]),a._v(":"),s("em",[a._v("P"),s("strong",[a._v("r")]),a._v("o"),s("strong",[a._v("g")]),a._v("r"),s("strong",[a._v("a")]),a._v("m"),s("strong",[a._v("F")]),a._v("i"),s("strong",[a._v("l")]),a._v("e**s")]),a._v("，这种目录就要不得")]),a._v(" "),s("h4",{attrs:{id:"mac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mac"}},[a._v("#")]),a._v(" mac")]),a._v(" "),s("p",[a._v("mac的安装相对于window来说，稍微麻烦一丢丢，还受macOS的版本影响，我这里用的是11.2.2，靓仔们要是安装过程有坑，可自行科普一下看看是不是受macOS的版本影响")]),a._v(" "),s("h4",{attrs:{id:"_1-安装命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装命令"}},[a._v("#")]),a._v(" 1. 安装命令：")]),a._v(" "),s("p",[a._v("**")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\n\n")])])]),s("h4",{attrs:{id:"_2-检查安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-检查安装"}},[a._v("#")]),a._v(" 2. 检查安装")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ nvm --version\n\n")])])]),s("h4",{attrs:{id:"_3-检查安装的前提是你安装成功了-事实往往不如人意-总会有坑的情况-你可能会遇到以下的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-检查安装的前提是你安装成功了-事实往往不如人意-总会有坑的情况-你可能会遇到以下的"}},[a._v("#")]),a._v(" 3. 检查安装的前提是你安装成功了，事实往往不如人意，总会有坑的情况，你可能会遇到以下的？")]),a._v(" "),s("h5",{attrs:{id:"_1-dns污染报错-拉取nvm的过程中-dns-解析被污染导致无法正常读取-当然可能还有其他的原因-其他原因暂没了解到-有知道的大佬-请指教"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-dns污染报错-拉取nvm的过程中-dns-解析被污染导致无法正常读取-当然可能还有其他的原因-其他原因暂没了解到-有知道的大佬-请指教"}},[a._v("#")]),a._v(" 1. DNS污染报错，拉取nvm的过程中，DNS 解析被污染导致无法正常读取（当然可能还有其他的原因，其他原因暂没了解到，有知道的大佬，请指教）")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused\n\n")])])]),s("p",[s("strong",[a._v("DNS污染解决方法：")])]),a._v(" "),s("p",[s("strong",[a._v("1. 去"),s("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.ipaddress.com",target:"_blank",rel:"noopener noreferrer"}},[a._v("IPAddress.com"),s("OutboundLink")],1),a._v("查看真实的ip")])]),a._v(" "),s("p",[a._v("**2. curl -o- "),s("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fraw.githubusercontent.com%2Fnvm-sh%2Fnvm%2Fv0.35.3%2Finstall.sh",target:"_blank",rel:"noopener noreferrer"}},[a._v("raw.githubusercontent.com/nvm-sh/nvm/…"),s("OutboundLink")],1),a._v(" | bash命令中拉取的域名是\\color{red}{raw.githubusercontent.com}*r**a**w*.*g**i**t**h**u**b**u**s**e**r**c**o**n**t**e**n**t*.*c*"),s("em",[a._v("o*"),s("em",[a._v("m*，去搜一下，出现下面的结果")])])]),a._v(" "),s("p",[a._v("我们找到了解析的ip，有四个，随便拎一个出来（当然运气不好，可能你拎出来那个用不了，你就自己再换一个）")]),a._v(" "),s("p",[s("strong",[a._v("3. 修改host")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ sudo vim /etc/hosts\n\n")])])]),s("p",[a._v("在host里面添加")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("185.199.108.133 raw.githubusercontent.com\n\n")])])]),s("p",[a._v("搞完重新再拉取一次试试")]),a._v(" "),s("h5",{attrs:{id:"_2-zsh-command-not-found-nvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-zsh-command-not-found-nvm"}},[a._v("#")]),a._v(" 2. zsh: command not found: nvm")]),a._v(" "),s("p",[a._v("安装过程没有报错，但是执行"),s("code",[a._v("$ nvm --version")]),a._v("提示 zsh: command not found: nvm，小靓仔，环境变量问题，搞一下就好了，莫慌 参考资料：-   "),s("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.jianshu.com%2Fp%2F14f98f4a5667",target:"_blank",rel:"noopener noreferrer"}},[a._v("《Mac下配置.bash_profile（环境变量）》"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"三、nvm日常使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、nvm日常使用"}},[a._v("#")]),a._v(" 三、nvm日常使用")]),a._v(" "),s("h3",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[a._v("#")]),a._v(" 常用命令")]),a._v(" "),s("ul",[s("li",[a._v("nvm ls 列出所有安装的版本")]),a._v(" "),s("li",[a._v("nvm ls-remote 列出所有可安装的版本")]),a._v(" "),s("li",[a._v("nvm install  安装指定版本，如：安装v4.4.0，nvm install v4.4.0")]),a._v(" "),s("li",[a._v("nvm install stable 安装最新稳定版 node")]),a._v(" "),s("li",[a._v("nvm uninstall  删除已安装的指定版本，语法与install类似")]),a._v(" "),s("li",[a._v("nvm use  切换使用指定的版本node")]),a._v(" "),s("li",[a._v("nvm alias default  如： nvm alias default v11.1.0")]),a._v(" "),s("li",[a._v("nvm --help 大招，查看所有帮助命令")])]),a._v(" "),s("h3",{attrs:{id:"安装示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装示例"}},[a._v("#")]),a._v(" 安装示例")]),a._v(" "),s("p",[s("strong",[a._v("1. nvm ls")]),a._v("\n我们来用nvm安装一波node吧，先来个nvm ls 查看下当前的版本")]),a._v(" "),s("p",[a._v("简单的解读一下这张图，首先看到我电脑有三个node的版本\n分别是"),s("strong",[a._v("v8.17.0、v12.18.4、v14.17.4")]),a._v("三个版本\n当前正在使用的版本是v14.17.4   可以通过 "),s("code",[a._v("nvm use <version>")]),a._v(" 切换版本\n默认版本是：v14.17.4   为什么会有这个默认版本的存在？ 通过"),s("code",[a._v("nvm use <version>")]),a._v("切换的版本只是临时的，在你关闭终端后，就会恢复默认的版本，如果你想要长时间切换指定版本，那就设置这个默认版本")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("nvm alias default <version>  如： nvm alias default v11.1.0\n\n")])])]),s("p",[s("strong",[a._v("2.  nvm ls-remote")]),a._v("\n如果我们一时半不会不知道安装哪个版本，那我们就来一条")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("nvm ls-remote\n\n")])])]),s("p",[a._v("查看下有哪些node版本可以安装的\n我们随便挑一个，直接nvm install vxx.xx.xx，然后安装完后nvm ls 查看会发现已经下载下来了")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("nvm install v11.1.0\nnvm ls\n\n")])])]),s("p",[a._v("如果我们只是短期在某个项目上用，那就直接nvm use vxx.xx.xx即可，如果长期用，记得设置默认版本")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("nvm alias default <version>  如： nvm alias default v11.1.0\n\n")])])]),s("h2",{attrs:{id:"四、坑点记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、坑点记录"}},[a._v("#")]),a._v(" 四、坑点记录")]),a._v(" "),s("h3",{attrs:{id:"全局依赖包安装了找不到"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局依赖包安装了找不到"}},[a._v("#")]),a._v(" 全局依赖包安装了找不到？")]),a._v(" "),s("p",[s("strong",[a._v("其实就是nvm切换node版本后，全局的node_modules指向不改变")]),a._v("\n在使用nvm过程中，切换到某个node版本后，在这个版本下安装某个全局包，我们这里以nrm举例子\n"),s("strong",[a._v("科普：nrm(npm registry manager )是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换")]),a._v("\n如：原本使用的node是12的版本，我闲来无事切换到了14的版本，安装了个nrm，执行nrm的时候，发现报错，提示没有这个依赖。 我们可以通过")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm config ls  //查看下npm的配置\n\n")])])]),s("p",[a._v("问题来了，如果切换了node版本后，全局依赖安装失败，检查下npm prefix这个配置中的node是否是你当前使用的node版本")]),a._v(" "),s("p",[a._v("切换node版本后，全局安装依赖，安装完后，找不到包\n原因是因为切换node之后，安装全局依赖仍然在原来的版本下，这个时候你不管怎么安装新的依赖，都是安装在以前的全局node_modules下\n"),s("strong",[a._v("解决方案：")]),a._v("\n我们要把cache和prefix对应修改成我们要的版本")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('npm config set prefix "D:\\ProgramFiles\\nvm\\v版本\\node_cache"\nnpm config set cache "D:\\ProgramFiles\\nvm\\v12.12.0\\node_cache"\n')])])]),s("h2",{attrs:{id:"关于在-zsh-终端下面无法使用-nvm-管理工具的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于在-zsh-终端下面无法使用-nvm-管理工具的问题"}},[a._v("#")]),a._v(" 关于在 zsh 终端下面无法使用 nvm 管理工具的问题")]),a._v(" "),s("h3",{attrs:{id:"mac-新版本安装-nvm-之后-出现-nvm-command-not-found-的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mac-新版本安装-nvm-之后-出现-nvm-command-not-found-的问题"}},[a._v("#")]),a._v(" Mac 新版本安装 nvm 之后，出现 nvm command not found 的问题")]),a._v(" "),s("blockquote",[s("p",[s("code",[a._v("Mac")]),a._v(" 安装 "),s("code",[a._v("nvm")]),a._v(" 之后，执行 "),s("code",[a._v("source ~/.bash_profile")]),a._v("，当前终端可以使用 "),s("code",[a._v("nvm")]),a._v("，新 "),s("code",[a._v("tab")]),a._v(" 或者退出重新打开，还是不能使用 "),s("code",[a._v("nvm")]),a._v("，还得再次执行 "),s("code",[a._v("source ~/.bash_profile")]),a._v("，才可以使用 "),s("code",[a._v("nvm")]),a._v("。")])]),a._v(" "),s("h3",{attrs:{id:"原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[a._v("#")]),a._v(" 原因")]),a._v(" "),s("p",[s("code",[a._v("Mac")]),a._v(" 新版本中终端是 "),s("code",[a._v("zsh")]),a._v("，所以使用 "),s("code",[a._v(".bash_profile")]),a._v(" 文件之后，不会生效，需要使用 "),s("code",[a._v("zsh")]),a._v(" 的文件才行。")]),a._v(" "),s("h3",{attrs:{id:"解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决"}},[a._v("#")]),a._v(" 解决")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("cd ~")])]),a._v(" "),s("li",[s("code",[a._v("touch .zshrc")])]),a._v(" "),s("li",[a._v("打开 "),s("code",[a._v(".zshrc")]),a._v(" 文件")]),a._v(" "),s("li",[a._v("写入如下代码")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("NVM_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v('/.nvm"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NVM_DIR")]),a._v('/nvm.sh"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(". "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NVM_DIR")]),a._v('/nvm.sh"')]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# This loads nvm")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NVM_DIR")]),a._v('/bash_completion"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(". "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$NVM_DIR")]),a._v('/bash_completion"')]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# This loads nvm bash_completion")]),a._v("\n\n")])])]),s("ol",[s("li",[a._v("保存")]),a._v(" "),s("li",[s("code",[a._v("source ~/.zshrc")])]),a._v(" "),s("li",[a._v("退出终端，重新打开，使用 "),s("code",[a._v("nvm")]),a._v(" 命令即可")])]),a._v(" "),s("p",[a._v("确实能够解决问题")]),a._v(" "),s("p",[a._v("其中有一个关于 source 的命令")]),a._v(" "),s("h1",{attrs:{id:"linux中source命令的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux中source命令的用法"}},[a._v("#")]),a._v(" Linux中source命令的用法")]),a._v(" "),s("h2",{attrs:{id:"source命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#source命令"}},[a._v("#")]),a._v(" source命令：")]),a._v(" "),s("p",[s("strong",[a._v("source命令也称为“点命令”，也就是一个点符号（.）。source命令通常用于重新执行刚修改的初始化文件，使之立即生效，而不必注销并重新登录。")])]),a._v(" "),s("p",[a._v("**用法： **\nsource filename 或 . filename\nsource命令除了上述的用途之外，还有一个另外一个用途。在对编译系统核心时常常需要输入一长串的命令，如：\nmake mrproper\nmake menuconfig\nmake dep\nmake clean\nmake bzImage\n…………")]),a._v(" "),s("p",[a._v("如果把这些命令做成一个文件，让它自动顺序执行，对于需要多次反复编译系统核心的用户来说会很方便，而用source命令就可以做到这一点，它的作用就是把一个文件的内容当成shell来执行，先在linux的源代码目录下（如/usr/src/linux-2.4.20）建立一个文件，如make_command，在其中输入一下内容：\nmake mrproper &&\nmake menuconfig &&\nmake dep &&\nmake clean &&\nmake bzImage &&\nmake modules &&\nmake modules_install &&\ncp arch/i386/boot/bzImage /boot/vmlinuz_new &&\ncp System.map /boot &&\nvi /etc/lilo.conf &&\nlilo -v")]),a._v(" "),s("p",[a._v("文件建立好之后，每次编译核心的时候，只需要在/usr/src/linux-2.4.20下输入：\nsource make_command\n即可，如果你用的不是lilo来引导系统，可以把最后两行去掉，配置自己的引导程序来引导内核。")]),a._v(" "),s("p",[a._v("顺便补充一点，&&命令表示顺序执行由它连接的命令，但是只有它之前的命令成功执行完成了之后才可以继续执行它后面的命令。")]),a._v(" "),s("p",[s("strong",[a._v("source filename 与 sh filename 及./filename执行脚本的区别在那里呢？")]),a._v('\n1.当shell脚本具有可执行权限时，用sh filename与./filename执行脚本是没有区别得。./filename是因为当前目录没有在PATH中，所有"."是用来表示当前目录的。\n2.sh filename 重新建立一个子shell，在子shell中执行脚本里面的语句，该子shell继承父shell的环境变量，但子shell新建的、改变的变量不会被带回父shell，除非使用export。\n3.source filename：这个命令其实只是简单地读取脚本里面的语句依次在当前shell里面执行，没有建立新的子shell。那么脚本里面所有新建、改变变量的语句都会保存在当前shell里面。')]),a._v(" "),s("p",[s("strong",[a._v("举例说明：")]),a._v("\n1.新建一个test.sh脚本，内容为:A=1\n2.然后使其可执行chmod +x test.sh\n3.运行sh test.sh后，echo $A，显示为空，因为A=1并未传回给当前shell\n4.运行./test.sh后，也是一样的效果\n5.运行source test.sh 或者 . test.sh，然后echo $A，则会显示1，说明A=1的变量在当前shell中")]),a._v(" "),s("h1",{attrs:{id:"nvm-设置-nodejs-默认版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nvm-设置-nodejs-默认版本"}},[a._v("#")]),a._v(" nvm 设置 nodejs 默认版本")]),a._v(" "),s("p",[a._v("windows 系统的版本管理软件是nodist")]),a._v(" "),s("p",[a._v("mac系统的node版本管理根据是nvm")]),a._v(" "),s("p",[a._v("每次重启vscode软件后，nvm ls 看到的默认版本都会恢复到v5.5")]),a._v(" "),s("p",[a._v("使用以下命令可以改变默认的版本：nvm alias default v4.3.0  这样就不用每次都切换版本了")]),a._v(" "),s("p",[a._v("nvm 安装： "),s("a",{attrs:{href:"https://www.jianshu.com/p/01bbd7bf64a7",target:"_blank",rel:"noopener noreferrer"}},[a._v("转载"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("点击跳转("),s("a",{attrs:{href:"https://github.com/creationix/nvm",target:"_blank",rel:"noopener noreferrer"}},[a._v("nvm项目的github地址"),s("OutboundLink")],1),a._v(") ，找到install script的地方，然后复制，在终端粘贴运行。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),s("p",[a._v("根据终端的提示")]),a._v(" "),s("blockquote",[s("p",[a._v("=> Profile not found. Tried ~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.")]),a._v(" "),s("p",[a._v("=> Create one of them and run this script again")])]),a._v(" "),s("p",[a._v("1.于是使用vim 创建一个~/.bash_profile文件")]),a._v(" "),s("blockquote",[s("p",[a._v("JasonLamdeMacBook-Pro:~ jasonlam$ vim ~/.bash_profile")])]),a._v(" "),s("p",[a._v("2.将vim切换至insert状态后，写入所给脚本，然后:wq退出")]),a._v(" "),s("blockquote",[s("p",[a._v('export NVM_DIR="$HOME/.nvm"')]),a._v(" "),s("p",[a._v('[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm')]),a._v(" "),s("p",[a._v('[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"')]),a._v(" "),s("p",[a._v(":wq")])]),a._v(" "),s("p",[a._v("重新启动终端,输入nvm --version会显示版本号即安装成功！！！")]),a._v(" "),s("h1",{attrs:{id:"三、mac下使用nvm安装node、npm-cnpm-以及-nvm的常用指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、mac下使用nvm安装node、npm-cnpm-以及-nvm的常用指令"}},[a._v("#")]),a._v(" 三、Mac下使用nvm安装node、npm(cnpm) 以及 nvm的常用指令：")]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"nvm-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nvm-常用命令"}},[a._v("#")]),a._v(" nvm 常用命令")]),a._v(" "),s("p",[a._v("● nvm install stable 安装最新稳定版 node")]),a._v(" "),s("p",[a._v("● "),s("code",[a._v("nvm install <version>")]),a._v(" 安装指定版本，如：安装v4.4.0，nvm install v4.4.0")]),a._v(" "),s("p",[a._v("● "),s("code",[a._v("nvm uninstall <version>")]),a._v(" 删除已安装的指定版本，语法与install类似")]),a._v(" "),s("p",[a._v("● "),s("code",[a._v("nvm use <version>")]),a._v(" 切换使用指定的版本node")]),a._v(" "),s("p",[a._v("● nvm ls 列出所有安装的版本")]),a._v(" "),s("p",[a._v("● "),s("code",[a._v("nvm alias default <version>")]),a._v(" 如： nvm alias default v11.1.0")])])}),[],!1,null,null,null);s.default=n.exports}}]);