(window.webpackJsonp=window.webpackJsonp||[]).push([[579],{1008:function(e,n,s){"use strict";s.r(n);var t=s(2),r=Object(t.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"vue-cli3-全面配置-持续更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli3-全面配置-持续更新"}},[e._v("#")]),e._v(" vue-cli3 全面配置(持续更新)")]),e._v(" "),n("p",[e._v("细致全面的 vue-cli3 配置信息。涵盖了使用 vue-cli 开发过程中大部分配置需求。")]),e._v(" "),n("p",[e._v("不建议直接拉取此项目作为模板，希望能按照此教程按需配置，或者复制 vue.config.js 增删配置,并自行安装所需依赖。")]),e._v(" "),n("h3",{attrs:{id:"其他系列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他系列"}},[e._v("#")]),e._v(" 其他系列")]),e._v(" "),n("p",[e._v("★ "),n("a",{attrs:{href:"https://github.com/staven630/blog",target:"_blank",rel:"noopener noreferrer"}},[e._v("Blog"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("★ "),n("a",{attrs:{href:"https://github.com/staven630/nuxt-config",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nuxt.js 全面配置"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("目录")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#env",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 配置多环境变量"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#base",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 配置基础 vue.config.js"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#proxy",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 配置 proxy 跨域"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#hmr",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 修复 HMR(热更新)失效"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#lazyloading",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 修复 Lazy loading routes Error： Cyclic dependency"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#alias",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 添加别名 alias"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#compressimage",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 压缩图片"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#spritesmith",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 自动生成雪碧图"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#removecss",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 去除多余无效的 css"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#analyze",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 添加打包分析"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#externals",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 配置 externals 引入 cdn 资源"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#moment",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 删除 moment 语言包"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#log",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 去掉 console.log"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#splitchunks",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 利用 splitChunks 单独打包第三方模块"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#gzip",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 开启 gzip 压缩"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#globalscss",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 为 sass 提供全局样式，以及全局变量"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#globalstylus",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 为 stylus 提供全局变量"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#prerender",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 预渲染 prerender-spa-plugin"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#ie",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 添加 IE 兼容"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#alioss",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 文件上传 ali oss"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#allconfig",target:"_blank",rel:"noopener noreferrer"}},[e._v("√ 完整依赖"),n("OutboundLink")],1)])]),e._v(" "),n("h3",{attrs:{id:"✅-配置多环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-配置多环境变量"}},[e._v("#")]),e._v(" ✅ 配置多环境变量")]),e._v(" "),n("p",[e._v("通过在 package.json 里的 scripts 配置项中添加--mode xxx 来选择不同环境")]),e._v(" "),n("p",[e._v("只有以 VUE_APP 开头的变量会被 webpack.DefinePlugin 静态嵌入到客户端侧的包中，代码中可以通过 process.env.VUE_APP_BASE_API 访问")]),e._v(" "),n("p",[e._v("NODE_ENV 和 BASE_URL 是两个特殊变量，在代码中始终可用")]),e._v(" "),n("h5",{attrs:{id:"配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),n("p",[e._v("在项目根目录中新建.env, .env.production, .env.analyz 等文件")]),e._v(" "),n("ul",[n("li",[e._v(".env")])]),e._v(" "),n("p",[e._v("serve 默认的本地开发环境配置")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NODE_ENV = 'development'\nBASE_URL = './'\nVUE_APP_PUBLIC_PATH = './'\nVUE_APP_API = 'https://test.staven630.com/api'\n")])])]),n("ul",[n("li",[e._v(".env.production")])]),e._v(" "),n("p",[e._v("build 默认的环境配置")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NODE_ENV = 'production'\nBASE_URL = 'https://prod.staven630.com/'\nVUE_APP_PUBLIC_PATH = 'https://prod.oss.com/staven-blog'\nVUE_APP_API = 'https://prod.staven630.com/api'\n\nACCESS_KEY_ID = 'xxxxxxxxxxxxx'\nACCESS_KEY_SECRET = 'xxxxxxxxxxxxx'\nREGION = 'oss-cn-hangzhou'\nBUCKET = 'staven-prod'\nPREFIX = 'staven-blog'\n")])])]),n("ul",[n("li",[e._v(".env.analyz")])]),e._v(" "),n("p",[e._v("自定义 build 环境配置")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NODE_ENV = 'production'\nBASE_URL = 'https://prod.staven630.com/'\nVUE_APP_PUBLIC_PATH = 'https://prod.oss.com/staven-blog'\nVUE_APP_API = 'https://prod.staven630.com/api'\n\nACCESS_KEY_ID = 'xxxxxxxxxxxxx'\nACCESS_KEY_SECRET = 'xxxxxxxxxxxxx'\nREGION = 'oss-cn-hangzhou'\nBUCKET = 'staven-prod'\nPREFIX = 'staven-blog'\n\nIS_ANALYZE = true\n")])])]),n("p",[e._v("修改 package.json")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('"scripts": {\n  "serve": "vue-cli-service serve",\n  "build": "vue-cli-service build",\n  "analyz": "vue-cli-service build --mode analyz",\n  "lint": "vue-cli-service lint"\n}\n')])])]),n("h5",{attrs:{id:"使用环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用环境变量"}},[e._v("#")]),e._v(" 使用环境变量")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<template>\n  <div class="home">\n    \x3c!-- template中使用环境变量 --\x3e\n    {{ api }}\n  </div>\n</template>\n\n<script>\nexport default {\n  name: "home",\n  data() {\n    return {\n      api: process.env.VUE_APP_API\n    };\n  },\n  mounted() {\n    // js代码中使用环境变量\n    console.log("BASE_URL", process.env.BASE_URL);\n    console.log("VUE_APP_API", process.env.VUE_APP_API);\n  }\n};\n<\/script>\n')])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-配置基础-vue-config-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-配置基础-vue-config-js"}},[e._v("#")]),e._v(" ✅ 配置基础 vue.config.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\n\nmodule.exports = {\n  publicPath: IS_PROD ? process.env.VUE_APP_PUBLIC_PATH : './', // 默认'/'，部署应用包时的基本 URL\n  // outputDir: process.env.outputDir || 'dist', // 'dist', 生产环境构建文件的目录\n  // assetsDir: \"\", // 相对于outputDir的静态资源(js、css、img、fonts)目录\n  lintOnSave: false,\n  runtimeCompiler: true, // 是否使用包含运行时编译器的 Vue 构建版本\n  productionSourceMap: !IS_PROD, // 生产环境的 source map\n  parallel: require('os').cpus().length > 1,\n  pwa: {}\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-配置-proxy-代理解决跨域问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-配置-proxy-代理解决跨域问题"}},[e._v("#")]),e._v(" ✅ 配置 proxy 代理解决跨域问题")]),e._v(" "),n("p",[e._v("假设 mock 接口为https://www.easy-mock.com/mock/5bc75b55dc36971c160cad1b/sheets/1")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("module.exports = {\n  devServer: {\n    // overlay: { // 让浏览器 overlay 同时显示警告和错误\n    //   warnings: true,\n    //   errors: true\n    // },\n    // open: false, // 是否打开浏览器\n    // host: \"localhost\",\n    // port: \"8080\", // 代理断就\n    // https: false,\n    // hotOnly: false, // 热更新\n    proxy: {\n      '/api': {\n        target:\n          'https://www.easy-mock.com/mock/5bc75b55dc36971c160cad1b/sheets', // 目标代理接口地址\n        secure: false,\n        changeOrigin: true, // 开启代理，在本地创建一个虚拟服务端\n        // ws: true, // 是否启用websockets\n        pathRewrite: {\n          '^/api': '/'\n        }\n      }\n    }\n  }\n}\n")])])]),n("p",[e._v("访问")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<script>\nimport axios from "axios";\nexport default {\n  mounted() {\n    axios.get("/api/1").then(res => {\n      console.log(res);\n    });\n  }\n};\n<\/script>\n')])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-修复-hmr-热更新-失效"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-修复-hmr-热更新-失效"}},[e._v("#")]),e._v(" ✅ 修复 HMR(热更新)失效")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("module.exports = {\n  chainWebpack: config => {\n    // 修复HMR\n    config.resolve.symlinks(true)\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-修复-lazy-loading-routes-error-cyclic-dependency-https-github-com-vuejs-vue-cli-issues-1669"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-修复-lazy-loading-routes-error-cyclic-dependency-https-github-com-vuejs-vue-cli-issues-1669"}},[e._v("#")]),e._v(" ✅ 修复 Lazy loading routes Error： Cyclic dependency https://github.com/vuejs/vue-cli/issues/1669")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("module.exports = {\n  chainWebpack: config => {\n    config.plugin('html').tap(args => {\n      args[0].chunksSortMode = 'none'\n      return args\n    })\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-添加别名-alias"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-添加别名-alias"}},[e._v("#")]),e._v(" ✅ 添加别名 alias")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const path = require('path')\nconst resolve = dir => path.join(__dirname, dir)\nconst IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\n\nmodule.exports = {\n  chainWebpack: config => {\n    // 添加别名\n    config.resolve.alias\n      .set('vue$', 'vue/dist/vue.esm.js')\n      .set('@', resolve('src'))\n      .set('@assets', resolve('src/assets'))\n      .set('@scss', resolve('src/assets/scss'))\n      .set('@components', resolve('src/components'))\n      .set('@plugins', resolve('src/plugins'))\n      .set('@views', resolve('src/views'))\n      .set('@router', resolve('src/router'))\n      .set('@store', resolve('src/store'))\n      .set('@layouts', resolve('src/layouts'))\n      .set('@static', resolve('src/static'))\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-压缩图片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-压缩图片"}},[e._v("#")]),e._v(" ✅ 压缩图片")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D image-webpack-loader\nmodule.exports = {\n  chainWebpack: config => {\n    config.module\n      .rule('images')\n      .use('image-webpack-loader')\n      .loader('image-webpack-loader')\n      .options({\n        mozjpeg: { progressive: true, quality: 65 },\n        optipng: { enabled: false },\n        pngquant: { quality: [0.65, 0.9], speed: 4 },\n        gifsicle: { interlaced: false },\n        webp: { quality: 75 }\n      })\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-自动生成雪碧图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-自动生成雪碧图"}},[e._v("#")]),e._v(" ✅ 自动生成雪碧图")]),e._v(" "),n("p",[e._v("默认 src/assets/icons 中存放需要生成雪碧图的 png 文件。首次运行 npm run serve/build 会生成雪碧图，并在跟目录生成 icons.json 文件。再次运行命令时，会对比 icons 目录内文件与 icons.json 的匹配关系，确定是否需要再次执行 webpack-spritesmith 插件。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D webpack-spritesmith\nconst SpritesmithPlugin = require('webpack-spritesmith')\nconst path = require('path')\nconst fs = require('fs')\n\nlet has_sprite = true\n\ntry {\n  let result = fs.readFileSync(path.resolve(__dirname, './icons.json'), 'utf8')\n  result = JSON.parse(result)\n  const files = fs.readdirSync(path.resolve(__dirname, './src/assets/icons'))\n  has_sprite =\n    files && files.length\n      ? files.some(item => {\n          let filename = item.toLocaleLowerCase().replace(/_/g, '-')\n          return !result[filename]\n        })\n      : false\n} catch (e) {\n  has_sprite = false\n}\n\n// 雪碧图样式处理模板\nconst SpritesmithTemplate = function(data) {\n  // pc\n  let icons = {}\n  let tpl = `.ico { \n  display: inline-block; \n  background-image: url(${data.sprites[0].image}); \n  background-size: ${data.spritesheet.width}px ${data.spritesheet.height}px; \n}`\n\n  data.sprites.forEach(sprite => {\n    const name = '' + sprite.name.toLocaleLowerCase().replace(/_/g, '-')\n    icons[`${name}.png`] = true\n    tpl = `${tpl} \n.ico-${name}{\n  width: ${sprite.width}px; \n  height: ${sprite.height}px; \n  background-position: ${sprite.offset_x}px ${sprite.offset_y}px;\n}\n`\n  })\n\n  fs.writeFile(\n    path.resolve(__dirname, './icons.json'),\n    JSON.stringify(icons, null, 2),\n    (err, data) => {}\n  )\n\n  return tpl\n}\n\nmodule.exports = {\n  configureWebpack: config => {\n    const plugins = []\n    if (has_sprite) {\n      plugins.push(\n        new SpritesmithPlugin({\n          src: {\n            cwd: path.resolve(__dirname, './src/assets/icons/'), // 图标根路径\n            glob: '**/*.png' // 匹配任意 png 图标\n          },\n          target: {\n            image: path.resolve(__dirname, './src/assets/images/sprites.png'), // 生成雪碧图目标路径与名称\n            // 设置生成CSS背景及其定位的文件或方式\n            css: [\n              [\n                path.resolve(__dirname, './src/assets/scss/sprites.scss'),\n                {\n                  format: 'function_based_template'\n                }\n              ]\n            ]\n          },\n          customTemplates: {\n            function_based_template: SpritesmithTemplate\n          },\n          apiOptions: {\n            cssImageRef: '../images/sprites.png' // css文件中引用雪碧图的相对位置路径配置\n          },\n          spritesmithOptions: {\n            padding: 2\n          }\n        })\n      )\n    }\n    config.plugins = [...config.plugins, ...plugins]\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-去除多余无效的-css"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-去除多余无效的-css"}},[e._v("#")]),e._v(" ✅ 去除多余无效的 css")]),e._v(" "),n("p",[e._v("注：谨慎使用。可能出现各种样式丢失现象。")]),e._v(" "),n("ul",[n("li",[e._v("方案一：@fullhuman/postcss-purgecss")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D postcss-import @fullhuman/postcss-purgecss\n")])])]),n("p",[e._v("更新 postcss.config.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const autoprefixer = require('autoprefixer')\nconst postcssImport = require('postcss-import')\nconst purgecss = require('@fullhuman/postcss-purgecss')\nconst IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\nlet plugins = []\nif (IS_PROD) {\n  plugins.push(postcssImport)\n  plugins.push(\n    purgecss({\n      content: [\n        './layouts/**/*.vue',\n        './components/**/*.vue',\n        './pages/**/*.vue'\n      ],\n      extractors: [\n        {\n          extractor: class Extractor {\n            static extract(content) {\n              const validSection = content.replace(\n                /<style([\\s\\S]*?)<\\/style>+/gim,\n                ''\n              )\n              return (\n                validSection.match(/[A-Za-z0-9-_/:]*[A-Za-z0-9-_/]+/g) || []\n              )\n            }\n          },\n          extensions: ['html', 'vue']\n        }\n      ],\n      whitelist: ['html', 'body'],\n      whitelistPatterns: [\n        /el-.*/,\n        /-(leave|enter|appear)(|-(to|from|active))$/,\n        /^(?!cursor-move).+-move$/,\n        /^router-link(|-exact)-active$/\n      ],\n      whitelistPatternsChildren: [/^token/, /^pre/, /^code/]\n    })\n  )\n}\nmodule.exports = {\n  plugins: [...plugins, autoprefixer]\n}\n")])])]),n("ul",[n("li",[e._v("方案二：purgecss-webpack-plugin")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D glob-all purgecss-webpack-plugin\nconst path = require('path')\nconst glob = require('glob-all')\nconst PurgecssPlugin = require('purgecss-webpack-plugin')\nconst resolve = dir => path.join(__dirname, dir)\nconst IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\n\nmodule.exports = {\n  configureWebpack: config => {\n    const plugins = []\n    if (IS_PROD) {\n      plugins.push(\n        new PurgecssPlugin({\n          paths: glob.sync([resolve('./**/*.vue')]),\n          extractors: [\n            {\n              extractor: class Extractor {\n                static extract(content) {\n                  const validSection = content.replace(\n                    /<style([\\s\\S]*?)<\\/style>+/gim,\n                    ''\n                  )\n                  return (\n                    validSection.match(/[A-Za-z0-9-_/:]*[A-Za-z0-9-_/]+/g) || []\n                  )\n                }\n              },\n              extensions: ['html', 'vue']\n            }\n          ],\n          whitelist: ['html', 'body'],\n          whitelistPatterns: [\n            /el-.*/,\n            /-(leave|enter|appear)(|-(to|from|active))$/,\n            /^(?!cursor-move).+-move$/,\n            /^router-link(|-exact)-active$/\n          ],\n          whitelistPatternsChildren: [/^token/, /^pre/, /^code/]\n        })\n      )\n    }\n    config.plugins = [...config.plugins, ...plugins]\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-添加打包分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-添加打包分析"}},[e._v("#")]),e._v(" ✅ 添加打包分析")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const BundleAnalyzerPlugin = require('webpack-bundle-analyzer')\n  .BundleAnalyzerPlugin\n\nmodule.exports = {\n  chainWebpack: config => {\n    // 打包分析\n    if (process.env.IS_ANALY) {\n      config.plugin('webpack-report').use(BundleAnalyzerPlugin, [\n        {\n          analyzerMode: 'static'\n        }\n      ])\n    }\n  }\n}\n")])])]),n("p",[e._v("需要添加.env.analyz 文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NODE_ENV = 'production'\nIS_ANALYZ = true\n")])])]),n("p",[e._v("package.json 的 scripts 中添加")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('"analyz": "vue-cli-service build --mode analyz"\n')])])]),n("p",[e._v("执行")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm run analyz\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-配置-externals-引入-cdn-资源"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-配置-externals-引入-cdn-资源"}},[e._v("#")]),e._v(" ✅ 配置 externals 引入 cdn 资源")]),e._v(" "),n("p",[e._v("防止将某些 import 的包(package)打包到 bundle 中，而是在运行时(runtime)再去从外部获取这些扩展依赖")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("module.exports = {\n  configureWebpack: config => {\n    config.externals = {\n      vue: 'Vue',\n      'element-ui': 'ELEMENT',\n      'vue-router': 'VueRouter',\n      vuex: 'Vuex',\n      axios: 'axios'\n    }\n  },\n  chainWebpack: config => {\n    const cdn = {\n      // 访问https://unpkg.com/element-ui/lib/theme-chalk/index.css获取最新版本\n      css: ['//unpkg.com/element-ui@2.10.1/lib/theme-chalk/index.css'],\n      js: [\n        '//unpkg.com/vue@2.6.10/dist/vue.min.js', // 访问https://unpkg.com/vue/dist/vue.min.js获取最新版本\n        '//unpkg.com/vue-router@3.0.6/dist/vue-router.min.js',\n        '//unpkg.com/vuex@3.1.1/dist/vuex.min.js',\n        '//unpkg.com/axios@0.19.0/dist/axios.min.js',\n        '//unpkg.com/element-ui@2.10.1/lib/index.js'\n      ]\n    }\n\n    // html中添加cdn\n    config.plugin('html').tap(args => {\n      args[0].cdn = cdn\n      return args\n    })\n  }\n}\n")])])]),n("p",[e._v("在 html 中添加")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\x3c!-- 使用CDN的CSS文件 --\x3e\n<% for (var i in htmlWebpackPlugin.options.cdn &&\nhtmlWebpackPlugin.options.cdn.css) { %>\n<link rel="stylesheet" href="<%= htmlWebpackPlugin.options.cdn.css[i] %>" />\n<% } %>\n\n\x3c!-- 使用CDN的JS文件 --\x3e\n<% for (var i in htmlWebpackPlugin.options.cdn &&\nhtmlWebpackPlugin.options.cdn.js) { %>\n<script\n  type="text/javascript"\n  src="<%= htmlWebpackPlugin.options.cdn.js[i] %>"\n><\/script>\n<% } %>\n')])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-删除-moment-语言包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-删除-moment-语言包"}},[e._v("#")]),e._v(" ✅ 删除 moment 语言包")]),e._v(" "),n("p",[e._v("删除 moment 除 zh-cn 中文包外的其它语言包，无需在代码中手动引入 zh-cn 语言包。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const webpack = require('webpack')\n\nmodule.exports = {\n  chainWebpack: config => {\n    config\n      .plugin('ignore')\n      .use(new webpack.ContextReplacementPlugin(/moment[/\\\\]locale$/, /zh-cn$/))\n\n    return config\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-去掉-console-log"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-去掉-console-log"}},[e._v("#")]),e._v(" ✅ 去掉 console.log")]),e._v(" "),n("h5",{attrs:{id:"方法一-使用-babel-plugin-transform-remove-console-插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法一-使用-babel-plugin-transform-remove-console-插件"}},[e._v("#")]),e._v(" 方法一：使用 babel-plugin-transform-remove-console 插件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D babel-plugin-transform-remove-console\n")])])]),n("p",[e._v("在 babel.config.js 中配置")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const IS_PROD = ["production", "prod"].includes(process.env.NODE_ENV);\n\nconst plugins = [];\nif (IS_PROD) {\n  plugins.push("transform-remove-console");\n}\n\nmodule.exports = {\n  presets: ["@vue/app", { useBuiltIns: "entry" }],\n  plugins\n};\n')])])]),n("h5",{attrs:{id:"方法二"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法二"}},[e._v("#")]),e._v(" 方法二：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const UglifyJsPlugin = require('uglifyjs-webpack-plugin')\nmodule.exports = {\n  configureWebpack: config => {\n    if (IS_PROD) {\n      const plugins = []\n      plugins.push(\n        new UglifyJsPlugin({\n          uglifyOptions: {\n            compress: {\n              warnings: false,\n              drop_console: true,\n              drop_debugger: false,\n              pure_funcs: ['console.log'] //移除console\n            }\n          },\n          sourceMap: false,\n          parallel: true\n        })\n      )\n      config.plugins = [...config.plugins, ...plugins]\n    }\n  }\n}\n")])])]),n("p",[e._v("如果使用 uglifyjs-webpack-plugin 会报错，可能存在 node_modules 中有些依赖需要 babel 转译。")]),e._v(" "),n("p",[e._v("而 vue-cli 的"),n("a",{attrs:{href:"https://cli.vuejs.org/zh/config/#transpiledependencies",target:"_blank",rel:"noopener noreferrer"}},[e._v("transpileDependencies"),n("OutboundLink")],1),e._v("配置默认为[], babel-loader 会忽略所有 node_modules 中的文件。如果你想要通过 Babel 显式转译一个依赖，可以在这个选项中列出来。配置需要转译的第三方库。")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"利用-splitchunks-单独打包第三方模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#利用-splitchunks-单独打包第三方模块"}},[e._v("#")]),e._v(" 利用 splitChunks 单独打包第三方模块")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\n\nmodule.exports = {\n  configureWebpack: config => {\n    if (IS_PROD) {\n      config.optimization = {\n        splitChunks: {\n          cacheGroups: {\n            libs: {\n              name: 'chunk-libs',\n              test: /[\\\\/]node_modules[\\\\/]/,\n              priority: 10,\n              chunks: 'initial'\n            },\n            elementUI: {\n              name: 'chunk-elementUI',\n              priority: 20,\n              test: /[\\\\/]node_modules[\\\\/]element-ui[\\\\/]/,\n              chunks: 'all'\n            }\n          }\n        }\n      }\n    }\n  },\n  chainWebpack: config => {\n    if (IS_PROD) {\n      config.optimization.delete('splitChunks')\n    }\n    return config\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-开启-gzip-压缩"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-开启-gzip-压缩"}},[e._v("#")]),e._v(" ✅ 开启 gzip 压缩")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D compression-webpack-plugin\nconst CompressionWebpackPlugin = require('compression-webpack-plugin')\n\nconst IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\nconst productionGzipExtensions = /\\.(js|css|json|txt|html|ico|svg)(\\?.*)?$/i\n\nmodule.exports = {\n  configureWebpack: config => {\n    const plugins = []\n    if (IS_PROD) {\n      plugins.push(\n        new CompressionWebpackPlugin({\n          filename: '[path].gz[query]',\n          algorithm: 'gzip',\n          test: productionGzipExtensions,\n          threshold: 10240,\n          minRatio: 0.8\n        })\n      )\n    }\n    config.plugins = [...config.plugins, ...plugins]\n  }\n}\n")])])]),n("p",[e._v("还可以开启比 gzip 体验更好的 Zopfli 压缩详见https://webpack.js.org/plugins/compression-webpack-plugin")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D @gfx/zopfli brotli-webpack-plugin\nconst CompressionWebpackPlugin = require('compression-webpack-plugin')\nconst zopfli = require('@gfx/zopfli')\nconst BrotliPlugin = require('brotli-webpack-plugin')\n\nconst IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\nconst productionGzipExtensions = /\\.(js|css|json|txt|html|ico|svg)(\\?.*)?$/i\n\nmodule.exports = {\n  configureWebpack: config => {\n    const plugins = []\n    if (IS_PROD) {\n      plugins.push(\n        new CompressionWebpackPlugin({\n          algorithm(input, compressionOptions, callback) {\n            return zopfli.gzip(input, compressionOptions, callback)\n          },\n          compressionOptions: {\n            numiterations: 15\n          },\n          minRatio: 0.99,\n          test: productionGzipExtensions\n        })\n      )\n      plugins.push(\n        new BrotliPlugin({\n          test: productionGzipExtensions,\n          minRatio: 0.99\n        })\n      )\n    }\n    config.plugins = [...config.plugins, ...plugins]\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-为-sass-提供全局样式-以及全局变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-为-sass-提供全局样式-以及全局变量"}},[e._v("#")]),e._v(" ✅ 为 sass 提供全局样式，以及全局变量")]),e._v(" "),n("p",[e._v("可以通过在 main.js 中 Vue.prototype.$src = process.env.VUE_APP_PUBLIC_PATH;挂载环境变量中的配置信息，然后在js中使用$src 访问。")]),e._v(" "),n("p",[e._v("css 中可以使用注入 sass 变量访问环境变量中的配置信息")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const IS_PROD = [\'production\', \'prod\'].includes(process.env.NODE_ENV)\n\nmodule.exports = {\n  css: {\n    modules: false,\n    extract: IS_PROD,\n    sourceMap: false,\n    loaderOptions: {\n      scss: {\n        // 向全局sass样式传入共享的全局变量, $src可以配置图片cdn前缀\n        // 详情: https://cli.vuejs.org/guide/css.html#passing-options-to-pre-processor-loaders\n        prependData: `\n        @import "@scss/config.scss";\n        @import "@scss/variables.scss";\n        @import "@scss/mixins.scss";\n        @import "@scss/utils.scss";\n        $src: "${process.env.VUE_APP_OSS_SRC}";\n        `\n      }\n    }\n  }\n}\n')])])]),n("p",[e._v("在 scss 中引用")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(".home {\n  background: url($src+'/images/500.png');\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-为-stylus-提供全局变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-为-stylus-提供全局变量"}},[e._v("#")]),e._v(" ✅ 为 stylus 提供全局变量")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D style-resources-loader\nconst path = require('path')\nconst resolve = dir => path.resolve(__dirname, dir)\nconst addStylusResource = rule => {\n  rule\n    .use('style-resouce')\n    .loader('style-resources-loader')\n    .options({\n      patterns: [resolve('src/assets/stylus/variable.styl')]\n    })\n}\nmodule.exports = {\n  chainWebpack: config => {\n    const types = ['vue-modules', 'vue', 'normal-modules', 'normal']\n    types.forEach(type =>\n      addStylusResource(config.module.rule('stylus').oneOf(type))\n    )\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"预渲染-prerender-spa-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#预渲染-prerender-spa-plugin"}},[e._v("#")]),e._v(" 预渲染 prerender-spa-plugin")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D prerender-spa-plugin\nconst PrerenderSpaPlugin = require('prerender-spa-plugin')\nconst path = require('path')\nconst resolve = dir => path.join(__dirname, dir)\nconst IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\n\nmodule.exports = {\n  configureWebpack: config => {\n    const plugins = []\n    if (IS_PROD) {\n      plugins.push(\n        new PrerenderSpaPlugin({\n          staticDir: resolve('dist'),\n          routes: ['/'],\n          postProcess(ctx) {\n            ctx.route = ctx.originalRoute\n            ctx.html = ctx.html.split(/>[\\s]+</gim).join('><')\n            if (ctx.route.endsWith('.html')) {\n              ctx.outputPath = path.join(__dirname, 'dist', ctx.route)\n            }\n            return ctx\n          },\n          minify: {\n            collapseBooleanAttributes: true,\n            collapseWhitespace: true,\n            decodeEntities: true,\n            keepClosingSlash: true,\n            sortAttributes: true\n          },\n          renderer: new PrerenderSpaPlugin.PuppeteerRenderer({\n            // 需要注入一个值，这样就可以检测页面当前是否是预渲染的\n            inject: {},\n            headless: false,\n            // 视图组件是在API请求获取所有必要数据后呈现的，因此我们在dom中存在“data view”属性后创建页面快照\n            renderAfterDocumentEvent: 'render-event'\n          })\n        })\n      )\n    }\n    config.plugins = [...config.plugins, ...plugins]\n  }\n}\n")])])]),n("p",[e._v("mounted()中添加 document.dispatchEvent(new Event('render-event'))")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("new Vue({\n  router,\n  store,\n  render: h => h(App),\n  mounted() {\n    document.dispatchEvent(new Event('render-event'))\n  }\n}).$mount('#app')\n")])])]),n("h5",{attrs:{id:"为自定义预渲染页面添加自定义-title、description、content"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为自定义预渲染页面添加自定义-title、description、content"}},[e._v("#")]),e._v(" 为自定义预渲染页面添加自定义 title、description、content")]),e._v(" "),n("ul",[n("li",[e._v("删除 public/index.html 中关于 description、content 的 meta 标签。保留 title 标签")]),e._v(" "),n("li",[e._v("配置 router-config.js")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("module.exports = {\n  '/': {\n    title: '首页',\n    keywords: '首页关键词',\n    description: '这是首页描述'\n  },\n  '/about.html': {\n    title: '关于我们',\n    keywords: '关于我们页面关键词',\n    description: '关于我们页面关键词描述'\n  }\n}\n")])])]),n("ul",[n("li",[e._v("vue.config.js")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const path = require('path')\nconst PrerenderSpaPlugin = require('prerender-spa-plugin')\nconst routesConfig = require('./router-config')\nconst resolve = dir => path.join(__dirname, dir)\nconst IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\n\nmodule.exports = {\n  configureWebpack: config => {\n    const plugins = []\n\n    if (IS_PROD) {\n      // 预加载\n      plugins.push(\n        new PrerenderSpaPlugin({\n          staticDir: resolve('dist'),\n          routes: Object.keys(routesConfig),\n          postProcess(ctx) {\n            ctx.route = ctx.originalRoute\n            ctx.html = ctx.html.split(/>[\\s]+</gim).join('><')\n            ctx.html = ctx.html.replace(\n              /<title>(.*?)<\\/title>/gi,\n              `<title>${routesConfig[ctx.route].title}</title><meta name=\"keywords\" content=\"${routesConfig[ctx.route].keywords}\" /><meta name=\"description\" content=\"${routesConfig[ctx.route].description}\" />`\n            )\n            if (ctx.route.endsWith('.html')) {\n              ctx.outputPath = path.join(__dirname, 'dist', ctx.route)\n            }\n            return ctx\n          },\n          minify: {\n            collapseBooleanAttributes: true,\n            collapseWhitespace: true,\n            decodeEntities: true,\n            keepClosingSlash: true,\n            sortAttributes: true\n          },\n          renderer: new PrerenderSpaPlugin.PuppeteerRenderer({\n            // 需要注入一个值，这样就可以检测页面当前是否是预渲染的\n            inject: {},\n            headless: false,\n            // 视图组件是在API请求获取所有必要数据后呈现的，因此我们在dom中存在“data view”属性后创建页面快照\n            renderAfterDocumentEvent: 'render-event'\n          })\n        })\n      )\n    }\n\n    config.plugins = [...config.plugins, ...plugins]\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-添加-ie-兼容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-添加-ie-兼容"}},[e._v("#")]),e._v(" ✅ 添加 IE 兼容")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -S @babel/polyfill\n")])])]),n("p",[e._v("在 main.js 中添加")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import '@babel/polyfill'\n")])])]),n("p",[e._v("配置 babel.config.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const plugins = []\n\nmodule.exports = {\n  presets: [['@vue/app', { useBuiltIns: 'entry' }]],\n  plugins: plugins\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-文件上传-ali-oss"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-文件上传-ali-oss"}},[e._v("#")]),e._v(" ✅ 文件上传 ali oss")]),e._v(" "),n("p",[e._v("开启文件上传 ali oss，需要将 publicPath 改成 ali oss 资源 url 前缀,也就是修改 VUE_APP_PUBLIC_PATH。具体配置参见"),n("a",{attrs:{href:"https://github.com/staven630/webpack-oss",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack-oss"),n("OutboundLink")],1)]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i -D webpack-oss\nconst AliOssPlugin = require('webpack-oss')\nconst IS_PROD = ['production', 'prod'].includes(process.env.NODE_ENV)\n\nconst format = AliOssPlugin.getFormat()\n\nmodule.exports = {\n  publicPath: IS_PROD ? `${process.env.VUE_APP_PUBLIC_PATH}/${format}` : './', // 默认'/'，部署应用包时的基本 URL\n  configureWebpack: config => {\n    const plugins = []\n\n    if (IS_PROD) {\n      plugins.push(\n        new AliOssPlugin({\n          accessKeyId: process.env.ACCESS_KEY_ID,\n          accessKeySecret: process.env.ACCESS_KEY_SECRET,\n          region: process.env.REGION,\n          bucket: process.env.BUCKET,\n          prefix: process.env.PREFIX,\n          exclude: /.*\\.html$/,\n          format\n        })\n      )\n    }\n    config.plugins = [...config.plugins, ...plugins]\n  }\n}\n")])])]),n("p",[n("a",{attrs:{href:"https://github.com/staven630/vue-cli4-config/blob/vue-cli3/README.md#top",target:"_blank",rel:"noopener noreferrer"}},[e._v("▲ 回顶部"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"✅-完整配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✅-完整配置"}},[e._v("#")]),e._v(" ✅ 完整配置")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const path = require(\'path\')\nconst webpack = require(\'webpack\')\n// const glob = require("glob-all");\n// const PurgecssPlugin = require("purgecss-webpack-plugin");\nconst BundleAnalyzerPlugin = require(\'webpack-bundle-analyzer\')\n  .BundleAnalyzerPlugin\n// const UglifyJsPlugin = require("uglifyjs-webpack-plugin");\n// const CompressionWebpackPlugin = require("compression-webpack-plugin");\n// const PrerenderSpaPlugin = require("prerender-spa-plugin");\n// const AliOssPlugin = require("webpack-oss");\nconst resolve = dir => path.join(__dirname, dir)\nconst IS_PROD = [\'production\', \'prod\'].includes(process.env.NODE_ENV)\n// const SpritesmithPlugin = require(\'webpack-spritesmith\')\n// let has_sprite = true\n\n// const productionGzipExtensions = /\\.(js|css|json|txt|html|ico|svg)(\\?.*)?$/i;\n\n// const addStylusResource = rule => {\n//   rule\n//     .use("style-resouce")\n//     .loader("style-resources-loader")\n//     .options({\n//       patterns: [resolve("src/assets/stylus/variable.styl")]\n//     });\n// };\n\n// try {\n//   let result = fs.readFileSync(path.resolve(__dirname, \'./icons.json\'), \'utf8\')\n//   result = JSON.parse(result)\n//   const files = fs.readdirSync(path.resolve(__dirname, \'./src/assets/icons\'))\n//   has_sprite = files && files.length ? files.some(item => {\n//     let filename = item.toLocaleLowerCase().replace(/_/g, \'-\')\n//     return !result[filename]\n//   }) : false\n// } finally {\n//   has_sprite = false\n// }\n\n// 雪碧图样式处理模板\n// const SpritesmithTemplate = function(data) {\n//   // pc\n//   let icons = {}\n//   let tpl = `.ico {\n//   display: inline-block;\n//   background-image: url(${data.sprites[0].image});\n//   background-size: ${data.spritesheet.width}px ${data.spritesheet.height}px;\n// }`\n\n//   data.sprites.forEach(sprite => {\n//     const name = \'\' + sprite.name.toLocaleLowerCase().replace(/_/g, \'-\')\n//     icons[`${name}.png`] = true\n//     tpl = `${tpl}\n// .ico-${name}{\n//   width: ${sprite.width}px;\n//   height: ${sprite.height}px;\n//   background-position: ${sprite.offset_x}px ${sprite.offset_y}px;\n// }\n// `\n//   })\n\n//   fs.writeFile(\n//     path.resolve(__dirname, \'./icons.json\'),\n//     JSON.stringify(icons, null, 2),\n//     (err, data) => {}\n//   )\n\n//   return tpl\n// }\n// const format = AliOssPlugin.getFormat();\n\nmodule.exports = {\n  publicPath: IS_PROD ? process.env.VUE_APP_PUBLIC_PATH : \'./\', // 默认\'/\'，部署应用包时的基本 URL\n  // outputDir: process.env.outputDir || \'dist\', // \'dist\', 生产环境构建文件的目录\n  // assetsDir: "", // 相对于outputDir的静态资源(js、css、img、fonts)目录\n  configureWebpack: config => {\n    const plugins = []\n\n    if (IS_PROD) {\n      // 去除多余css\n      // plugins.push(\n      //   new PurgecssPlugin({\n      //     paths: glob.sync([resolve("./**/*.vue")]),\n      //     extractors: [\n      //       {\n      //         extractor: class Extractor {\n      //           static extract(content) {\n      //             const validSection = content.replace(\n      //               /<style([\\s\\S]*?)<\\/style>+/gim,\n      //               ""\n      //             );\n      //             return validSection.match(/[A-Za-z0-9-_:/]+/g) || [];\n      //           }\n      //         },\n      //         extensions: ["html", "vue"]\n      //       }\n      //     ],\n      //     whitelist: ["html", "body"],\n      //     whitelistPatterns: [/el-.*/],\n      //     whitelistPatternsChildren: [/^token/, /^pre/, /^code/]\n      //   })\n      // );\n      //   plugins.push(\n      //     new UglifyJsPlugin({\n      //       uglifyOptions: {\n      //         compress: {\n      //           warnings: false,\n      //           drop_console: true,\n      //           drop_debugger: false,\n      //           pure_funcs: ["console.log"] //移除console\n      //         }\n      //       },\n      //       sourceMap: false,\n      //       parallel: true\n      //     })\n      //   );\n      // 利用splitChunks单独打包第三方模块\n      // config.optimization = {\n      //   splitChunks: {\n      //     cacheGroups: {\n      //       libs: {\n      //         name: "chunk-libs",\n      //         test: /[\\\\/]node_modules[\\\\/]/,\n      //         priority: 10,\n      //         chunks: "initial"\n      //       },\n      //       elementUI: {\n      //         name: "chunk-elementUI",\n      //         priority: 20,\n      //         test: /[\\\\/]node_modules[\\\\/]element-ui[\\\\/]/,\n      //         chunks: "all"\n      //       }\n      //     }\n      //   }\n      // };\n      // gzip\n      // plugins.push(\n      //   new CompressionWebpackPlugin({\n      //     filename: "[path].gz[query]",\n      //     algorithm: "gzip",\n      //     test: productionGzipExtensions,\n      //     threshold: 10240,\n      //     minRatio: 0.8\n      //   })\n      // );\n      // 预加载\n      //   plugins.push(\n      //     new PrerenderSpaPlugin({\n      //       staticDir: resolve("dist"),\n      //       routes: ["/"],\n      //       postProcess(ctx) {\n      //         ctx.route = ctx.originalRoute;\n      //         ctx.html = ctx.html.split(/>[\\s]+</gim).join("><");\n      //         if (ctx.route.endsWith(".html")) {\n      //           ctx.outputPath = path.join(__dirname, "dist", ctx.route);\n      //         }\n      //         return ctx;\n      //       },\n      //       minify: {\n      //         collapseBooleanAttributes: true,\n      //         collapseWhitespace: true,\n      //         decodeEntities: true,\n      //         keepClosingSlash: true,\n      //         sortAttributes: true\n      //       },\n      //       renderer: new PrerenderSpaPlugin.PuppeteerRenderer({\n      //         // 需要注入一个值，这样就可以检测页面当前是否是预渲染的\n      //         inject: {},\n      //         headless: false,\n      //         // 视图组件是在API请求获取所有必要数据后呈现的，因此我们在dom中存在“data view”属性后创建页面快照\n      //         renderAfterDocumentEvent: "render-event"\n      //       })\n      //     })\n      //   );\n      // oss\n      // plugins.push(\n      //   new AliOssPlugin({\n      //     accessKeyId: process.env.ACCESS_KEY_ID,\n      //     accessKeySecret: process.env.ACCESS_KEY_SECRET,\n      //     region: process.env.REGION,\n      //     bucket: process.env.BUCKET,\n      //     prefix: process.env.PREFIX,\n      //     exclude: /.*\\.html$/,\n      //     format\n      //   })\n      // );\n    }\n    // config.externals = {\n    //   vue: "Vue",\n    //   "element-ui": "ELEMENT",\n    //   "vue-router": "VueRouter",\n    //   vuex: "Vuex",\n    //   axios: "axios"\n    // };\n\n    // if (has_sprite) {\n    //   plugins.push(\n    //     new SpritesmithPlugin({\n    //       src: {\n    //         cwd: path.resolve(__dirname, \'./src/assets/icons/\'), // 图标根路径\n    //         glob: \'**/*.png\' // 匹配任意 png 图标\n    //       },\n    //       target: {\n    //         image: path.resolve(__dirname, \'./src/assets/images/sprites.png\'), // 生成雪碧图目标路径与名称\n    //         // 设置生成CSS背景及其定位的文件或方式\n    //         css: [\n    //           [\n    //             path.resolve(__dirname, \'./src/assets/scss/sprites.scss\'),\n    //             {\n    //               format: \'function_based_template\'\n    //             }\n    //           ]\n    //         ]\n    //       },\n    //       customTemplates: {\n    //         function_based_template: SpritesmithTemplate\n    //       },\n    //       apiOptions: {\n    //         cssImageRef: \'../images/sprites.png\' // css文件中引用雪碧图的相对位置路径配置\n    //       },\n    //       spritesmithOptions: {\n    //         padding: 2\n    //       }\n    //     })\n    //   )\n    // }\n\n    config.plugins = [...config.plugins, ...plugins]\n  },\n  chainWebpack: config => {\n    // 修复HMR\n    config.resolve.symlinks(true)\n    config\n      .plugin(\'ignore\')\n      .use(new webpack.ContextReplacementPlugin(/moment[/\\\\]locale$/, /zh-cn$/))\n\n    // const cdn = {\n    //   // 访问https://unpkg.com/element-ui/lib/theme-chalk/index.css获取最新版本\n    //   css: ["//unpkg.com/element-ui@2.10.1/lib/theme-chalk/index.css"],\n    //   js: [\n    //     "//unpkg.com/vue@2.6.10/dist/vue.min.js", // 访问https://unpkg.com/vue/dist/vue.min.js获取最新版本\n    //     "//unpkg.com/vue-router@3.0.6/dist/vue-router.min.js",\n    //     "//unpkg.com/vuex@3.1.1/dist/vuex.min.js",\n    //     "//unpkg.com/axios@0.19.0/dist/axios.min.js",\n    //     "//unpkg.com/element-ui@2.10.1/lib/index.js"\n    //   ]\n    // };\n\n    config.plugin(\'html\').tap(args => {\n      // 修复 Lazy loading routes Error\n      args[0].chunksSortMode = \'none\'\n      // html中添加cdn\n      // args[0].cdn = cdn;\n      return args\n    })\n\n    // 添加别名\n    config.resolve.alias\n      .set(\'vue$\', \'vue/dist/vue.esm.js\')\n      .set(\'@\', resolve(\'src\'))\n      .set(\'@assets\', resolve(\'src/assets\'))\n      .set(\'@scss\', resolve(\'src/assets/scss\'))\n      .set(\'@components\', resolve(\'src/components\'))\n      .set(\'@plugins\', resolve(\'src/plugins\'))\n      .set(\'@views\', resolve(\'src/views\'))\n      .set(\'@router\', resolve(\'src/router\'))\n      .set(\'@store\', resolve(\'src/store\'))\n      .set(\'@layouts\', resolve(\'src/layouts\'))\n      .set(\'@static\', resolve(\'src/static\'))\n\n    // 压缩图片\n    // config.module\n    //   .rule("images")\n    //   .use("image-webpack-loader")\n    //   .loader("image-webpack-loader")\n    //   .options({\n    //     mozjpeg: { progressive: true, quality: 65 },\n    //     optipng: { enabled: false },\n    //     pngquant: { quality: "65-90", speed: 4 },\n    //     gifsicle: { interlaced: false },\n    //     webp: { quality: 75 }\n    //   });\n\n    // const types = ["vue-modules", "vue", "normal-modules", "normal"];\n    // types.forEach(type =>\n    //   addStylusResource(config.module.rule("stylus").oneOf(type))\n    // );\n\n    // 打包分析\n    if (process.env.IS_ANALYZ) {\n      config.plugin(\'webpack-report\').use(BundleAnalyzerPlugin, [\n        {\n          analyzerMode: \'static\'\n        }\n      ])\n    }\n    if (IS_PROD) {\n      // config.optimization.delete("splitChunks");\n    }\n    return config\n  },\n  css: {\n    requireModuleExtension: false,\n    extract: IS_PROD,\n    sourceMap: false,\n    loaderOptions: {\n      scss: {\n        // 向全局sass样式传入共享的全局变量, $src可以配置图片cdn前缀\n        prependData: `\n        @import "@scss/config.scss";\n        @import "@scss/variables.scss";\n        @import "@scss/mixins.scss";\n        @import "@scss/utils.scss";\n        $src: "${process.env.VUE_APP_OSS_SRC}";\n        `\n      }\n    }\n  },\n  transpileDependencies: [],\n  lintOnSave: false,\n  runtimeCompiler: true, // 是否使用包含运行时编译器的 Vue 构建版本\n  productionSourceMap: !IS_PROD, // 生产环境的 source map\n  parallel: require(\'os\').cpus().length > 1,\n  pwa: {},\n  devServer: {\n    // overlay: { // 让浏览器 overlay 同时显示警告和错误\n    //   warnings: true,\n    //   errors: true\n    // },\n    // open: false, // 是否打开浏览器\n    // host: "localhost",\n    // port: "8080", // 代理断就\n    // https: false,\n    // hotOnly: false, // 热更新\n    proxy: {\n      \'/api\': {\n        target:\n          \'https://www.easy-mock.com/mock/5bc75b55dc36971c160cad1b/sheets\', // 目标代理接口地址\n        secure: false,\n        changeOrigin: true, // 开启代理，在本地创建一个虚拟服务端\n        // ws: true, // 是否启用websockets\n        pathRewrite: {\n          \'^/api\': \'/\'\n        }\n      }\n    }\n  }\n}\n')])])])])}),[],!1,null,null,null);n.default=r.exports}}]);