(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{574:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器存储-从cookie到indexdb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储-从cookie到indexdb"}},[t._v("#")]),t._v(" 浏览器存储-从cookie到indexDB")]),t._v(" "),a("h2",{attrs:{id:"浏览器存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储"}},[t._v("#")]),t._v(" 浏览器存储")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("cookie")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("localStorage")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("sessionStorage")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("indexDB")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("数据生命周期")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一般由服务器生成，可以设置过期时间")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("除非被清理，否则一直存在")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("页面关闭就清理")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("除非被清理，否则一直存在")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("数据存储大小")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4K")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("5M")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("5M")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无限")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("与服务端通信")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("每次都会携带在 header 中，对于请求性能影响")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")])])])]),t._v(" "),a("p",[t._v("对于 "),a("code",[t._v("cookie")]),t._v(" 来说，由于其是在http携带的用户登录的凭证，我们还需要保证它安全性：不被窃取，不被冒用")]),t._v(" "),a("p",[t._v("下面便是cookie的字段")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Value")]),t._v(" "),a("td",[t._v("如果用于保存用户登录态，应该将该值加密，不能使用明文的用户标识")])]),t._v(" "),a("tr",[a("td",[t._v("HttpOnly")]),t._v(" "),a("td",[t._v("不能通过 JS 访问 Cookie，减少 XSS 攻击")])]),t._v(" "),a("tr",[a("td",[t._v("Secure")]),t._v(" "),a("td",[t._v("只能在协议为 HTTPS 的请求中携带")])]),t._v(" "),a("tr",[a("td",[t._v("SameSite")]),t._v(" "),a("td",[t._v("规定浏览器不能在跨域请求中携带 Cookie，减少 CSRF 攻击")])]),t._v(" "),a("tr",[a("td",[t._v("Path")]),t._v(" "),a("td",[t._v("能够携带该键值对的文件路径")])]),t._v(" "),a("tr",[a("td",[t._v("Name")]),t._v(" "),a("td",[t._v("键名")])]),t._v(" "),a("tr",[a("td",[t._v("Domain")]),t._v(" "),a("td",[t._v("能够携带该键值对的域名，开头为"),a("code",[t._v(".")]),t._v(" 则表示其子域名也可以携带")])]),t._v(" "),a("tr",[a("td",[t._v("Size")]),t._v(" "),a("td",[t._v("cookie 大小")])]),t._v(" "),a("tr",[a("td",[t._v("Exptres/Max-Age")]),t._v(" "),a("td",[t._v("cookie 过期时间的时间戳，超时则自动删除")])])])]),t._v(" "),a("p",[t._v("SameSite 的值")]),t._v(" "),a("ul",[a("li",[t._v("None：任何请求都可以携带该 cookie")]),t._v(" "),a("li",[t._v("Lax：部分跨站请求无法发送该 cookie")]),t._v(" "),a("li",[t._v("Strict：所有跨站请求都无法发送该 cookie，仅同站请求允许。")])]),t._v(" "),a("h2",{attrs:{id:"service-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" Service Worker")]),t._v(" "),a("p",[t._v("Service Worker 是运行在浏览器背后的"),a("strong",[t._v("独立线程")]),t._v("，一般可以用来实现缓存功能。使用 Service Worker的话，传输协议必须为 "),a("strong",[t._v("HTTPS")]),t._v("。因为 Service Worker 中涉及到请求拦截，所以必须使用 HTTPS 协议来保障安全。")]),t._v(" "),a("p",[t._v("Service Worker 实现缓存功能一般分为三个步骤：")]),t._v(" "),a("ol",[a("li",[t._v("首先需要先注册 Service Worker，")]),t._v(" "),a("li",[t._v("然后监听到 "),a("code",[t._v("install")]),t._v(" 事件以后就可以缓存需要的文件，")]),t._v(" "),a("li",[t._v("那么在下次用户访问的时候就可以通过拦截请求的方式查询是否存在缓存，存在缓存的话就可以直接读取缓存文件，否则就去请求数据。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navigator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  navigator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sw.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("registration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'service worker 注册成功'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'servcie worker 注册失败'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sw.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听 `install` 事件，回调中缓存所需文件")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'install'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitUntil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    caches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-cache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拦截所有请求事件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果缓存中已经有请求的数据就直接用缓存，否则去请求数据")]),t._v("\nself"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("respondWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    caches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fetch source'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_1-从-cookie-说起"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-从-cookie-说起"}},[t._v("#")]),t._v(" 1：从 Cookie 说起")]),t._v(" "),a("p",[t._v("Cookie 的本职工作并非本地存储，而是“维持状态”。")]),t._v(" "),a("p",[t._v("在 Web 开发的早期，人们亟需解决的一个问题就是状态管理的问题：HTTP 协议是一个无状态协议，服务器接收客户端的请求，返回一个响应，故事到此就结束了，服务器并没有记录下关于客户端的任何信息。那么下次请求的时候，如何让服务器知道“我是我”呢？")]),t._v(" "),a("p",[t._v("在这样的背景下，Cookie 应运而生。")]),t._v(" "),a("p",[t._v("Cookie 说白了就是一个存储在浏览器里的一个小小的文本文件，它附着在 HTTP 请求上，在浏览器和服务器之间“飞来飞去”。它可以携带用户信息，当服务器检查 Cookie 的时候，便可以获取到客户端的状态。")]),t._v(" "),a("p",[a("strong",[t._v("Cookie 以键值对的形式存在")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"cookie的性能劣势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie的性能劣势"}},[t._v("#")]),t._v(" Cookie的性能劣势")]),t._v(" "),a("p",[t._v("Cookie 不够大")]),t._v(" "),a("p",[t._v("大家知道，Cookie 是有体积上限的，它最大只能有 4KB。当 Cookie 超过 4KB 时，它将面临被裁切的命运。这样看来，Cookie 只能用来存取少量的信息。")]),t._v(" "),a("p",[t._v("过量的 Cookie 会带来巨大的性能浪费")]),t._v(" "),a("p",[a("strong",[t._v("Cookie 是紧跟域名的")]),t._v("。我们通过响应头里的 Set-Cookie 指定要存储的 Cookie 值。默认情况下，domain 被设置为设置 Cookie 页面的主机名，我们也可以手动设置 domain 的值：")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("name=xiuyan; domain=xiuyan.me")])]),t._v("\n")])])]),a("p",[a("strong",[t._v("同一个域名下的所有请求，都会携带 Cookie")]),t._v("。大家试想，如果我们此刻仅仅是请求一张图片或者一个 CSS 文件，我们也要携带一个 Cookie 跑来跑去（关键是 Cookie 里存储的信息我现在并不需要），这是一件多么劳民伤财的事情。Cookie 虽然小，请求却可以有很多，随着请求的叠加，这样的不必要的 Cookie 带来的开销将是无法想象的。")]),t._v(" "),a("p",[t._v("随着前端应用复杂度的提高，Cookie 也渐渐演化为了一个“存储多面手”——它不仅仅被用于维持状态，还被塞入了一些乱七八糟的其它信息，被迫承担起了本地存储的“重任”。在没有更好的本地存储解决方案的年代里，Cookie 小小的身体里承载了 4KB 内存所不能承受的压力。")]),t._v(" "),a("p",[t._v("为了弥补 Cookie 的局限性，让“专业的人做专业的事情”，Web Storage 出现了。")]),t._v(" "),a("h2",{attrs:{id:"_2-web-storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-web-storage"}},[t._v("#")]),t._v(" 2：Web Storage")]),t._v(" "),a("p",[t._v("Web Storage 是 HTML5 专门为浏览器存储而提供的数据存储机制。它又分为 Local Storage 与 Session Storage。这两组概念非常相近，我们不妨先理解它们之间的区别，再对它们的共性进行研究。")]),t._v(" "),a("h3",{attrs:{id:"local-storage-与-session-storage-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-storage-与-session-storage-的区别"}},[t._v("#")]),t._v(" Local Storage 与 Session Storage 的区别")]),t._v(" "),a("p",[t._v("两者的区别在于"),a("strong",[t._v("生命周期")]),t._v("与"),a("strong",[t._v("作用域")]),t._v("的不同。")]),t._v(" "),a("ul",[a("li",[t._v("生命周期：Local Storage 是持久化的本地存储，存储在其中的数据是永远不会过期的，使其消失的唯一办法是手动删除；而 Session Storage 是临时性的本地存储，它是会话级别的存储，当会话结束（页面被关闭）时，存储内容也随之被释放。")]),t._v(" "),a("li",[t._v("作用域：Local Storage、Session Storage 和 Cookie 都遵循同源策略。但 Session Storage 特别的一点在于，即便是相同域名下的两个页面，只要它们"),a("strong",[t._v("不在同一个浏览器窗口中")]),t._v("打开，那么它们的 Session Storage 内容便无法共享。")])]),t._v(" "),a("h3",{attrs:{id:"web-storage-的特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-storage-的特性"}},[t._v("#")]),t._v(" Web Storage 的特性")]),t._v(" "),a("ul",[a("li",[t._v("存储容量大： Web Storage 根据浏览器的不同，存储容量可以达到 5-10M 之间。")]),t._v(" "),a("li",[t._v("仅位于浏览器端，不与服务端发生通信。")])]),t._v(" "),a("h3",{attrs:{id:"web-storage-核心-api-使用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-storage-核心-api-使用示例"}},[t._v("#")]),t._v(" Web Storage 核心 API 使用示例")]),t._v(" "),a("p",[t._v("Web Storage 保存的数据内容和 Cookie 一样，是文本内容，以键值对的形式存在。Local Storage 与 Session Storage 在 API 方面无异，这里我们以 localStorage 为例：")]),t._v(" "),a("ul",[a("li",[t._v("存储数据：setItem()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user_name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiuyan'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("读取数据： getItem()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user_name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("删除某一键名对应的数据： removeItem()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user_name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("清空数据记录：clear()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("blockquote",[a("p",[t._v("Local Storage")])]),t._v(" "),a("p",[t._v("Local Storage 在存储方面没有什么特别的限制，理论上 Cookie 无法胜任的、可以用简单的键值对来存取的数据存储任务，都可以交给 Local Storage 来做。")]),t._v(" "),a("p",[t._v("这里给大家举个例子，考虑到 Local Storage 的特点之一是"),a("strong",[t._v("持久")]),t._v("，有时我们更倾向于用它来存储一些内容稳定的资源。比如图片内容丰富的电商网站会用它来存储 Base64 格式的图片字符串：")]),t._v(" "),a("p",[t._v("有的网站还会用它存储一些不经常更新的 CSS、JS 等静态资源。")]),t._v(" "),a("blockquote",[a("p",[t._v("Session Storage")])]),t._v(" "),a("p",[t._v("Session Storage 更适合用来存储生命周期和它同步的"),a("strong",[t._v("会话级别")]),t._v("的信息。这些信息只适用于当前会话，当你开启新的会话时，它也需要相应的更新或释放。比如微博的 Session Storage 就主要是存储你本次会话的浏览足迹：")]),t._v(" "),a("p",[t._v("lasturl 对应的就是你上一次访问的 URL 地址，这个地址是即时的。当你切换 URL 时，它随之更新，当你关闭页面时，留着它也确实没有什么意义了，干脆释放吧。这样的数据用 Session Storage 来处理再合适不过。")]),t._v(" "),a("p",[t._v("这样看来，Web Storage 确实也够强大了。那么 Web Storage 是否能 hold 住所有的存储场景呢？")]),t._v(" "),a("p",[t._v("答案是否定的。大家也看到了，Web Storage 是一个从定义到使用都非常简单的东西。它使用键值对的形式进行存储，这种模式有点类似于对象，却甚至连对象都不是——它只能存储字符串，要想得到对象，我们还需要先对字符串进行一轮解析。")]),t._v(" "),a("p",[t._v("说到底，Web Storage 是对 Cookie 的拓展，它只能用于存储少量的简单数据。当遇到大规模的、结构复杂的数据时，Web Storage 也爱莫能助了。这时候我们就要清楚我们的终极大 boss——IndexedDB！")]),t._v(" "),a("h2",{attrs:{id:"_3-indexeddb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-indexeddb"}},[t._v("#")]),t._v(" 3：IndexedDB")]),t._v(" "),a("p",[t._v("IndexedDB 是一个"),a("strong",[t._v("运行在浏览器上的非关系型数据库")]),t._v("。既然是数据库了，那就不是 5M、10M 这样小打小闹级别了。理论上来说，IndexedDB 是没有存储上限的（一般来说不会小于 250M）。它不仅可以存储字符串，还可以存储二进制数据。")]),t._v(" "),a("p",[t._v("IndexedDB 从推出之日起，其优质教程就层出不绝，我们今天不再着重讲解它的详细操作。接下来，我们遵循 MDN 推荐的操作模式，通过一个基本的 IndexedDB 使用流程，旨在对 IndexedDB 形成一个感性的认知：")]),t._v(" "),a("ol",[a("li",[t._v("打开/创建一个 IndexedDB 数据库（当该数据库不存在时，open 方法会直接创建一个名为 xiaoceDB 新数据库）。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后面的回调中，我们可以通过event.target.result拿到数据库实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" db\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数1位数据库名，参数2为版本号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" request "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("indexedDB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xiaoceDB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用IndexedDB失败时的监听函数")]),t._v("\nrequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'无法使用IndexedDB'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功")]),t._v("\nrequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onsuccess")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处就可以获取到db实例")]),t._v("\n  db "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("result\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你打开了IndexedDB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",[a("li",[t._v("创建一个 object store（object store 对标到数据库中的“表”单位）。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// onupgradeneeded事件会在初始化数据库/版本发生更新时被调用，我们在它的监听函数中创建object store")]),t._v("\nrequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onupgradeneeded")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" objectStore\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果同名表未被创建过，则新建test表")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objectStoreNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    objectStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObjectStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keyPath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",[a("li",[t._v("构建一个事务来执行一些数据库操作，像增加或提取数据等。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建事务，指定表格名称和读写权限")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" transaction "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"readwrite"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拿到Object Store对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" objectStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" transaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("objectStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向表格写入数据")]),t._v("\n  objectStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiuyan'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",[a("li",[t._v("通过监听正确类型的事件以等待操作完成。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 操作成功时的监听函数")]),t._v("\n  transaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("oncomplete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"操作成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 操作失败时的监听函数")]),t._v("\n  transaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这里有一个Error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"indexeddb-的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb-的应用场景"}},[t._v("#")]),t._v(" IndexedDB 的应用场景")]),t._v(" "),a("p",[t._v("通过上面的示例大家可以看出，在 IndexedDB 中，我们可以创建多个数据库，一个数据库中创建多张表，一张表中存储多条数据——这足以 hold 住复杂的结构性数据。IndexedDB 可以看做是 LocalStorage 的一个升级，当数据的复杂度和规模上升到了 LocalStorage 无法解决的程度，我们毫无疑问可以请出 IndexedDB 来帮忙。")]),t._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("浏览器缓存/存储技术的出现和发展，为我们的前端应用带来了无限的转机。近年来基于缓存/存储技术的第三方库层出不绝，此外还衍生出了 PWA这样优秀的 Web 应用模型。可以说，现代前端应用，尤其是移动端应用，之所以可以发展到在体验上叫板 Native 的地步，主要就是仰仗缓存/存储立下的汗马功劳。")]),t._v(" "),a("h1",{attrs:{id:"cookie、sessionstorage、localstorage-详解及应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie、sessionstorage、localstorage-详解及应用场景"}},[t._v("#")]),t._v(" cookie、sessionStorage、localStorage 详解及应用场景")]),t._v(" "),a("blockquote",[a("p",[t._v("Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在，而Web Storage仅仅是为了在本地“存储”数据而生")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" cookie")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Cookie")]),t._v("的作用是与服务器进行交互，作为"),a("code",[t._v("HTTP")]),t._v("规范的一部分而存在")])]),t._v(" "),a("h4",{attrs:{id:"了解cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解cookie"}},[t._v("#")]),t._v(" 了解cookie")]),t._v(" "),a("ol",[a("li",[t._v("要表示唯一的一个"),a("code",[t._v("cookie")]),t._v("值需要："),a("code",[t._v("name")]),t._v("、"),a("code",[t._v("domain")]),t._v("、"),a("code",[t._v("path")])]),t._v(" "),a("li",[t._v("一个"),a("code",[t._v("cookie")]),t._v("就是一个小型的文本文件")]),t._v(" "),a("li",[t._v("虽然"),a("code",[t._v("cookie")]),t._v("保存在浏览器端，但是一般是在服务器端设置的。")]),t._v(" "),a("li",[t._v("可以在"),a("code",[t._v("HTTP")]),t._v("返回体里，通过设置"),a("code",[t._v("Set-Cookie")]),t._v("来告诉浏览器端所要存储的"),a("code",[t._v("cookie")]),t._v("。")]),t._v(" "),a("li",[t._v("用来保存客户浏览器请求服务器页面的请求信息")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"cookie相关字段的说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie相关字段的说明"}},[t._v("#")]),t._v(" cookie相关字段的说明")]),t._v(" "),a("ol",[a("li",[t._v("名称：一个唯一确定"),a("code",[t._v("cookie")]),t._v("的名称。"),a("code",[t._v("cookie")]),t._v("名称是不区分大小写的。"),a("code",[t._v("cookie")]),t._v("的名称必须是经过"),a("code",[t._v("URL")]),t._v("编码的。")]),t._v(" "),a("li",[t._v("值：储存在"),a("code",[t._v("cookie")]),t._v("中的字符串值。值必须被"),a("code",[t._v("URL")]),t._v("编码。")]),t._v(" "),a("li",[t._v("域："),a("code",[t._v("cookie")]),t._v("对于哪个域是有效的。所有向该域发送的请求中都会包含这个"),a("code",[t._v("cookie")]),t._v("信息。如果没有明确设定，那么这个域会被认作来自设置"),a("code",[t._v("cookie")]),t._v("的那个域。")]),t._v(" "),a("li",[t._v("路径：对于指定域中的那个路径，应该向服务器发送"),a("code",[t._v("cookie")]),t._v("。例如，你可以指定"),a("code",[t._v("cookie")]),t._v("只有从"),a("code",[t._v("http://www.wrox.com/books/")]),t._v("中才能访问，那么"),a("code",[t._v("http://www.wrox.com")]),t._v("的页面就不会发送"),a("code",[t._v("cookie")]),t._v("信息，即使请求都是来自同一个域的。")]),t._v(" "),a("li",[t._v("失效时间：表示"),a("code",[t._v("cookie")]),t._v("何时应该被删除的时间戳（也就是，何时应该停止向服务器发送这个"),a("code",[t._v("cookie")]),t._v("）。默认情况下，浏览器会话结束时即将所有"),a("code",[t._v("cookie")]),t._v("删除；不过也可以自己设置删除时间。这个值是个"),a("code",[t._v("GMT")]),t._v("格式的日期（"),a("code",[t._v("Wdy,DD-Mon-YYYY HH:MM:SSGMT")]),t._v("），用于指定应该删除"),a("code",[t._v("cookie")]),t._v("的准确时间。因此，"),a("code",[t._v("cookie")]),t._v("可在浏览器关闭后依然保存在用户的机器上。如果你设置的失效日期是个以前的时间，则"),a("code",[t._v("cookie")]),t._v("会被立刻删除。")]),t._v(" "),a("li",[t._v("安全标志：指定后，"),a("code",[t._v("cookie")]),t._v("只有在使用"),a("code",[t._v("SSL")]),t._v("连接的时候才发送到服务器。例如，"),a("code",[t._v("cookie")]),t._v("信息只能发送给 "),a("code",[t._v("https://www.wrox.com")]),t._v("，而"),a("code",[t._v("http://www.wrox.com")]),t._v("的请求则不能发送 "),a("code",[t._v("cookie")]),t._v("。")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"cookie的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie的应用场景"}},[t._v("#")]),t._v(" cookie的应用场景")]),t._v(" "),a("ul",[a("li",[t._v("简单来说，"),a("code",[t._v("Cookie")]),t._v("就是服务器暂存放在你的电脑里的资料（"),a("code",[t._v(".txt")]),t._v("格式的文本文件），好让服务器用来辨认你的计算机。当你在浏览网站的时候，"),a("code",[t._v("Web")]),t._v("服务器会先送一小小资料放在你的计算机上，"),a("code",[t._v("Cookie")]),t._v(" 会把你在网站上所打的文字或是一些选择都记录下来。当下次你再访问同一个网站，Web服务器会先看看有没有它上次留下的"),a("code",[t._v("Cookie")]),t._v("资料，有的话，就会依据"),a("code",[t._v("Cookie")]),t._v("里的内容来判断使用者，送出特定的网页内容给你。")]),t._v(" "),a("li",[t._v("网站可以利用"),a("code",[t._v("cookie")]),t._v("跟踪统计用户访问该网站的习惯，比如什么时间访问，访问了哪些页面，在每个网页的停留时间等。利用这些信息，一方面是可以为用户提供个性化的服务，另一方面，也可以作为了解所有用户行为的工具，对于网站经营策略的改进有一定参考价值。")]),t._v(" "),a("li",[t._v("目前"),a("code",[t._v("Cookie")]),t._v("最广泛的是记录用户登录信息，这样下次访问时可以不需要输入自己的用户名、密码了——当然这种方便也存在用户信息泄密的问题，尤其在多个用户共用一台电脑时很容易出现这样的问题。")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"设置-修改-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置-修改-cookie"}},[t._v("#")]),t._v(" 设置／修改 "),a("code",[t._v("cookie")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("cookie")]),t._v("的原生的"),a("code",[t._v("API")]),t._v("，需要我们自己进行封装")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//直接复制 【直接复制不是覆盖，而是追加】\ndocument.cookie = 'name=value;'\n\n//封装setCookie方法\n//setCookie 首先对name和value进行编码\nfunction setCookie(name,value,expires,path,domain,secure){\n\n    var cookie = encodeURIComponent(name)+ '=' +encodeURIComponent(value);\n    \n    //注意分号后面要有空格\n    //后面的4个参数是可选的，所以用if判断并追加\n     \n    if(expires){\n        cookie +='; expires='+expires.toGMTString();\n    }\n    if(path){\n        cookie += '; path='+path;\n    }\n    if(domain){\n        cookie += '; domain='+domain;\n    }\n    if(secure){\n        cookie += '; secure='+secure;\n    }\n    document.cookie = cookie;\n}\n")])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"删除cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除cookie"}},[t._v("#")]),t._v(" 删除cookie")]),t._v(" "),a("blockquote",[a("p",[t._v("输入参数为"),a("code",[t._v("name")]),t._v("、"),a("code",[t._v("path")]),t._v("、"),a("code",[t._v("domain")]),t._v(" 这"),a("code",[t._v("3")]),t._v("个是唯一标识"),a("code",[t._v("cookie")]),t._v("的,将"),a("code",[t._v("max-age")]),t._v("设置为0，就可以立即删除了.")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function remove(name,domain,path){\n    document.cookie = 'name='+name\n                    +'; domain='+domain\n                    +'; path='+path\n                    +'; max-age=0';\n}\n")])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"cookie缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie缺点"}},[t._v("#")]),t._v(" cookie缺点")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Cookie")]),a("strong",[t._v("数量和长度")]),t._v("的限制。"),a("code",[t._v("IE6")]),t._v("或更低版本每个"),a("code",[t._v("domian")]),t._v("下最多"),a("code",[t._v("20")]),t._v("个"),a("code",[t._v("cookie")]),t._v("，"),a("code",[t._v("IE7")]),t._v("和之后的版本最多可以有 "),a("code",[t._v("50")]),t._v("个"),a("code",[t._v("cookie")]),t._v("，"),a("code",[t._v("Firefox")]),t._v("最多"),a("code",[t._v("50")]),t._v("个"),a("code",[t._v("cookie")]),t._v("，"),a("code",[t._v("chrome")]),t._v("和"),a("code",[t._v("Safari")]),t._v("没有做硬性限制，每个"),a("code",[t._v("cookie")]),t._v("长度不能超过"),a("code",[t._v("4KB")]),t._v("，否则会被截掉。")]),t._v(" "),a("li",[a("code",[t._v("IE")]),t._v("和"),a("code",[t._v("Opera")]),t._v(" 会"),a("strong",[t._v("清理")]),t._v("近期最少使用的"),a("code",[t._v("cookie")]),t._v("，"),a("code",[t._v("Firefox")]),t._v("会随机清理"),a("code",[t._v("cookie")]),t._v("。这就导致不能永久储存信息。")]),t._v(" "),a("li",[a("strong",[t._v("安全性问题")]),t._v("。如果"),a("code",[t._v("cookie")]),t._v("被人拦截了，那人就可以取得所有的"),a("code",[t._v("session")]),t._v("信息。即使加密也与事无补，因为拦截者并不需要知道"),a("code",[t._v("cookie")]),t._v("的意义，他只要原样转发"),a("code",[t._v("cookie")]),t._v("就可以达到目的了。")]),t._v(" "),a("li",[t._v("并且每次你请求一个新的页面的时候，"),a("code",[t._v("cookie")]),t._v("只要满足作用域和作用路径，"),a("code",[t._v("Cookie")]),t._v("都会被发送过去，这样无形中"),a("strong",[t._v("浪费了带宽")]),t._v("。")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"本地储存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地储存"}},[t._v("#")]),t._v(" 本地储存")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Web Storage`是为了在本地“存储”数据而生。`html5`中的 `Web Storage` 包括了两种存储方式：`sessionStorage`和`localStorage\n")])])])]),t._v(" "),a("h4",{attrs:{id:"localstorage-sessionstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localstorage-sessionstorage"}},[t._v("#")]),t._v(" localStorage && sessionStorage")]),t._v(" "),a("blockquote",[a("p",[t._v("只要有效期和作用域，浏览器每次访问的时候都会将"),a("code",[t._v("Storage")]),t._v("载入到内存里")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("localStorage")]),t._v("用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。")]),t._v(" "),a("li",[a("code",[t._v("sessionStorage")]),t._v("用于本地存储一个会话（"),a("code",[t._v("session")]),t._v("）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此"),a("code",[t._v("sessionStorage")]),t._v("不是一种持久化的本地存储，仅仅是会话级别的存储。也就是说只要这个浏览器窗口没有关闭，即使刷新页面或进入同源另一页面，数据仍然存在。关闭窗口后，"),a("code",[t._v("sessionStorage")]),t._v("即被销毁")]),t._v(" "),a("li",[a("code",[t._v("localStorage")]),t._v("也受同源策略的限制。")]),t._v(" "),a("li",[a("code",[t._v("localStorage")]),t._v("和"),a("code",[t._v("sessionStorage")]),t._v("都具有相同的操作方法，如"),a("code",[t._v("setItem")]),t._v(","),a("code",[t._v("getItem")]),t._v(","),a("code",[t._v("removeItem")]),t._v(","),a("code",[t._v("clear")]),t._v("等方法，不像"),a("code",[t._v("cookie")]),t._v("需要前端开发者自己封装"),a("code",[t._v("setCookie")]),t._v("，"),a("code",[t._v("getCookie")]),t._v("。")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"localstorage应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localstorage应用场景"}},[t._v("#")]),t._v(" localStorage应用场景")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("localStorage")]),t._v("可以用于存储该浏览器对该页面的访问次数，当然，如果换个浏览器，这个次数就重新开始计数了。还可以用来存储一些固定不变的页面信息，这样就不需要每次都重新加载了，这个值也可以进行覆盖。")])]),t._v(" "),a("p",[t._v("访问这个页面的时候，"),a("code",[t._v("script")]),t._v(" 脚本会自动运行，"),a("code",[t._v("localStorage.pagecount")]),t._v("就会 "),a("code",[t._v("++")]),t._v(" 了，从而达到统计页面访问次数的目的。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<!DOCTYPE HTML>\n<html>\n<body>\n\n<script type="text/javascript">\n\nif (localStorage.pagecount){\n    localStorage.pagecount=Number(localStorage.pagecount) +1;\n}\nelse{\n    localStorage.pagecount=1;\n}\n\ndocument.write("Visits: " + localStorage.pagecount + " time(s).");\n\n<\/script> \n\n<p>刷新页面会看到计数器在增长。</p>\n\n<p>请关闭浏览器窗口，然后再试一次，计数器会继续计数。</p>\n\n</body>\n</html>\n')])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"sessionstorage应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage应用场景"}},[t._v("#")]),t._v(" sessionStorage应用场景")]),t._v(" "),a("blockquote",[a("p",[t._v("使用 "),a("code",[t._v("sessionStorage")]),t._v(" 进行页面传值")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//有时会有这样的需求，我们从A页面获取的数据，需要在B页面发送给后端，这时就需要我们将数据从A页面传递到B页面。\n\n//A页面\n//首先检测Storage\nif (typeof(Storage) !== "undefined") {\n    sessionStorage.\'name\'=value;\n} else {\n    sessionStorage.name = \'\';\n}\n\n\n//B页面\nif (typeof(Storage) !== "undefined") {\n    var B_name = sessionStorage.name;\n    }\n//注意，如果要储存的数据对象、数组\n//那么在储存之前，用JSON.stringify将数据转换为字符串\n//读取之后，再用JSON.parse转换为对象、数组\n\n//存储\nvar obj = {name:"xiaoxiong",age:25};\nvar arr = [1,2,3,4];\nwindow.sessionStorage.obj = JSON.stringify(obj);\nwindow.sessionStorage.arr = JSON.stringify(arr);\n\n//读取\nvar OBJ = window.sessionStorage.obj;//"{"name":"xiaoxiong","age":25}"\nJSON.parse(OBJ);//Object {name: "xiaoxiong", age: 25}\n\nvar ARR = window.sessionStorage.arr;//"[1,2,3,4]"\nJSON.parse(ARR);//(4) [1, 2, 3, 4]\n')])])]),a("hr"),t._v(" "),a("p",[a("strong",[t._v("总结一下")]),t._v("："),a("code",[t._v("cookie")]),t._v("数量和长度都有限制，"),a("code",[t._v("Web Storage")]),t._v("解决了这样的限制，且"),a("code",[t._v("localStorage")]),t._v("做到了永久储存。但是"),a("code",[t._v("Cookie")]),t._v("也是不可以或缺的："),a("code",[t._v("Cookie")]),t._v("的作用是与服务器进行交互，作为"),a("code",[t._v("HTTP")]),t._v("规范的一部分而存在 ，而"),a("code",[t._v("Web Storage")]),t._v("仅仅是为了在本地“存储”数据而生。")])])}),[],!1,null,null,null);a.default=n.exports}}]);